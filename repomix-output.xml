This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.dockerignore
.gitattributes
.gitignore
app.py
docker-compose.yml
Dockerfile
prepare_release.ps1
README_DOCKER.md
README.md
requirements.txt
static/blue_small_logo.svg
static/css/style.css
static/js/script.js
static/logo.svg
static/white_small_logo.svg
templates/admin.html
templates/brain_example.html
templates/brain.html
templates/chest_example.html
templates/chest.html
templates/edit_user.html
templates/education.html
templates/error.html
templates/fracture_example.html
templates/fracture.html
templates/index.html
templates/information.html
templates/layout.html
templates/login.html
templates/pneumonia.html
templates/profile.html
templates/register.html
templates/skin_example.html
templates/skin.html
testbilb.ipynb
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".dockerignore">
.git
.gitignore
.gitattributes
__pycache__
*.pyc
*.pyo
*.pyd
venv
.env
.venv
README.md
prepare_release.ps1
app.log
</file>

<file path=".gitattributes">
best_model_skin.h5 filter=lfs diff=lfs merge=lfs -text
</file>

<file path=".gitignore">
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# Virtual Environment
venv/
ENV/

# IDE
.idea/
.vscode/
*.swp
*.swo

# Logs
*.log
logs/
app.log
security.log

# Database
*.db
*.sqlite3
instance/

# Uploads
static/uploads/*
!static/uploads/.gitkeep

# Models (large files)
models/*
!models/.gitkeep

# System Files
.DS_Store
Thumbs.db
</file>

<file path="app.py">
import os
import numpy as np
import io
import base64
import traceback
import logging
from datetime import datetime
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
from matplotlib.colors import LinearSegmentedColormap
from werkzeug.utils import secure_filename
from flask import Flask, request, render_template, jsonify, redirect, url_for, flash, session
from flask_sqlalchemy import SQLAlchemy
from flask_login import LoginManager, UserMixin, login_user, login_required, logout_user, current_user
from werkzeug.security import generate_password_hash, check_password_hash
from sqlalchemy.orm import Session
from sqlalchemy import inspect, text
from functools import wraps
import torch
import tensorflow as tf
import cv2
from ultralytics import YOLO
from monai.transforms import (
    Compose, LoadImaged, EnsureChannelFirstd, Spacingd, Orientationd,
    ScaleIntensityRanged, CropForegroundd, Resized, ToTensord
)
from monai.inferers import sliding_window_inference
from monai.networks.nets import UNet
from monai.networks.layers import Norm
from monai.data import Dataset

print("Starting application...")

# Flask application setup
app = Flask(__name__)
app.secret_key = 'medxpert_secret_key'

# Database configuration
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///users.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

# Login manager configuration
login_manager = LoginManager()
login_manager.init_app(app)
login_manager.login_view = 'login'

# User model
class User(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    password_hash = db.Column(db.String(128))
    email = db.Column(db.String(120), unique=True)
    full_name = db.Column(db.String(120))
    phone = db.Column(db.String(20))
    role = db.Column(db.String(20), default='user')  # 'user' or 'admin'
    created_at = db.Column(db.DateTime, default=datetime.utcnow)
    last_login = db.Column(db.DateTime)
    
    def set_password(self, password):
        self.password_hash = generate_password_hash(password)
        
    def check_password(self, password):
        return check_password_hash(self.password_hash, password)
        
    def is_admin(self):
        return self.role == 'admin'

@login_manager.user_loader
def load_user(user_id):
    return db.session.get(User, int(user_id))

# Database migration helper function
def migrate_database():
    # Check if we need to add the role column
    inspector = inspect(db.engine)
    columns = [column['name'] for column in inspector.get_columns('user')]
    
    if 'role' not in columns:
        print("Migrating database: Adding 'role' column to User table")
        with db.engine.begin() as conn:
            # Using begin() to automatically handle transaction
            conn.execute(text("ALTER TABLE user ADD COLUMN role VARCHAR(20) DEFAULT 'user'"))
        print("Database migration complete")
    else:
        print("Database schema is up to date")
    
# Create database tables and default admin
with app.app_context():
    try:
        db.create_all()  # Only create tables if they don't exist
        
        # Migrate database if needed
        migrate_database()
        
        # Check if we need to create a default admin user
        if not User.query.filter_by(username='admin').first():
            admin = User(
                username='admin',
                email='admin@medxpert.com',
                full_name='System Administrator',
                role='admin'
            )
            admin.set_password('admin123')  # Default password - should be changed immediately
            db.session.add(admin)
            db.session.commit()
            print("Default admin user created")
        
        print("Database tables checked/created successfully")
    except Exception as e:
        print(f"Error creating/migrating database tables: {str(e)}")

# Configure upload folders
UPLOAD_FOLDER = os.path.join('static', 'uploads')
os.makedirs(UPLOAD_FOLDER, exist_ok=True)
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
app.config['MAX_CONTENT_LENGTH'] = 16 * 1024 * 1024  # 16MB max upload

# Allowed file extensions
ALLOWED_EXTENSIONS = {'png', 'jpg', 'jpeg', 'nii.gz'}

def allowed_file(filename):
    return '.' in filename and (
        filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS or
        filename.endswith('.nii.gz')  # Special handling for .nii.gz files
    )

# Set up device
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

# Model loading functions
def load_brain_model():
    model = UNet(
        spatial_dims=3,
        in_channels=1,
        out_channels=2,
        channels=(32, 64, 128, 256, 512),
        strides=(2, 2, 2, 2),
        num_res_units=2,
        norm=Norm.BATCH,
    ).to(device)
    state_dict = torch.load("models/best_metric_model.pth", weights_only=True, map_location=device)
    model.load_state_dict(state_dict)
    model.eval()
    return model

def load_skin_model():
    model = tf.keras.models.load_model("models/best_model_skin.h5")
    return model

def load_chest_model():
    model = tf.keras.models.load_model("models/best_model_chest.h5")
    return model

def load_fracture_model():
    model = YOLO("models/best.pt")
    return model

# Initialize model variables as None for lazy loading
print("Initializing application...")
brain_model = None
skin_model = None
chest_model = None
fracture_model = None

def get_brain_model():
    global brain_model
    if brain_model is None:
        print("Loading brain model...")
        brain_model = load_brain_model()
    return brain_model

def get_skin_model():
    global skin_model
    if skin_model is None:
        print("Loading skin model...")
        skin_model = load_skin_model()
    return skin_model

def get_chest_model():
    global chest_model
    if chest_model is None:
        print("Loading chest model...")
        chest_model = load_chest_model()
    return chest_model

def get_fracture_model():
    global fracture_model
    if fracture_model is None:
        print("Loading fracture model...")
        fracture_model = load_fracture_model()
    return fracture_model

# Brain tumor transforms
brain_transforms = Compose([
    LoadImaged(keys=["vol"]),
    EnsureChannelFirstd(keys=["vol"]),
    Spacingd(keys=["vol"], pixdim=(1.5, 1.5, 1.0), mode="bilinear"),
    Orientationd(keys=["vol"], axcodes="RAS"),
    ScaleIntensityRanged(keys=["vol"], a_min=-1000, a_max=1000, b_min=0.0, b_max=1.0, clip=True),
    CropForegroundd(keys=["vol"], source_key="vol", allow_smaller=True),
    Resized(keys=["vol"], spatial_size=[128, 128, 64]),
    ToTensord(keys=["vol"]),
])

# Configure logging
logging.basicConfig(filename='app.log', level=logging.INFO,
                   format='%(asctime)s - %(levelname)s - %(message)s')

# Helper functions for Grad-CAM visualization
def make_gradcam_heatmap(img_array, model, last_conv_layer_name, pred_index=None):
    """
    Creates a Grad-CAM heatmap using the exact implementation that works with the chest model
    """
    grad_model = tf.keras.models.Model(
        [model.inputs], [model.get_layer(last_conv_layer_name).output, model.output]
    )
    with tf.GradientTape() as tape:
        conv_outputs, predictions = grad_model(img_array)
        if pred_index is None:
            pred_index = tf.argmax(predictions[0])
        class_channel = predictions[:, pred_index]

    grads = tape.gradient(class_channel, conv_outputs)

    pooled_grads = tf.reduce_mean(grads, axis=(0, 1, 2))

    conv_outputs = conv_outputs[0]
    heatmap = conv_outputs @ pooled_grads[..., tf.newaxis]
    heatmap = tf.squeeze(heatmap)

    heatmap = tf.maximum(heatmap, 0) / tf.math.reduce_max(heatmap)
    return heatmap.numpy()

def overlay_heatmap(img, heatmap, alpha=0.4, colormap=cv2.COLORMAP_JET):
    """
    Overlays the heatmap on the input image with specified transparency
    """
    # Resize heatmap to image size
    heatmap = cv2.resize(heatmap, (img.shape[1], img.shape[0]))
    heatmap = np.uint8(255 * heatmap)
    heatmap_colored = cv2.applyColorMap(heatmap, colormap)
    overlayed_img = cv2.addWeighted(img, 1 - alpha, heatmap_colored, alpha, 0)
    return overlayed_img

# Function to adjust image brightness and contrast
def adjust_image(image, brightness=0, contrast=1):
    """
    Adjust the brightness and contrast of an image.
    :param image: Input image as numpy array
    :param brightness: Brightness adjustment factor (-1.0 to 1.0)
    :param contrast: Contrast adjustment factor (0.0 to 2.0)
    :return: Adjusted image
    """
    # Convert brightness from (-100 to 100) to (-1.0 to 1.0)
    brightness_factor = float(brightness) / 100.0
    
    # Convert contrast from (0 to 200) to (0.0 to 2.0)
    contrast_factor = float(contrast) / 100.0
    
    # Apply brightness adjustment
    adjusted = image + brightness_factor
    
    # Apply contrast adjustment: f(x) = (x - 0.5) * contrast + 0.5
    if contrast_factor != 1.0:
        adjusted = (adjusted - 0.5) * contrast_factor + 0.5
    
    # Clip values to valid range [0, 1]
    adjusted = np.clip(adjusted, 0, 1)
    
    return adjusted

# Error handlers
@app.errorhandler(500)
def internal_error(error):
    app.logger.error(f'Server error: {error}')
    return render_template('error.html', error="Internal server error occurred. Please try again."), 500

@app.errorhandler(404)
def not_found_error(error):
    app.logger.error(f'Page not found: {request.url}')
    return render_template('error.html', error="Page not found."), 404

# Routes
@app.route('/')
def home():
    return render_template('index.html')

@app.route('/explore-models')
def explore_models():
    return redirect(url_for('home'))

# Keep compatibility with old route
@app.route('/information')
def information():
    return redirect(url_for('home'))

@app.route('/brain', methods=['GET', 'POST'])
def brain():
    if request.method == 'POST':
        # If it's a POST request, redirect to predict_brain
        return redirect(url_for('predict_brain'))
    # If it's a GET request, just render the template
    return render_template('brain.html')

@app.route('/skin')
def skin():
    return render_template('skin.html')

@app.route('/chest')
def chest():
    return render_template('chest.html')

@app.route('/fracture')
def fracture():
    return render_template('fracture.html')

@app.route('/predict/brain', methods=['POST'])
def predict_brain():
    if 'file' not in request.files:
        flash('No file was uploaded', 'danger')
        return render_template('brain.html')
        
    file = request.files['file']
    if file.filename == '':
        flash('No file selected', 'danger')
        return render_template('brain.html')
    
    if file and allowed_file(file.filename):
        try:
            filename = secure_filename(file.filename)
            filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            file.save(filepath)
            
            print(f"File saved to: {filepath}")
            
            # Get model on demand
            model = get_brain_model()
            
            # Process with brain tumor model
            test_sample = {"vol": filepath}
            test_ds = Dataset(data=[test_sample], transform=brain_transforms)
            sample = test_ds[0]
            t_volume = sample['vol'].unsqueeze(0).to(device)
            
            if t_volume.shape[1] != 1:
                t_volume = torch.mean(t_volume, dim=1, keepdim=True)
            
            print(f"Volume shape: {t_volume.shape}")
                
            with torch.no_grad():
                test_outputs = sliding_window_inference(t_volume, (128, 128, 64), 4, model)
                test_outputs = torch.sigmoid(test_outputs)
                test_outputs = test_outputs > 0.9
            
            print("Inference complete, generating images")    
                
            # Get all slices for visualization
            orig_vol = t_volume.cpu().numpy()[0, 0]
            pred_mask = test_outputs.cpu().numpy()[0, 1]
            
            print(f"Original volume shape: {orig_vol.shape}")
            print(f"Prediction mask shape: {pred_mask.shape}")
            
            # Process all slices with tumor
            slice_scores = [float(np.sum(pred_mask[:,:,i])) for i in range(pred_mask.shape[2])]
            valid_slices = [i for i, score in enumerate(slice_scores) if score > 0]
            
            print(f"Number of slices with tumor: {len(valid_slices)}")
            
            result_images = []
            original_images = []  # Store original images without segmentation

            colors = [(0, 0, 0, 0), (246/255, 242/255, 102/255, 1)]  # RGBA format (yellow)
            tumor_cmap = LinearSegmentedColormap.from_list('tumor_yellow', colors, N=256)

            for slice_idx in range(pred_mask.shape[2]):
                # Create original image
                plt.figure(figsize=(10, 8))
                plt.imshow(orig_vol[:,:,slice_idx], cmap='gray')
                plt.axis('off')
                
                # Save to bytes buffer
                buf = io.BytesIO()
                plt.savefig(buf, format='png', bbox_inches='tight')
                plt.close()
                buf.seek(0)
                
                # Convert to base64 for embedding in HTML
                orig_img_str = base64.b64encode(buf.read()).decode('utf-8')
                original_images.append(orig_img_str)
                
                # Create overlay image
                plt.figure(figsize=(10, 8))
                plt.imshow(orig_vol[:,:,slice_idx], cmap='gray')
                
                # Only overlay tumor if detected in this slice
                if slice_scores[slice_idx] > 0:
                    plt.imshow(pred_mask[:,:,slice_idx], alpha=0.5, cmap=tumor_cmap)
                plt.axis('off')
                
                # Save to bytes buffer
                buf = io.BytesIO()
                plt.savefig(buf, format='png', bbox_inches='tight')
                plt.close()
                buf.seek(0)
                
                # Convert to base64 for embedding in HTML
                img_str = base64.b64encode(buf.read()).decode('utf-8')
                result_images.append(img_str)
            
            print(f"Generated {len(result_images)} result images")
            
            # Get the best slice to show first (first slice with tumor, or middle slice if no tumor)
            best_slice_idx = valid_slices[0] if valid_slices else pred_mask.shape[2] // 2
            
            # Get tumor information summary
            tumor_info = {
                'total_slices': pred_mask.shape[2],
                'slices_with_tumor': len(valid_slices),
                'tumor_slice_indices': valid_slices,
                'first_tumor_slice': valid_slices[0] if valid_slices else None
            }
            
            return render_template('brain.html', 
                                  original_img_b64=original_images[best_slice_idx],
                                  segmented_img_b64=result_images[best_slice_idx],
                                  all_original_slices=original_images,
                                  all_segmented_slices=result_images,
                                  tumor_info=tumor_info,
                                  total_slices=pred_mask.shape[2],
                                  current_slice_idx=best_slice_idx)
            
        except Exception as e:
            print(f"Error processing brain scan: {str(e)}")
            traceback_info = traceback.format_exc()
            print(f"Traceback: {traceback_info}")
            flash(f'Error processing image: {str(e)}', 'danger')
            return render_template('brain.html')
    
    flash('Invalid file format. Please upload a valid NIFTI (.nii.gz) file.', 'warning')
    return render_template('brain.html')

@app.route('/predict/skin', methods=['POST'])
def predict_skin():
    if 'file' not in request.files:
        return jsonify({'status': 'error', 'message': 'No file was uploaded'})
        
    file = request.files['file']
    if file.filename == '':
        return jsonify({'status': 'error', 'message': 'No file selected'})
        
    if file and allowed_file(file.filename):
        filename = secure_filename(file.filename)
        filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
        file.save(filepath)
        
        try:
            # Get model on demand
            model = get_skin_model()
            
            # Process with skin cancer model
            img = tf.keras.preprocessing.image.load_img(filepath, target_size=(300, 300))
            img_array = tf.keras.preprocessing.image.img_to_array(img)
            img_array = np.expand_dims(img_array, axis=0) / 255.0
            
            prediction = model.predict(img_array)
            predicted_class = np.argmax(prediction, axis=1)[0]
            confidence = float(prediction[0][predicted_class]) * 100
            
            # Get the original image as base64
            with open(filepath, "rb") as img_file:
                img_base64 = base64.b64encode(img_file.read()).decode('utf-8')
                
            class_names = ['Benign', 'Malignant']
            result = {
                'status': 'success',
                'class': class_names[predicted_class],
                'confidence': confidence,
                'image_path': f'/static/uploads/{filename}',
                'image_base64': img_base64
            }
            
            return jsonify(result)
            
        except Exception as e:
            return jsonify({
                'status': 'error',
                'message': f'Error processing image: {str(e)}'
            })
    
    return jsonify({
        'status': 'error',
        'message': 'Invalid file format. Please upload a valid image.'
    })

@app.route('/predict/chest', methods=['POST'])
def predict_chest():
    if 'file' not in request.files:
        return jsonify({'status': 'error', 'message': 'No file was uploaded'})
        
    file = request.files['file']
    if file.filename == '':
        return jsonify({'status': 'error', 'message': 'No file selected'})
        
    if file and allowed_file(file.filename):
        filename = secure_filename(file.filename)
        filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
        file.save(filepath)
        
        try:
            # Get model on demand
            model = get_chest_model()
            
            # Process with chest X-ray model
            img = tf.keras.preprocessing.image.load_img(filepath, target_size=(224, 224))
            img_array = tf.keras.preprocessing.image.img_to_array(img)
            img_array_norm = np.expand_dims(img_array, axis=0) / 255.0
            
            # Make predictions
            pred_probs = model.predict(img_array_norm)[0]
            predicted_class = np.argmax(pred_probs)
            confidence = float(pred_probs[predicted_class]) * 100
            
            class_labels = ['COVID', 'Lung_Opacity', 'Normal', 'Viral Pneumonia']
            
            # Generate Grad-CAM visualization using the known working layer name
            last_conv_layer_name = "top_conv"
            
            try:
                # Generate the heatmap
                heatmap = make_gradcam_heatmap(img_array_norm, model, last_conv_layer_name, pred_index=predicted_class)
                
                if heatmap is not None:
                    # Convert original image to uint8 for visualization
                    img_uint8 = img_array.astype(np.uint8)
                    
                    # Create overlay visualization with the heatmap
                    heatmap_img = overlay_heatmap(img_uint8, heatmap)
                    
                    # Save Grad-CAM visualization
                    gradcam_filename = f"gradcam_{filename}"
                    gradcam_filepath = os.path.join(app.config['UPLOAD_FOLDER'], gradcam_filename)
                    cv2.imwrite(gradcam_filepath, heatmap_img)
                    
                    # Get both original and Grad-CAM images as base64
                    with open(filepath, "rb") as img_file:
                        orig_img_base64 = base64.b64encode(img_file.read()).decode('utf-8')
                    
                    with open(gradcam_filepath, "rb") as img_file:
                        gradcam_base64 = base64.b64encode(img_file.read()).decode('utf-8')
                    
                    result = {
                        'status': 'success',
                        'class': class_labels[predicted_class],
                        'confidence': confidence,
                        'image_path': f'/static/uploads/{filename}',
                        'original_base64': orig_img_base64,
                        'gradcam_base64': gradcam_base64
                    }
                else:
                    raise ValueError("Failed to generate heatmap")
            except Exception as e:
                print(f"Error generating Grad-CAM: {str(e)}")
                traceback.print_exc()
                # Fallback to original image if Grad-CAM fails
                with open(filepath, "rb") as img_file:
                    orig_img_base64 = base64.b64encode(img_file.read()).decode('utf-8')
                
                result = {
                    'status': 'success',
                    'class': class_labels[predicted_class],
                    'confidence': confidence,
                    'image_path': f'/static/uploads/{filename}',
                    'original_base64': orig_img_base64,
                    'gradcam_error': f'Could not generate Grad-CAM: {str(e)}'
                }
            
            return jsonify(result)
            
        except Exception as e:
            print(f"Error processing chest X-ray: {str(e)}")
            traceback_info = traceback.format_exc()
            print(f"Traceback: {traceback_info}")
            return jsonify({
                'status': 'error',
                'message': f'Error processing image: {str(e)}'
            })
    
    return jsonify({
        'status': 'error',
        'message': 'Invalid file format. Please upload a valid X-ray image.'
    })

@app.route('/predict/fracture', methods=['POST'])
def predict_fracture():
    if 'file' not in request.files:
        return jsonify({'status': 'error', 'message': 'No file was uploaded'})
        
    file = request.files['file']
    if file.filename == '':
        return jsonify({'status': 'error', 'message': 'No file selected'})
    
    if file and allowed_file(file.filename):
        try:
            filename = secure_filename(file.filename)
            filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            file.save(filepath)
            
            # Get model on demand
            model = get_fracture_model()
            
            # Read image
            img = cv2.imread(filepath)
            if img is None:
                return jsonify({
                    'status': 'error',
                    'message': 'Unable to read image file. Please upload a valid image.'
                })
            
            # Save original image as base64 before processing
            original_img = img.copy()
            _, buffer_original = cv2.imencode('.jpg', original_img)
            original_img_str = base64.b64encode(buffer_original).decode('utf-8')
            
            # Get image dimensions
            height, width = img.shape[:2]
            
            # Run inference
            results = model(img)
            
            # Process results
            detections = []
            
            for result in results:
                boxes = result.boxes
                
                # Save the image with bounding boxes
                for box in boxes:
                    # Get box coordinates
                    x1, y1, x2, y2 = box.xyxy[0]
                    x1, y1, x2, y2 = int(x1), int(y1), int(x2), int(y2)
                    
                    # Draw rectangle with yellow color
                    cv2.rectangle(img, (x1, y1), (x2, y2), color=(102, 242, 246), thickness=2)
                    
                    # Get confidence score and class name
                    conf = float(box.conf[0])
                    cls = int(box.cls[0])
                    label = f"Fracture {conf:.2f}%"
                    
                    # Draw label with yellow background
                    text_size = cv2.getTextSize(label, cv2.FONT_HERSHEY_SIMPLEX, 0.5, 1)[0]
                    cv2.rectangle(img, (x1, y1 - text_size[1] - 5), (x1 + text_size[0], y1), (102, 242, 246), -1)
                    cv2.putText(img, label, (x1, y1 - 5), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 0), 1)
                    
                    # Store detection data
                    detections.append({
                        'class': model.names[cls],
                        'confidence': float(conf),
                        'box': [x1, y1, x2, y2]
                    })
            
            # Save the annotated image
            output_filename = f"result_{filename}"
            output_path = os.path.join(app.config['UPLOAD_FOLDER'], output_filename)
            cv2.imwrite(output_path, img)
            
            # Convert processed image to base64 for display
            _, buffer = cv2.imencode('.jpg', img)
            img_str = base64.b64encode(buffer).decode('utf-8')
            
            # Create message based on detections
            if len(detections) > 0:
                message = f"Found {len(detections)} potential fracture(s)."
            else:
                message = "No fractures detected in this image."
            
            # Return results with both original and processed images
            return jsonify({
                'status': 'success',
                'message': message,
                'original_image': original_img_str,
                'image': img_str,
                'detections': detections,
                'dimensions': {
                    'width': width,
                    'height': height
                }
            })
            
        except Exception as e:
            print(f"Error processing image: {str(e)}")
            traceback_info = traceback.format_exc()
            print(f"Traceback: {traceback_info}")
            return jsonify({
                'status': 'error',
                'message': f'Error processing image: {str(e)}'
            })
    
    return jsonify({
        'status': 'error',
        'message': 'Invalid file format. Please upload a valid image.'
    })

# Add security headers middleware with error handling
@app.after_request
def add_security_headers(response):
    try:
        response.headers['X-Content-Type-Options'] = 'nosniff'
        response.headers['X-Frame-Options'] = 'SAMEORIGIN'
        response.headers['X-XSS-Protection'] = '1; mode=block'
        response.headers['Strict-Transport-Security'] = 'max-age=31536000; includeSubDomains'
    except Exception as e:
        logging.error(f"Error adding security headers: {str(e)}")
    return response

# Add context processor to provide current year to all templates
@app.context_processor
def inject_year():
    return {'current_year': datetime.now().year}

# Create error template if it doesn't exist
def create_error_template():
    error_template = """
    <!DOCTYPE html>
    <html>
    <head>
        <title>Error</title>
        <style>
            body { font-family: Arial, sans-serif; margin: 40px; }
            .error-container { text-align: center; }
            .error-message { color: #721c24; background-color: #f8d7da; padding: 20px; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="error-container">
            <h1>Error</h1>
            <div class="error-message">
                {{ error }}
            </div>
            <p><a href="{{ url_for('home') }}">Return to Home</a></p>
        </div>
    </body>
    </html>
    """
    try:
        os.makedirs('templates', exist_ok=True)
        with open('templates/error.html', 'w') as f:
            f.write(error_template)
    except Exception as e:
        logging.error(f"Error creating error template: {str(e)}")

# Create error template on startup
create_error_template()

@app.route('/profile', methods=['GET', 'POST'])
@login_required
def profile():
    if request.method == 'POST':
        # Update user information
        current_user.email = request.form.get('email')
        current_user.full_name = request.form.get('full_name')
        current_user.phone = request.form.get('phone')
        
        # Update password if provided
        new_password = request.form.get('new_password')
        if new_password:
            current_user.set_password(new_password)
            
        db.session.commit()
        flash('Profile updated successfully')
        return redirect(url_for('profile'))
        
    return render_template('profile.html')

# Add a dashboard route
@app.route('/dashboard')
@login_required
def dashboard():
    return render_template('dashboard.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    if current_user.is_authenticated:
        return redirect(url_for('home'))
        
    if request.method == 'POST':
        username = request.form.get('username')
        password = request.form.get('password')
        
        user = User.query.filter_by(username=username).first()
        
        if user and user.check_password(password):
            login_user(user)
            user.last_login = datetime.utcnow()  # Update last login time
            db.session.commit()
            next_page = request.args.get('next')
            if not next_page or not next_page.startswith('/'):
                next_page = url_for('home')
            return redirect(next_page)
        else:
            # Simple error message
            return render_template('login.html', error="Invalid username or password.")
            
    return render_template('login.html')

@app.route('/register', methods=['GET', 'POST'])
def register():
    if current_user.is_authenticated:
        return redirect(url_for('home'))
        
    if request.method == 'POST':
        username = request.form.get('username')
        password = request.form.get('password')
        
        if User.query.filter_by(username=username).first():
            # Instead of using flash, display error directly in the template
            return render_template('register.html', error="Username already exists")
            
        user = User(username=username)
        user.set_password(password)
        db.session.add(user)
        db.session.commit()
        
        # Success message directly to the login template
        return render_template('login.html', success_message="Registration successful! You can now log in")
        
    return render_template('register.html')

@app.route('/logout')
@login_required
def logout():
    logout_user()
    return redirect(url_for('home'))

# Admin decorator for routes that require admin privileges
def admin_required(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if not current_user.is_authenticated or not current_user.is_admin():
            flash('You do not have permission to access this page.', 'danger')
            return redirect(url_for('home'))
        return f(*args, **kwargs)
    return decorated_function

# Admin routes
@app.route('/admin')
@login_required
@admin_required
def admin():
    users = User.query.all()
    return render_template('admin.html', users=users)

@app.route('/admin/create_user', methods=['POST'])
@login_required
@admin_required
def create_user():
    username = request.form.get('username')
    password = request.form.get('password')
    email = request.form.get('email')
    full_name = request.form.get('full_name')
    role = request.form.get('role')
    
    # Check if username already exists
    if User.query.filter_by(username=username).first():
        return render_template('admin.html', 
                              users=User.query.all(),
                              message="Username already exists", 
                              message_type="danger")
    
    # Create new user
    user = User(username=username, email=email, full_name=full_name, role=role)
    user.set_password(password)
    db.session.add(user)
    db.session.commit()
    
    return render_template('admin.html', 
                          users=User.query.all(),
                          message="User created successfully", 
                          message_type="success")

@app.route('/admin/edit_user/<int:user_id>', methods=['GET', 'POST'])
@login_required
@admin_required
def edit_user(user_id):
    user = User.query.get_or_404(user_id)
    
    if request.method == 'POST':
        username = request.form.get('username')
        
        # Check if username changed and is already taken
        if username != user.username and User.query.filter_by(username=username).first():
            return render_template('edit_user.html', user=user, error="Username already exists")
        
        # Update user information
        user.username = username
        user.email = request.form.get('email')
        user.full_name = request.form.get('full_name')
        user.phone = request.form.get('phone')
        user.role = request.form.get('role')
        
        # Update password if provided
        new_password = request.form.get('new_password')
        if new_password:
            user.set_password(new_password)
        
        db.session.commit()
        return redirect(url_for('admin'))
    
    return render_template('edit_user.html', user=user)

@app.route('/admin/delete_user/<int:user_id>')
@login_required
@admin_required
def delete_user(user_id):
    user = User.query.get_or_404(user_id)
    
    # Prevent deleting your own account
    if user.id == current_user.id:
        return render_template('admin.html', 
                              users=User.query.all(),
                              message="You cannot delete your own account", 
                              message_type="danger")
    
    # Delete the user
    db.session.delete(user)
    db.session.commit()
    
    return render_template('admin.html', 
                          users=User.query.all(),
                          message="User deleted successfully", 
                          message_type="success")

@app.route('/brain-example')
def brain_example():
    return render_template('brain_example.html')

@app.route('/chest-example')
def chest_example():
    return render_template('chest_example.html')

@app.route('/skin-example')
def skin_example():
    return render_template('skin_example.html')

@app.route('/fracture-example')
def fracture_example():
    return render_template('fracture_example.html')

# If this file is being run directly
if __name__ == "__main__":
    try:
        # Try default Flask port 5000
        port = int(os.environ.get("PORT", 5000))
        # Create models directory if it doesn't exist
        os.makedirs('models', exist_ok=True)
        # Create uploads directory if it doesn't exist
        os.makedirs(UPLOAD_FOLDER, exist_ok=True)
        
        app.run(host="0.0.0.0", port=port, debug=True)
    except Exception as e:
        print(f"Error starting Flask application: {str(e)}")
        print("Detailed error:")
        traceback.print_exc()
</file>

<file path="docker-compose.yml">
version: '3'

services:
  medxpert:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - ./static:/app/static
      - ./models:/app/models
    restart: unless-stopped
</file>

<file path="Dockerfile">
FROM python:3.10.16-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first to leverage Docker caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application
COPY . .

# Create necessary directories
RUN mkdir -p static/uploads

# Expose the port the app runs on
EXPOSE 5000

# Command to run the application
CMD ["python", "app.py"]
</file>

<file path="prepare_release.ps1">
# Create release directory
$releaseDir = "medxpert-release"
Write-Host "Creating release directory: $releaseDir"
New-Item -ItemType Directory -Force -Path $releaseDir

# Create necessary subdirectories
Write-Host "Creating subdirectories..."
New-Item -ItemType Directory -Force -Path "$releaseDir/templates"
New-Item -ItemType Directory -Force -Path "$releaseDir/static"
New-Item -ItemType Directory -Force -Path "$releaseDir/static/css"
New-Item -ItemType Directory -Force -Path "$releaseDir/static/js"
New-Item -ItemType Directory -Force -Path "$releaseDir/static/uploads"
New-Item -ItemType Directory -Force -Path "$releaseDir/models"

# Copy main files
Write-Host "Copying main files..."
Copy-Item "app.py" -Destination "$releaseDir/"
Copy-Item "requirements.txt" -Destination "$releaseDir/"
Copy-Item "README.md" -Destination "$releaseDir/"
Copy-Item ".gitignore" -Destination "$releaseDir/"

# Copy templates
Write-Host "Copying template files..."
Copy-Item "templates/*.html" -Destination "$releaseDir/templates/"

# Copy static files
Write-Host "Copying static files..."
Copy-Item "static/css/*" -Destination "$releaseDir/static/css/" -ErrorAction SilentlyContinue
Copy-Item "static/js/*" -Destination "$releaseDir/static/js/" -ErrorAction SilentlyContinue
Copy-Item "static/uploads/.gitkeep" -Destination "$releaseDir/static/uploads/"

# Copy models README
Write-Host "Copying models README..."
Copy-Item "models/README.md" -Destination "$releaseDir/models/"

# Create .gitkeep files
Write-Host "Creating .gitkeep files..."
Set-Content -Path "$releaseDir/static/uploads/.gitkeep" -Value ""
Set-Content -Path "$releaseDir/models/.gitkeep" -Value ""

# Create ZIP file
Write-Host "Creating ZIP file..."
$date = Get-Date -Format "yyyyMMdd"
$zipFile = "medxpert-release-$date.zip"
Compress-Archive -Path "$releaseDir/*" -DestinationPath $zipFile -Force

Write-Host "`nRelease preparation completed!"
Write-Host "Release files are in: $releaseDir"
Write-Host "ZIP file created: $zipFile"
Write-Host "`nPlease verify the contents before distribution."
</file>

<file path="README_DOCKER.md">
# MedXpert Docker Guide

## Prerequisites
- [Docker](https://docs.docker.com/get-docker/)
- [Docker Compose](https://docs.docker.com/compose/install/) (usually included with Docker Desktop)

## Getting Started

### For Team Members

1. Clone the repository:
   ```bash
   git clone <repository-url>
   cd medxpert
   ```

2. Start the application:
   ```bash
   docker-compose up -d
   ```

3. Access the application at:
   ```
   http://localhost:5000
   ```

4. Stop the application:
   ```bash
   docker-compose down
   ```

### For Development

1. Make changes to the code
2. Rebuild and restart the container:
   ```bash
   docker-compose up -d --build
   ```

3. View logs:
   ```bash
   docker-compose logs -f
   ```

## Data Persistence

- The `static` directory (including uploads) is mounted as a volume, so data will persist between container restarts
- The models directory is also mounted as a volume to avoid rebuilding the image when models change

## Troubleshooting

1. If you encounter permission issues with the mounted volumes:
   ```bash
   sudo chown -R $USER:$USER static models
   ```

2. If the application fails to start, check the logs:
   ```bash
   docker-compose logs
   ```

3. To access the container shell:
   ```bash
   docker-compose exec medxpert bash
   ```

4. If the models are too large for building the image, you can:
   - Add the models to .dockerignore
   - Mount the models directory as a volume (already configured)
   - Download the models during container initialization (requires modifying the Dockerfile)

## Updating the Application

1. Pull the latest changes:
   ```bash
   git pull
   ```

2. Rebuild and restart:
   ```bash
   docker-compose up -d --build
   ```
</file>

<file path="README.md">
# MedXpert - نظام تحليل الصور الطبية

## متطلبات النظام
- Python 3.8 أو أحدث
- pip (مدير حزم Python)

## خطوات التثبيت والتشغيل

1. قم بإنشاء بيئة افتراضية جديدة (اختياري ولكن موصى به):
```bash
python -m venv venv
```

2. قم بتفعيل البيئة الافتراضية:
- في Windows:
```bash
venv\Scripts\activate
```
- في Linux/Mac:
```bash
source venv/bin/activate
```

3. قم بتثبيت المتطلبات:
```bash
pip install -r requirements.txt
```

4. قم بتشغيل التطبيق:
```bash
python app.py
```

5. افتح المتصفح وانتقل إلى:
```
http://localhost:5000
```

## ملاحظات هامة
- تأكد من وجود اتصال بالإنترنت عند التثبيت الأولي لتحميل المكتبات
- قد تحتاج إلى تثبيت CUDA إذا كنت تريد استخدام GPU (اختياري)
- تأكد من وجود مساحة كافية على القرص الصلب (حوالي 2-3 GB)

## الدعم الفني
إذا واجهت أي مشاكل، يرجى التأكد من:
1. تثبيت جميع المتطلبات بشكل صحيح
2. استخدام إصدار Python متوافق
3. وجود مساحة كافية على القرص الصلب
</file>

<file path="requirements.txt">
flask==2.0.1
flask-sqlalchemy==2.5.1
sqlalchemy==1.4.46
flask-login==0.5.0
werkzeug==2.0.1
matplotlib
opencv-python
torch
tensorflow==2.17.0
keras==3.5.0
ultralytics
nibabel
scikit-image
monai
numpy==1.26.4
</file>

<file path="static/blue_small_logo.svg">
<?xml version="1.0" encoding="UTF-8"?>
<svg id="Layer_2" data-name="Layer 2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 125.87 137.45">
  <defs>
    <style>
      .cls-1 {
        fill: #233cea;
        stroke-width: 0px;
      }
    </style>
  </defs>
  <g id="Layer_1-2" data-name="Layer 1">
    <g>
      <circle class="cls-1" cx="61.91" cy="15.45" r="15.45"/>
      <circle class="cls-1" cx="61.91" cy="122" r="15.45"/>
      <circle class="cls-1" cx="61.91" cy="68.72" r="15.45"/>
      <circle class="cls-1" cx="15.45" cy="41.49" r="15.45"/>
      <circle class="cls-1" cx="15.45" cy="95.62" r="15.45"/>
      <circle class="cls-1" cx="37.29" cy="81.38" r="5.06"/>
      <circle class="cls-1" cx="75.21" cy="95.62" r="8.55"/>
      <circle class="cls-1" cx="110.43" cy="95.62" r="15.45"/>
      <circle class="cls-1" cx="106.6" cy="44.39" r="18.34"/>
      <path class="cls-1" d="M21.89,81.58s7.6,3.79,10.75-2.3l5.72,4.89-.61,2.26s-6.86-.43-6.86,8.17c0,7.98-9-13.02-9-13.02Z"/>
      <path class="cls-1" d="M59.03,106.83s8.85-2.29,7.8-9.65l10.7-1.55,3.36,4.47.11,1.82s-6.54,3.59-4.12,16.27c1.57,8.25-17.86-11.35-17.86-11.35Z"/>
      <path class="cls-1" d="M66.76,94.25s1.77-7.95-7.62-10.33c-6.55-1.66,14.52-13.58,14.52-13.58l2.06,5.22s-2.4,6.65,3.53,12.52c4.25,4.2-12.49,6.17-12.49,6.17Z"/>
      <path class="cls-1" d="M88.66,40.54s-2.47,21.16-20.58,14.01l2.82,9.27,5.7,4.89.71,1.33s1.84-16.31,23.82-8.16l-2.91-13.47-9.56-7.88Z"/>
    </g>
  </g>
</svg>
</file>

<file path="static/css/style.css">
:root {
    --primary-color: #233cea;
    --primary-light: #5960ee;
    --primary-dark: #1a2cb3;
    --accent-color: #fffaee;
    --light-gray: #f8f9fa;
    --dark-gray: #343a40;
    --white: #ffffff;
    --radius: 18px;
    --shadow: 0 6px 32px rgba(35,60,234,0.08),0 1.5px 4.5px rgba(35,60,234,0.06);
}

/* Bootstrap overrides */
.bg-primary {
    background-color: var(--primary-color) !important;
}

body {
    font-family: 'Cairo', 'Roboto', sans-serif;
    background: var(--light-gray);
    color: #232323;
}

.modern-hero {
    overflow: hidden;
    position: relative;
    background: linear-gradient(120deg, var(--primary-color) 0%, var(--primary-light) 100%);
    color: var(--white);
    border-radius: 0 0 var(--radius) var(--radius);
    min-height: 60vh;
}
.modern-hero .text-primary { color: var(--primary-color) !important; }
.wave-svg { position: absolute; left:0; bottom:0; width:100%; z-index:2; pointer-events:none; }
.hero-img-anim { animation: float 3.5s ease-in-out infinite alternate; }
@keyframes float { 0%{transform:translateY(0);} 100%{transform:translateY(-18px);} }

.stat-card {
    background: var(--white);
    border-radius: var(--radius);
    padding: 2rem 1.1rem;
    box-shadow: var(--shadow);
    transition: transform 0.35s cubic-bezier(.16,.8,.62,1.52), box-shadow 0.4s;
}
.stat-card:hover { transform: translateY(-8px) scale(1.045); box-shadow: 0 8px 36px rgba(35,60,234,0.13); }
.stat-icon {
    width: 48px; height: 48px; display: flex; align-items: center; justify-content: center;
    border-radius: 50%; font-size: 1.6rem;
    margin: 0 auto 0.5rem; box-shadow: 0 2px 6px rgba(35,60,234,0.10);
}

.feature-card.pro-card {
    border-radius: var(--radius);
    background: var(--white);
    box-shadow: var(--shadow);
    transition: transform 0.35s cubic-bezier(.16,.8,.62,1.52), box-shadow 0.4s;
    position: relative;
    overflow: hidden;
    padding-bottom: 2.3rem;
}
.feature-card.pro-card .icon-wrapper {
    width: 62px; height: 62px; background: rgba(35, 60, 234, 0.09); margin: 0 auto 1rem;
    display: flex; align-items: center; justify-content: center; border-radius: 50%; font-size: 2rem;
    transition: background 0.3s;
}
.feature-card.pro-card:hover {
    transform: translateY(-10px) scale(1.03) rotate(-1deg);
    box-shadow: 0 10px 40px rgba(35,60,234,0.13);
}
.feature-card.pro-card:hover .icon-wrapper {
    background: var(--primary-color);
    color: #fff;
}
.feature-card.pro-card .icon-wrapper i { color: var(--primary-color); transition: color 0.3s; }
.feature-card.pro-card:hover .icon-wrapper i { color: #fff; }

.about-modern {
    background: linear-gradient(90deg, var(--white), var(--accent-color) 90%);
    border-radius: var(--radius);
    margin-bottom: 3rem;
}
.about-modern ul { padding-left: 0; }
.about-modern ul li { margin-bottom: 1.1rem; }

.carousel .carousel-item blockquote {
    font-size: 1.1rem;
    color: #222;
    font-style: italic;
}
.carousel .carousel-item img { border: 3px solid var(--primary-color); }
.carousel .carousel-item { transition: opacity 0.6s; }
.carousel-indicators [data-bs-target] { background: var(--primary-color); }

.accordion-button:focus { border-color: var(--primary-color); box-shadow: 0 0 0 2px rgba(35,60,234,0.16); }

@media (max-width: 992px){
    .modern-hero { min-height: 40vh; }
    .about-modern { margin-top: 2rem; }
}
@media (max-width: 768px){
    .stat-card { padding: 1.2rem 0.5rem; }
}

/* Animations */
.animate-fadein { opacity: 0; animation: fadein 1.2s forwards; }
.animate-fadein-delay { opacity: 0; animation: fadein 1.2s 0.8s forwards; }
.animate-fadein-delay2 { opacity: 0; animation: fadein 1.2s 1.4s forwards; }
@keyframes fadein { 0%{opacity:0;transform:translateY(40px);}100%{opacity:1;transform:none;} }
.animate-fadeup { opacity: 0; animation: fadeup 1.2s forwards; }
@keyframes fadeup { 0%{opacity:0;transform:translateY(60px);}100%{opacity:1;transform:none;} }
.animate-bounce { animation: bounceBtn 1s 1.5s both cubic-bezier(.29,.59,.63,1.48); }
@keyframes bounceBtn { 0%{transform:scale(1);} 55%{transform:scale(1.08);} 70%{transform:scale(0.97);} 100%{transform:scale(1.03);} }
.animate-reveal { opacity: 0; transform:translateY(30px); transition:all 0.65s cubic-bezier(.16,.8,.62,1.52); }
.animate-reveal.animated { opacity: 1; transform:none; }

/* Enhanced animations - Gleamer style */
.hero-text-reveal h1 {
    overflow: hidden;
    position: relative;
}

/* Add bottom margin to row align-items-center */
.row.align-items-center {
    margin-bottom: 3rem;
    margin-top: 3rem;
}

/* Add bottom margin to content-container for model cards */
.content-container {
    margin-bottom: 3rem;
}

/* Add extra bottom padding to login/register containers */
.login-container {
    padding-bottom: 5rem !important;
}

.hero-text-reveal h1 span {
    display: inline-block;
    transform: translateY(100%);
    opacity: 0;
    animation: slideUpFade 1.2s forwards cubic-bezier(0.5, 0, 0.1, 1);
}

.hero-text-reveal p {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeIn 1.2s 0.8s forwards;
}

.hero-text-reveal .btn {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeIn 1.2s 1.2s forwards;
}

@keyframes slideUpFade {
    0% {
        transform: translateY(100%);
        opacity: 0;
    }
    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes fadeIn {
    0% {
        opacity: 0;
        transform: translateY(20px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Staggered animations */
.stagger-item {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s cubic-bezier(0.5, 0, 0.1, 1);
}

.stagger-item.animated {
    opacity: 1;
    transform: translateY(0);
}

/* Parallax effect */
.parallax-element {
    transition: transform 0.4s cubic-bezier(0.5, 0, 0.1, 1);
}

/* Gradient text animation */
.gradient-text {
    background: linear-gradient(120deg, var(--primary-color), var(--primary-light));
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    position: relative;
    display: inline-block;
}

.gradient-text::after {
    content: attr(data-text);
    position: absolute;
    left: 0;
    top: 0;
    background: linear-gradient(120deg, var(--primary-light), var(--primary-color));
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    opacity: 0;
    transition: opacity 0.8s;
}

.gradient-text:hover::after {
    opacity: 1;
}

/* Animated counter for statistics */
.counter-wrapper {
    position: relative;
    overflow: hidden;
}

.counter {
    display: inline-block;
    font-weight: bold;
}

/* Image reveal animation */
.image-reveal {
    position: relative;
    overflow: hidden;
}

.image-reveal img {
    transform: scale(1.1);
    transition: transform 1.5s cubic-bezier(0.5, 0, 0.1, 1);
}

.image-reveal::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--primary-color);
    transform: scaleX(1);
    transform-origin: right;
    transition: transform 1s cubic-bezier(0.5, 0, 0.1, 1);
    z-index: 1;
}

.image-reveal.animated::before {
    transform: scaleX(0);
}

.image-reveal.animated img {
    transform: scale(1);
}

/* Card hover animation */
.hover-card {
    transition: all 0.4s cubic-bezier(0.5, 0, 0.1, 1);
}

.hover-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 30px rgba(35, 60, 234, 0.15);
}

/* Team Grid Layout */
.team-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 30px;
    margin: 0 auto;
    max-width: 1200px;
}

.team-member {
    perspective: 1000px;
    height: 400px;
}

.team-member-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.8s;
    transform-style: preserve-3d;
    border-radius: 16px;
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
}

.team-member:hover .team-member-inner {
    transform: rotateY(180deg);
}

.team-member-front, .team-member-back {
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    border-radius: 16px;
    overflow: hidden;
}

.team-member-front {
    background-color: #fff;
}

.team-member-back {
    background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
    color: white;
    transform: rotateY(180deg);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
}

.team-img-wrap {
    height: 70%;
    overflow: hidden;
    position: relative;
}

.team-img-wrap img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
}

.team-member:hover .team-img-wrap img {
    transform: scale(1.05);
}

.team-member-info {
    padding: 20px;
    text-align: center;
    height: 30%;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.team-member-info h3 {
    font-size: 1.4rem;
    margin-bottom: 5px;
    color: #222;
    font-weight: 600;
}

.team-member-info p {
    color: #666;
    font-size: 0.9rem;
    margin-bottom: 0;
}

.team-member-bio {
    text-align: center;
    padding: 10px;
}

.team-member-bio p {
    margin-bottom: 20px;
    font-size: 0.95rem;
    line-height: 1.5;
}

.team-social-links {
    display: flex;
    justify-content: center;
    gap: 15px;
}

.team-social-links a {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.1rem;
    transition: all 0.3s ease;
    border: 1px solid rgba(255, 255, 255, 0.3);
}

.team-social-links a:hover {
    background: white;
    color: var(--primary-color);
    transform: translateY(-5px);
}

.team-role-badge {
    position: absolute;
    top: 15px;
    left: 15px;
    background: rgba(35, 60, 234, 0.9);
    color: white;
    padding: 6px 14px;
    border-radius: 30px;
    font-size: 0.75rem;
    font-weight: 700;
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
    z-index: 5;
    backdrop-filter: blur(5px);
    border: 1px solid rgba(255, 255, 255, 0.3);
}

/* Responsive styles for team grid */
@media (max-width: 992px) {
    .team-grid {
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 25px;
    }
    
    .team-member {
        height: 380px;
    }
}

@media (max-width: 768px) {
    .team-grid {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
    }
    
    .team-member {
        height: 360px;
    }
}

@media (max-width: 576px) {
    .team-grid {
        grid-template-columns: 1fr;
        max-width: 320px;
        margin: 0 auto;
    }
}

/* Creative Modern Team Carousel */
.team-section {
    padding: 100px 0;
    background: linear-gradient(180deg, #f9fafc 0%, #f5f7ff 100%);
    position: relative;
    overflow: hidden;
}

.team-section::before {
    content: '';
    position: absolute;
    width: 800px;
    height: 800px;
    border-radius: 50%;
    background: linear-gradient(45deg, rgba(35, 60, 234, 0.05), rgba(35, 60, 234, 0.1));
    top: -300px;
    left: -300px;
    z-index: 0;
    animation: float 15s infinite alternate ease-in-out;
}

.team-section::after {
    content: '';
    position: absolute;
    width: 600px;
    height: 600px;
    border-radius: 50%;
    background: linear-gradient(45deg, rgba(35, 60, 234, 0.05), rgba(35, 60, 234, 0.1));
    bottom: -200px;
    right: -200px;
    z-index: 0;
    animation: float 20s infinite alternate-reverse ease-in-out;
}

@keyframes float {
    0% { transform: translate(0, 0); }
    50% { transform: translate(-30px, 30px); }
    100% { transform: translate(30px, -30px); }
}

.team-container {
    max-width: 1300px;
    margin: 0 auto;
    padding: 0 20px;
    position: relative;
    z-index: 2;
}

.team-header {
    text-align: center;
    margin-bottom: 60px;
    position: relative;
}

.team-header h2 {
    font-size: 3rem;
    font-weight: 800;
    margin-bottom: 15px;
    background: linear-gradient(120deg, #233cea, #5960ee);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
    display: inline-block;
    position: relative;
}

.team-header h2::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 4px;
    background: linear-gradient(90deg, #233cea, #5960ee);
    border-radius: 4px;
}

.team-subtitle {
    font-size: 1.2rem;
    color: #555;
    display: block;
    margin-top: 25px;
    letter-spacing: 0.5px;
}

/* Creative 3D Carousel */
.team-slider-container {
    position: relative;
    perspective: 1200px;
    padding: 0px 0 100px;
    margin: 0 auto;
    max-width: 1000px;
}

.team-slider {
    display: flex;
    transform-style: preserve-3d;
    transition: transform 0.8s cubic-bezier(0.165, 0.84, 0.44, 1);
}

/* Creative Card Design */
.member-slide {
    min-width: 250px;
    padding: 15px;
    position: relative;
    transition: transform 0.7s cubic-bezier(0.165, 0.84, 0.44, 1);
    margin: 0 8px;
}

.member-card {
    background: white;
    border-radius: 18px;
    overflow: hidden;
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
    transition: all 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);
    transform: scale(0.95);
    height: 100%;
    position: relative;
    z-index: 1;
}

.member-card::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(130deg, transparent 0%, rgba(35, 60, 234, 0.03) 100%);
    z-index: -1;
    border-radius: 20px;
    transition: opacity 0.5s ease;
    opacity: 0;
}

.member-card:hover {
    transform: translateY(-15px) scale(1);
    box-shadow: 0 25px 50px rgba(35, 60, 234, 0.15);
}

.member-card:hover::before {
    opacity: 1;
}

/* Creative Image Effect */
.member-image-wrapper {
    height: 260px;
    position: relative;
    overflow: hidden;
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    transition: all 0.5s ease;
}

/* Improved sharp image rendering */
.member-image-wrapper img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.7s cubic-bezier(0.165, 0.84, 0.44, 1);
    image-rendering: -webkit-optimize-contrast; /* Improves sharpness in Chrome/Safari */
    backface-visibility: hidden; /* Prevents blurring during animations */
    transform: translateZ(0); /* Force GPU acceleration */
    will-change: transform; /* Hint to browser about properties that will animate */
}

.member-card:hover .member-image-wrapper {
    clip-path: polygon(0 0, 100% 0, 100% 90%, 0 100%);
}

.member-card:hover .member-image-wrapper img {
    transform: scale(1.08); /* Reduced from 1.1 for sharper scaling */
}

/* Add a slight sharpening filter on hover for perceived sharpness */
.member-card:hover .member-image-wrapper::after {
    content: '';
    position: absolute;
    inset: 0;
    z-index: 3;
    pointer-events: none;
    background: transparent;
    backdrop-filter: contrast(1.03) brightness(1.03);
    -webkit-backdrop-filter: contrast(1.03) brightness(1.03);
    opacity: 0;
    transition: opacity 0.4s ease;
}

.member-card:hover .member-image-wrapper::after {
    opacity: 1;
}

.member-badge {
    position: absolute;
    top: 15px;
    right: 15px;
    background: #ffffff;
    color: #233cea;
    padding: 6px 10px;
    border-radius: 10px;
    font-size: 0.75rem;
    font-weight: 700;
    letter-spacing: 0.5px;
    box-shadow: 0 6px 14px rgba(255, 255, 255, 0.25);
    z-index: 2;
    transform: translateZ(20px);
    transition: all 0.3s ease;
}

.member-card:hover .member-badge {
    transform: translateZ(30px) scale(1.1);
}

.member-content {
    padding: 20px;
    position: relative;
    background: white;
}

.member-content::before {
    content: '';
    position: absolute;
    left: 25px;
    top: 0;
    width: 40px;
    height: 3px;
    background: #233cea;
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.member-card:hover .member-content::before {
    transform: scaleX(1);
}

.member-content h3 {
    font-size: 1.1rem;
    margin-bottom: 6px;
    font-weight: 700;
    color: #222;
    transition: color 0.3s ease;
}

.member-card:hover .member-content h3 {
    color: #233cea;
}

.member-role {
    color: #666;
    font-size: 0.85rem;
    display: block;
    margin-bottom: 15px;
    font-weight: 500;
}

/* Interactive Social Links */
.member-socials {
    display: flex;
    gap: 12px;
    justify-content: flex-start;
}

.member-socials a {
    display: block;
    width: 36px;
    height: 36px;
    position: relative;
    z-index: 5;
}

.social-icon {
    width: 36px;
    height: 36px;
    border-radius: 10px;
    background: #f5f7ff;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #233cea;
    font-size: 1rem;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    position: absolute;
    top: 0;
    left: 0;
}

.social-icon:hover {
    background: #233cea;
    color: white;
    transform: translateY(-8px);
    box-shadow: 0 8px 16px rgba(35, 60, 234, 0.2);
    border-radius: 8px;
}

.social-icon i {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* Aligned Navigation */
.slider-nav {
    position: absolute;
    width: 100%;
    left: 0;
    bottom: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0;
    z-index: 10;
}

.navigation-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 30px;
    background: white;
    padding: 10px 25px;
    border-radius: 30px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

.slider-prev,
.slider-next {
    width: 45px;
    height: 45px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid rgba(35, 60, 234, 0.1);
    color: #233cea;
    font-size: 1.1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.slider-prev:hover,
.slider-next:hover {
    background: #233cea;
    color: white;
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(35, 60, 234, 0.2);
}

.slider-dots {
    display: flex;
    gap: 12px;
    align-items: center;
    margin: 0 15px;
}

.slider-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: #ddd;
    transition: all 0.3s ease;
    cursor: pointer;
}

.slider-dot.active {
    background: #233cea;
    transform: scale(1.3);
}

.slider-dot:hover {
    background: #5960ee;
}

/* Active/Center Card Highlight */
.member-slide.active .member-card {
    transform: scale(1.05);
    box-shadow: 0 25px 50px rgba(35, 60, 234, 0.18);
    z-index: 5;
}

/* Responsive */
@media (max-width: 1200px) {
    .member-slide {
        min-width: 230px;
    }
}

@media (max-width: 992px) {
    .member-slide {
        min-width: 220px;
    }
    
    .member-image-wrapper {
        height: 240px;
    }
}

@media (max-width: 768px) {
    .member-slide {
        min-width: 200px;
    }
    
    .member-image-wrapper {
        height: 220px;
    }
    
    .team-header h2 {
        font-size: 2.4rem;
    }
}

@media (max-width: 576px) {
    .team-slider-container {
        padding: 30px 0 90px;
    }
    
    .member-slide {
        min-width: 190px;
    }
    
    .member-image-wrapper {
        height: 200px;
    }
    
    .navigation-container {
        flex-direction: column;
        gap: 10px;
        padding: 15px;
    }
    
    .slider-dots {
        margin-bottom: 5px;
    }
    
    .slider-prev, .slider-next {
        width: 38px;
        height: 38px;
    }
}

/* Horizontal Workflow Styles */
.workflow-horizontal {
    margin: 3rem 0;
}

.workflow-step-horizontal {
    text-align: center;
    padding: 3rem 2rem;
    background: linear-gradient(145deg, #ffffff, #f8f9fa);
    border-radius: 24px;
    border: 2px solid rgba(35, 60, 234, 0.1);
    box-shadow: 
        0 8px 32px rgba(35, 60, 234, 0.08),
        0 4px 16px rgba(0, 0, 0, 0.04);
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    position: relative;
    overflow: hidden;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.workflow-step-horizontal::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, var(--primary-color), var(--primary-light));
    transform: scaleX(0);
    transition: transform 0.4s ease;
}

.workflow-step-horizontal:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 
        0 16px 48px rgba(35, 60, 234, 0.15),
        0 8px 24px rgba(0, 0, 0, 0.08);
    border-color: rgba(35, 60, 234, 0.2);
}

.workflow-step-horizontal:hover::before {
    transform: scaleX(1);
}

.step-number-horizontal {
    width: 60px;
    height: 60px;
    background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.8rem;
    font-weight: 700;
    margin: 0 auto 1.5rem;
    box-shadow: 0 8px 24px rgba(35, 60, 234, 0.25);
    transition: all 0.4s ease;
}

.workflow-step-horizontal:hover .step-number-horizontal {
    transform: scale(1.1) rotate(5deg);
    box-shadow: 0 12px 32px rgba(35, 60, 234, 0.35);
}

.step-icon-horizontal {
    font-size: 3rem;
    color: var(--primary-color);
    margin-bottom: 1.5rem;
    transition: all 0.4s ease;
}

.workflow-step-horizontal:hover .step-icon-horizontal {
    transform: scale(1.1);
    color: var(--primary-light);
}

.step-title-horizontal {
    font-size: 1.4rem;
    font-weight: 700;
    color: var(--primary-dark);
    margin-bottom: 1rem;
    transition: color 0.3s ease;
}

.workflow-step-horizontal:hover .step-title-horizontal {
    color: var(--primary-color);
}

.step-description-horizontal {
    font-size: 1rem;
    color: #666;
    line-height: 1.6;
    margin-bottom: 0;
}

/* Demo Preview Styles */
.demo-preview {
    text-align: center;
    margin-top: 4rem;
    padding: 3rem 2rem;
    background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
    border-radius: 24px;
    color: white;
    position: relative;
    overflow: hidden;
}

.demo-preview::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
    animation: shimmer 3s ease-in-out infinite;
}

@keyframes shimmer {
    0%, 100% { transform: scale(1) rotate(0deg); opacity: 0.3; }
    50% { transform: scale(1.1) rotate(180deg); opacity: 0.1; }
}

.demo-badge {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 1.1rem;
    font-weight: 600;
    margin-bottom: 1rem;
    position: relative;
    z-index: 2;
}

.demo-badge i {
    font-size: 1.3rem;
    animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
}

.demo-text {
    font-size: 1.2rem;
    margin-bottom: 2rem;
    opacity: 0.95;
    position: relative;
    z-index: 2;
}

.demo-btn {
    display: inline-flex;
    align-items: center;
    gap: 0.8rem;
    padding: 1rem 2.5rem;
    background: rgba(255, 255, 255, 0.15);
    color: white;
    text-decoration: none;
    border-radius: 50px;
    font-weight: 600;
    font-size: 1.1rem;
    backdrop-filter: blur(10px);
    border: 2px solid rgba(255, 255, 255, 0.2);
    transition: all 0.4s ease;
    position: relative;
    z-index: 2;
}

.demo-btn:hover {
    background: rgba(255, 255, 255, 0.25);
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
    border-color: rgba(255, 255, 255, 0.4);
}

.demo-btn i {
    transition: transform 0.3s ease;
}

.demo-btn:hover i {
    transform: translateX(5px);
}

/* Responsive Design */
@media (max-width: 992px) {
    .workflow-step-horizontal {
        padding: 2.5rem 1.5rem;
        margin-bottom: 2rem;
    }
    
    .step-number-horizontal {
        width: 50px;
        height: 50px;
        font-size: 1.5rem;
    }
    
    .step-icon-horizontal {
        font-size: 2.5rem;
    }
    
    .step-title-horizontal {
        font-size: 1.2rem;
    }
}

@media (max-width: 768px) {
    .workflow-horizontal {
        margin: 2rem 0;
    }
    
    .workflow-step-horizontal {
        padding: 2rem 1rem;
    }
    
    .demo-preview {
        margin-top: 3rem;
        padding: 2rem 1rem;
    }
    
    .demo-btn {
        padding: 0.8rem 2rem;
        font-size: 1rem;
    }
}

/* Demo Preview Minimal Styles */
.demo-preview-minimal {
    text-align: center;
    margin-top: 3rem;
    padding: 2rem;
}

.demo-btn-round {
    display: inline-flex;
    align-items: center;
    gap: 0.8rem;
    padding: 1.2rem 3rem;
    background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
    color: white;
    text-decoration: none;
    border-radius: 50px;
    font-weight: 600;
    font-size: 1.1rem;
    box-shadow: 0 8px 24px rgba(35, 60, 234, 0.25);
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    position: relative;
    overflow: hidden;
}

.demo-btn-round::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: left 0.5s;
}

.demo-btn-round:hover {
    background: linear-gradient(135deg, var(--primary-light), #4a90e2);
    color: white;
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 12px 32px rgba(35, 60, 234, 0.35);
}

.demo-btn-round:hover::before {
    left: 100%;
}

.demo-btn-round i {
    transition: transform 0.3s ease;
}

.demo-btn-round:hover i {
    transform: rotate(360deg) scale(1.1);
}

@media (max-width: 768px) {
    .demo-preview-minimal {
        margin-top: 2rem;
        padding: 1rem;
    }
    
    .demo-btn-round {
        padding: 1rem 2.5rem;
        font-size: 1rem;
    }
}
</file>

<file path="static/js/script.js">
// Animated counters
document.addEventListener("DOMContentLoaded", function() {
    function animateCounter(el, end, duration=1600) {
        let start = 0, startTime = null;
        function animate(time) {
            if (!startTime) startTime = time;
            const progress = Math.min((time - startTime) / duration, 1);
            el.textContent = Math.floor(progress * (end - start) + start).toLocaleString();
            if (progress < 1) requestAnimationFrame(animate);
            else el.textContent = end.toLocaleString();
        }
        requestAnimationFrame(animate);
    }
    
    // Handle counter animations
    function handleCounters() {
        document.querySelectorAll('.counter:not(.counted)').forEach(el => {
            const rect = el.getBoundingClientRect();
            if (rect.top < window.innerHeight - 50) {
                el.classList.add('counted');
                animateCounter(el, parseInt(el.dataset.count));
            }
        });
    }

    // Simple smooth scroll for discover button
    function initSmoothScrolling() {
        const discoverBtn = document.querySelector('.discover-btn');
        if (discoverBtn) {
            discoverBtn.addEventListener('click', function(e) {
                e.preventDefault();
                const target = document.querySelector('#models');
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        }
    }
    
    // Staggered animations
    function handleStaggerItems() {
        document.querySelectorAll('.stagger-item:not(.animated)').forEach((el, index) => {
            const rect = el.getBoundingClientRect();
            if (rect.top < window.innerHeight - 50) {
                // Add a delay based on the index
                setTimeout(() => {
                    el.classList.add('animated');
                }, index * 150); // 150ms stagger for each item
            }
        });
    }
    
    // Parallax effect on scroll
    function handleParallax() {
        document.querySelectorAll('.parallax-element').forEach(el => {
            const scrollPosition = window.scrollY;
            const speed = el.dataset.speed || 0.1;
            el.style.transform = `translateY(${scrollPosition * speed}px)`;
        });
    }
    
    // Image reveal animation
    function handleImageReveal() {
        document.querySelectorAll('.image-reveal:not(.animated)').forEach(el => {
            const rect = el.getBoundingClientRect();
            if (rect.top < window.innerHeight - 50) {
                el.classList.add('animated');
            }
        });
    }

    // Animate .animate-reveal on scroll
    function revealOnScroll() {
        document.querySelectorAll('.animate-reveal:not(.animated)').forEach(el => {
            const rect = el.getBoundingClientRect();
            if (rect.top < window.innerHeight - 75) {
                el.classList.add('animated');
            }
        });
        
        // Handle other animations
        handleCounters();
        handleStaggerItems();
        handleImageReveal();
    }
    
    // Initialize smooth scrolling
    initSmoothScrolling();
    
    // Add scroll event listeners
    window.addEventListener('scroll', revealOnScroll);
    window.addEventListener('scroll', handleParallax);
    
    // Initial check for animations on page load
    setTimeout(() => {
        revealOnScroll();
        document.querySelectorAll('.animate-fadein, .animate-fadein-delay, .animate-fadein-delay2, .animate-fadeup')
            .forEach(el => el.style.opacity = 1);
    }, 100);

    // Testimonials carousel auto-slide
    const carousel = document.getElementById('testimonialCarousel');
    if (carousel) {
        let bsCarousel = new bootstrap.Carousel(carousel, { interval: 5000, ride: 'carousel' });
    }

    // Model navigation functions
    function showModel(index) {
        const modelCards = document.querySelectorAll('.model-detail-card');
        const dots = document.querySelectorAll('.indicator-dot');
        const modelNames = ['Brain Tumor Detection', 'Chest X-ray Analysis', 'Skin Cancer Detection', 'Fracture Detection'];
        const currentModelInfo = document.getElementById('currentModelInfo');
        
        // Hide all models
        modelCards.forEach(card => card.classList.remove('active'));
        dots.forEach(dot => dot.classList.remove('active'));
        
        // Show selected model
        modelCards[index].classList.add('active');
        dots[index].classList.add('active');
        
        // Update model info text
        currentModelInfo.textContent = `${modelNames[index]} (${index + 1} of ${modelNames.length})`;
        
        // Update current model index
        currentModel = index;
        
        // Enable/disable navigation buttons
        document.getElementById('prevBtn').disabled = currentModel === 0;
        document.getElementById('nextBtn').disabled = currentModel === modelNames.length - 1;
    }

    function nextModel() {
        const modelCards = document.querySelectorAll('.model-detail-card');
        if (currentModel < modelCards.length - 1) {
            showModel(currentModel + 1);
        }
    }

    function previousModel() {
        if (currentModel > 0) {
            showModel(currentModel - 1);
        }
    }

    // Initialize model navigation
    showModel(0);
});
</file>

<file path="static/logo.svg">
<?xml version="1.0" encoding="UTF-8"?>
<svg id="Layer_2" data-name="Layer 2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 613.16 137.45">
  <defs>
    <style>
      .cls-1 {
        fill: #233cea;
        stroke-width: 0px;
      }
    </style>
  </defs>
  <g id="Layer_1-2" data-name="Layer 1">
    <g>
      <path class="cls-1" d="M234.28,39.84v64.42h-12.92v-41.9l-17.26,41.9h-9.78l-17.35-41.9v41.9h-12.92V39.84h14.68l20.49,47.9,20.49-47.9h14.58Z"/>
      <path class="cls-1" d="M294.18,82.57h-37.38c.31,3.69,1.6,6.58,3.88,8.68,2.28,2.09,5.08,3.14,8.4,3.14,4.8,0,8.21-2.06,10.24-6.18h13.94c-1.48,4.92-4.31,8.97-8.49,12.14-4.19,3.17-9.32,4.75-15.41,4.75-4.92,0-9.34-1.09-13.24-3.28-3.91-2.18-6.95-5.28-9.14-9.28-2.18-4-3.28-8.61-3.28-13.84s1.08-9.94,3.23-13.94c2.15-4,5.17-7.08,9.04-9.23,3.88-2.15,8.34-3.23,13.38-3.23s9.21,1.05,13.06,3.14c3.84,2.09,6.83,5.06,8.95,8.91,2.12,3.85,3.18,8.26,3.18,13.24,0,1.85-.12,3.51-.37,4.98ZM281.17,73.9c-.06-3.32-1.26-5.98-3.6-7.98-2.34-2-5.2-3-8.58-3-3.2,0-5.89.97-8.08,2.91-2.19,1.94-3.52,4.63-4.02,8.08h24.27Z"/>
      <path class="cls-1" d="M303.74,64.76c2.06-4,4.88-7.08,8.45-9.23,3.57-2.15,7.54-3.23,11.91-3.23,3.32,0,6.49.72,9.51,2.17,3.01,1.45,5.41,3.37,7.2,5.77v-24.27h13.11v68.3h-13.11v-7.57c-1.6,2.52-3.85,4.55-6.74,6.09-2.89,1.54-6.25,2.31-10.06,2.31-4.31,0-8.25-1.11-11.81-3.32-3.57-2.21-6.38-5.34-8.45-9.37-2.06-4.03-3.09-8.66-3.09-13.89s1.03-9.75,3.09-13.75ZM339.04,70.62c-1.23-2.25-2.89-3.97-4.98-5.17-2.09-1.2-4.34-1.8-6.74-1.8s-4.62.59-6.65,1.75c-2.03,1.17-3.68,2.88-4.94,5.12-1.26,2.25-1.89,4.91-1.89,7.98s.63,5.77,1.89,8.08c1.26,2.31,2.92,4.08,4.98,5.31,2.06,1.23,4.26,1.85,6.6,1.85s4.65-.6,6.74-1.8c2.09-1.2,3.75-2.92,4.98-5.17,1.23-2.25,1.85-4.94,1.85-8.08s-.62-5.83-1.85-8.08Z"/>
      <path class="cls-1" d="M405.13,104.26l-13.94-21.69-12.64,21.69h-14.58l20.31-32.49-20.58-31.93h14.86l13.94,21.6,12.55-21.6h14.58l-20.21,32.4,20.58,32.03h-14.86Z"/>
      <path class="cls-1" d="M449.66,54.65c2.92-1.57,6.26-2.35,10.01-2.35,4.37,0,8.32,1.08,11.86,3.23,3.54,2.15,6.34,5.21,8.4,9.18,2.06,3.97,3.09,8.57,3.09,13.8s-1.03,9.86-3.09,13.89c-2.06,4.03-4.86,7.15-8.4,9.37-3.54,2.22-7.49,3.32-11.86,3.32-3.75,0-7.06-.77-9.92-2.31-2.86-1.54-5.18-3.48-6.97-5.81v31.66h-12.92V53.13h12.92v7.38c1.66-2.34,3.95-4.29,6.88-5.86ZM467.93,70.53c-1.26-2.25-2.92-3.95-4.98-5.12-2.06-1.17-4.29-1.75-6.69-1.75s-4.54.6-6.6,1.8c-2.06,1.2-3.72,2.94-4.98,5.21-1.26,2.28-1.89,4.95-1.89,8.03s.63,5.75,1.89,8.03c1.26,2.28,2.92,4.02,4.98,5.21,2.06,1.2,4.26,1.8,6.6,1.8s4.63-.61,6.69-1.85c2.06-1.23,3.72-2.98,4.98-5.26,1.26-2.28,1.89-4.98,1.89-8.12s-.63-5.74-1.89-7.98Z"/>
      <path class="cls-1" d="M539.6,82.57h-37.38c.31,3.69,1.6,6.58,3.88,8.68,2.28,2.09,5.08,3.14,8.4,3.14,4.8,0,8.21-2.06,10.25-6.18h13.94c-1.48,4.92-4.31,8.97-8.49,12.14-4.19,3.17-9.32,4.75-15.41,4.75-4.92,0-9.34-1.09-13.24-3.28-3.91-2.18-6.95-5.28-9.14-9.28-2.18-4-3.28-8.61-3.28-13.84s1.08-9.94,3.23-13.94c2.15-4,5.17-7.08,9.04-9.23,3.88-2.15,8.34-3.23,13.38-3.23s9.21,1.05,13.06,3.14c3.84,2.09,6.83,5.06,8.95,8.91,2.12,3.85,3.18,8.26,3.18,13.24,0,1.85-.12,3.51-.37,4.98ZM526.59,73.9c-.06-3.32-1.26-5.98-3.6-7.98-2.34-2-5.2-3-8.58-3-3.2,0-5.89.97-8.08,2.91-2.18,1.94-3.52,4.63-4.01,8.08h24.27Z"/>
      <path class="cls-1" d="M568.81,54.7c2.68-1.54,5.74-2.31,9.18-2.31v13.57h-3.42c-4.06,0-7.12.95-9.18,2.86-2.06,1.91-3.09,5.23-3.09,9.97v25.47h-12.92v-51.13h12.92v7.94c1.66-2.71,3.83-4.83,6.51-6.37Z"/>
      <path class="cls-1" d="M601.72,63.74v24.74c0,1.72.42,2.97,1.25,3.74.83.77,2.23,1.15,4.2,1.15h6v10.89h-8.12c-10.89,0-16.34-5.29-16.34-15.88v-24.64h-6.09v-10.61h6.09v-12.64h13.01v12.64h11.44v10.61h-11.44Z"/>
    </g>
    <g>
      <circle class="cls-1" cx="61.91" cy="15.45" r="15.45"/>
      <circle class="cls-1" cx="61.91" cy="122" r="15.45"/>
      <circle class="cls-1" cx="61.91" cy="68.72" r="15.45"/>
      <circle class="cls-1" cx="15.45" cy="41.49" r="15.45"/>
      <circle class="cls-1" cx="15.45" cy="95.62" r="15.45"/>
      <circle class="cls-1" cx="37.29" cy="81.38" r="5.06"/>
      <circle class="cls-1" cx="75.21" cy="95.62" r="8.55"/>
      <circle class="cls-1" cx="110.43" cy="95.62" r="15.45"/>
      <circle class="cls-1" cx="106.6" cy="44.39" r="18.34"/>
      <path class="cls-1" d="M21.89,81.58s7.6,3.79,10.75-2.3l5.72,4.89-.61,2.26s-6.86-.43-6.86,8.17c0,7.98-9-13.02-9-13.02Z"/>
      <path class="cls-1" d="M59.03,106.83s8.85-2.29,7.8-9.65l10.7-1.55,3.36,4.47.11,1.82s-6.54,3.59-4.12,16.27c1.57,8.25-17.86-11.35-17.86-11.35Z"/>
      <path class="cls-1" d="M66.76,94.25s1.77-7.95-7.62-10.33c-6.55-1.66,14.52-13.58,14.52-13.58l2.06,5.22s-2.4,6.65,3.53,12.52c4.25,4.2-12.49,6.17-12.49,6.17Z"/>
      <path class="cls-1" d="M88.66,40.54s-2.47,21.16-20.58,14.01l2.82,9.27,5.7,4.89.71,1.33s1.84-16.31,23.82-8.16l-2.91-13.47-9.56-7.88Z"/>
    </g>
  </g>
</svg>
</file>

<file path="static/white_small_logo.svg">
<?xml version="1.0" encoding="UTF-8"?>
<svg id="Layer_2" data-name="Layer 2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 125.87 137.45">
  <defs>
    <style>
      .cls-1 {
        fill: #fff;
        stroke-width: 0px;
      }
    </style>
  </defs>
  <g id="Layer_1-2" data-name="Layer 1">
    <g>
      <circle class="cls-1" cx="61.91" cy="15.45" r="15.45"/>
      <circle class="cls-1" cx="61.91" cy="122" r="15.45"/>
      <circle class="cls-1" cx="61.91" cy="68.72" r="15.45"/>
      <circle class="cls-1" cx="15.45" cy="41.49" r="15.45"/>
      <circle class="cls-1" cx="15.45" cy="95.62" r="15.45"/>
      <circle class="cls-1" cx="37.29" cy="81.38" r="5.06"/>
      <circle class="cls-1" cx="75.21" cy="95.62" r="8.55"/>
      <circle class="cls-1" cx="110.43" cy="95.62" r="15.45"/>
      <circle class="cls-1" cx="106.6" cy="44.39" r="18.34"/>
      <path class="cls-1" d="M21.89,81.58s7.6,3.79,10.75-2.3l5.72,4.89-.61,2.26s-6.86-.43-6.86,8.17c0,7.98-9-13.02-9-13.02Z"/>
      <path class="cls-1" d="M59.03,106.83s8.85-2.29,7.8-9.65l10.7-1.55,3.36,4.47.11,1.82s-6.54,3.59-4.12,16.27c1.57,8.25-17.86-11.35-17.86-11.35Z"/>
      <path class="cls-1" d="M66.76,94.25s1.77-7.95-7.62-10.33c-6.55-1.66,14.52-13.58,14.52-13.58l2.06,5.22s-2.4,6.65,3.53,12.52c4.25,4.2-12.49,6.17-12.49,6.17Z"/>
      <path class="cls-1" d="M88.66,40.54s-2.47,21.16-20.58,14.01l2.82,9.27,5.7,4.89.71,1.33s1.84-16.31,23.82-8.16l-2.91-13.47-9.56-7.88Z"/>
    </g>
  </g>
</svg>
</file>

<file path="templates/admin.html">
{% extends "layout.html" %}

{% block title %}MedXpert - Admin Dashboard{% endblock %}

{% block head %}
<style>
    /* Admin page modern styling */
    .admin-container {
        position: relative;
        z-index: 5;
        margin: 100px auto 5rem;
        max-width: 1200px;
        padding: 0 1.5rem;
    }
    
    .admin-header {
        text-align: center;
        margin-bottom: 3rem;
    }
    
    .admin-header h1 {
        position: relative;
        font-weight: 700;
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        display: inline-block;
        padding-bottom: 5px;
        line-height: 1.3;
        margin-bottom: 1rem;
        font-size: 2.5rem;
        letter-spacing: -0.5px;
        animation: fadeInDown 0.8s ease-out;
    }
    
    .admin-subtitle {
        color: var(--text-dark);
        font-size: 1.1rem;
        opacity: 0.8;
        max-width: 700px;
        margin: 0 auto;
        animation: fadeInUp 0.8s ease-out 0.2s both;
    }

    .admin-card {
        border: none;
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        overflow: hidden;
        margin-bottom: 2rem;
        transition: all 0.4s ease;
        background-color: white;
        animation: fadeIn 0.8s ease-out;
    }
    
    .admin-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 30px rgba(35, 60, 234, 0.15);
    }
    
    .admin-card-header {
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
        padding: 1.5rem;
        color: white;
        font-weight: 600;
        font-size: 1.25rem;
        border-bottom: none;
        display: flex;
        align-items: center;
        position: relative;
        overflow: hidden;
    }
    
    .admin-card-header:before {
        content: "";
        position: absolute;
        width: 200px;
        height: 200px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        top: -100px;
        right: -50px;
        pointer-events: none;
    }
    
    .admin-card-header i {
        margin-right: 10px;
        font-size: 1.2rem;
    }
    
    .admin-card-body {
        padding: 1.5rem;
    }

    /* User table styling */
    .table-responsive {
        border-radius: var(--radius);
        overflow: hidden;
    }
    
    .admin-table {
        width: 100%;
        margin-bottom: 0;
        color: var(--text-dark);
        vertical-align: top;
        border-color: #f0f0f5;
    }
    
    .admin-table > thead {
        background-color: rgba(35, 60, 234, 0.05);
    }
    
    .admin-table > :not(caption) > * > * {
        padding: 1rem;
        vertical-align: middle;
    }
    
    .admin-table th {
        font-weight: 600;
        text-transform: uppercase;
        font-size: 0.85rem;
        letter-spacing: 0.5px;
        color: #6c757d;
    }
    
    .admin-table tbody tr {
        transition: all 0.3s ease;
    }
    
    .admin-table tbody tr:hover {
        background-color: rgba(35, 60, 234, 0.08);
        transform: scale(1.01);
    }
    
    /* Form controls styled like the homepage */
    .form-control {
        border-radius: var(--radius);
        padding: 0.75rem 1rem;
        border: 1px solid rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }
    
    .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(35, 60, 234, 0.15);
        background-color: white;
        transform: translateY(-2px);
    }
    
    .form-label {
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--dark-gray);
    }
    
    .btn-admin {
        border-radius: var(--radius);
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
        z-index: 1;
    }
    
    .btn-admin:before {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 0;
        background: rgba(255, 255, 255, 0.2);
        transition: all 0.3s;
        border-radius: 50% 50% 0 0;
        z-index: -1;
    }
    
    .btn-admin:hover:before {
        height: 180%;
    }
    
    .btn-admin-primary {
        background: linear-gradient(135deg, #1a2cb3, #233cea);
        color: white;
        border: none;
    }
    
    .btn-admin-primary:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 20px rgba(35, 60, 234, 0.3);
        color: white;
    }
    
    .btn-admin-warning {
        background-color: #ffc107;
        color: #212529;
        border: none;
    }
    
    .btn-admin-warning:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 20px rgba(255, 193, 7, 0.3);
        background-color: #e5ac00;
        color: #212529;
    }
    
    .btn-admin-danger {
        background-color: #dc3545;
        color: white;
        border: none;
    }
    
    .btn-admin-danger:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 20px rgba(220, 53, 69, 0.3);
        color: white;
        background-color: #c82333;
    }
    
    /* Metrics cards */
    .admin-metrics {
        display: flex;
        flex-wrap: wrap;
        gap: 1.5rem;
        margin-bottom: 2rem;
    }
    
    .metric-card {
        flex: 1;
        min-width: 200px;
        background: white;
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        padding: 1.5rem;
        text-align: center;
        transition: all 0.4s ease;
        position: relative;
        overflow: hidden;
    }
    
    .metric-card:nth-child(1) { animation: fadeIn 0.8s ease-out 0.1s both; }
    .metric-card:nth-child(2) { animation: fadeIn 0.8s ease-out 0.2s both; }
    .metric-card:nth-child(3) { animation: fadeIn 0.8s ease-out 0.3s both; }
    .metric-card:nth-child(4) { animation: fadeIn 0.8s ease-out 0.4s both; }
    
    .metric-card:hover {
        transform: translateY(-7px);
        box-shadow: 0 15px 30px rgba(35, 60, 234, 0.15);
    }
    
    .metric-card:before {
        content: "";
        position: absolute;
        width: 150px;
        height: 150px;
        background: radial-gradient(rgba(35, 60, 234, 0.05), transparent);
        border-radius: 50%;
        bottom: -70px;
        right: -70px;
        pointer-events: none;
    }
    
    .metric-icon {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: linear-gradient(135deg, rgba(26, 44, 179, 0.1), rgba(35, 60, 234, 0.15));
        color: var(--primary-color);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        margin: 0 auto 1rem;
        transition: all 0.3s ease;
    }
    
    .metric-card:hover .metric-icon {
        transform: scale(1.15);
        background: linear-gradient(135deg, rgba(26, 44, 179, 0.15), rgba(35, 60, 234, 0.25));
    }
    
    .metric-value {
        font-size: 2rem;
        font-weight: 700;
        background: linear-gradient(135deg, #1a2cb3, #3346e8);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 0.5rem;
        transition: all 0.3s ease;
    }
    
    .metric-card:hover .metric-value {
        transform: scale(1.1);
    }
    
    .metric-label {
        color: #6c757d;
        font-size: 0.95rem;
        text-transform: uppercase;
        letter-spacing: 1px;
    }
    
    /* Modal styling */
    .modal-content {
        border: none;
        border-radius: var(--radius);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.25);
    }
    
    .modal-header {
        background: linear-gradient(135deg, #1a2cb3, #233cea);
        color: white;
        border-bottom: none;
        border-top-left-radius: var(--radius);
        border-top-right-radius: var(--radius);
        padding: 1.5rem;
    }
    
    .modal-header .close {
        color: white;
        opacity: 0.8;
        text-shadow: none;
    }
    
    .modal-body {
        padding: 2rem;
    }
    
    .modal-footer {
        border-top: 1px solid rgba(0, 0, 0, 0.05);
        padding: 1.5rem 2rem;
    }
    
    /* Status badges */
    .user-status {
        padding: 0.35rem 0.85rem;
        border-radius: 50px;
        font-size: 0.85rem;
        font-weight: 600;
        display: inline-block;
        transition: all 0.3s ease;
    }
    
    .user-status.active {
        background-color: rgba(40, 167, 69, 0.1);
        color: #28a745;
    }
    
    .user-status.inactive {
        background-color: rgba(108, 117, 125, 0.1);
        color: #6c757d;
    }
    
    .user-status.admin {
        background-color: rgba(35, 60, 234, 0.1);
        color: var(--primary-color);
    }

    /* Animation keyframes */
    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @keyframes fadeInUp {
        from { 
            opacity: 0;
            transform: translateY(20px); 
        }
        to { 
            opacity: 1;
            transform: translateY(0); 
        }
    }

    @keyframes fadeInDown {
        from { 
            opacity: 0;
            transform: translateY(-20px); 
        }
        to { 
            opacity: 1;
            transform: translateY(0); 
        }
    }
    
    /* Alert message styling */
    .admin-alert {
        border-radius: var(--radius);
        padding: 1rem 1.5rem;
        margin-bottom: 2rem;
        display: flex;
        align-items: center;
        animation: fadeIn 0.5s ease-out;
    }
    
    .admin-alert-success {
        background-color: rgba(40, 167, 69, 0.1);
        border-left: 4px solid #28a745;
        color: #28a745;
    }
    
    .admin-alert-danger {
        background-color: rgba(220, 53, 69, 0.1);
        border-left: 4px solid #dc3545;
        color: #dc3545;
    }
    
    .admin-alert-icon {
        margin-right: 1rem;
        font-size: 1.25rem;
    }
    
    /* Fancy button hover effect */
    .btn-fancy {
        transition: all 0.3s;
        position: relative;
    }
    
    .btn-fancy:after {
        content: "";
        position: absolute;
        width: 0;
        height: 0;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        transition: all 0.5s ease;
    }
    
    .btn-fancy:active:after {
        width: 200px;
        height: 200px;
        opacity: 0;
    }

    /* Delete confirmation modal styling */
    .delete-confirmation {
        text-align: center;
        padding: 1.5rem 0;
    }

    .delete-icon {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: rgba(220, 53, 69, 0.1);
        color: #dc3545;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2.5rem;
        margin: 0 auto 1.5rem;
    }

    .delete-title {
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 1rem;
        color: #dc3545;
    }

    .delete-description {
        color: #6c757d;
        margin-bottom: 1.5rem;
    }

    .delete-username {
        font-weight: 700;
        color: #333;
        padding: 0 0.25rem;
    }

    .btn-modal-cancel {
        background-color: #f8f9fa;
        color: #333;
        border: 1px solid #ddd;
        padding: 0.75rem 1.5rem;
        border-radius: var(--radius);
        font-weight: 500;
        transition: all 0.2s ease;
    }

    .btn-modal-cancel:hover {
        background-color: #e9ecef;
    }

    .btn-modal-delete {
        background-color: #dc3545;
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: var(--radius);
        font-weight: 500;
        transition: all 0.2s ease;
        box-shadow: 0 4px 8px rgba(220, 53, 69, 0.2);
    }
    
    .btn-modal-delete:hover {
        background-color: #c82333;
        transform: translateY(-2px);
        box-shadow: 0 6px 12px rgba(220, 53, 69, 0.3);
        color: white;
    }

    .btn-modal-delete:active,
    .btn-modal-delete:focus {
        background-color: #bd2130;
        color: white;
        transform: translateY(0);
    }
</style>

<!-- Updated modal script -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Handle success/error messages
    let message = '{{ message }}';
    let messageType = '{{ message_type }}';
    
    if (message && messageType) {
        setTimeout(function() {
            let alertElement = document.querySelector('.admin-alert');
            if (alertElement) {
                alertElement.style.opacity = '0';
                setTimeout(() => alertElement.remove(), 500);
            }
        }, 5000);
    }
    
    // Fix modal backdrop issues using native Bootstrap events
    var deleteButtons = document.querySelectorAll('[data-bs-toggle="modal"]');
    deleteButtons.forEach(function(button) {
        button.addEventListener('click', function() {
            // Store the user ID in the modal's dataset for reference
            var userId = this.getAttribute('data-user-id');
            var modal = document.getElementById('deleteUserModal');
            
            // Update the delete link with the correct user ID
            var deleteLink = modal.querySelector('.btn-delete-user');
            deleteLink.href = '/admin/delete_user/' + userId;
            
            // Update the username in the confirmation message
            var username = this.getAttribute('data-username');
            modal.querySelector('.username-to-delete').textContent = username;
        });
    });
});
</script>
{% endblock %}

{% block content %}
<div class="content-section">
    <div class="admin-container">
        <div class="admin-header">
            <h1>Admin Dashboard</h1>
            <p class="admin-subtitle">Manage users and system settings from this central control panel</p>
        </div>
        
        {% if message %}
        <div class="admin-alert {% if message_type == 'success' %}admin-alert-success{% else %}admin-alert-danger{% endif %}">
            <i class="admin-alert-icon fas {% if message_type == 'success' %}fa-check-circle{% else %}fa-exclamation-circle{% endif %}"></i>
            <div>{{ message }}</div>
        </div>
        {% endif %}
        
        <!-- Admin Metrics -->
        <div class="admin-metrics">
            <div class="metric-card">
                <div class="metric-icon">
                    <i class="fas fa-users"></i>
                </div>
                <div class="metric-value">{{ users|length }}</div>
                <div class="metric-label">Total Users</div>
            </div>
            
            <div class="metric-card">
                <div class="metric-icon">
                    <i class="fas fa-user-shield"></i>
                </div>
                <div class="metric-value">{{ users|selectattr('is_admin')|list|length }}</div>
                <div class="metric-label">Admin Users</div>
            </div>
            
            <div class="metric-card">
                <div class="metric-icon">
                    <i class="fas fa-chart-line"></i>
                </div>
                <div class="metric-value">56</div>
                <div class="metric-label">Today's Analyses</div>
            </div>
            
            <div class="metric-card">
                <div class="metric-icon">
                    <i class="fas fa-server"></i>
                </div>
                <div class="metric-value">99.9%</div>
                <div class="metric-label">System Uptime</div>
            </div>
        </div>
        
        <!-- Create User Card -->
        <div class="admin-card">
            <div class="admin-card-header">
                <i class="fas fa-user-plus"></i> Create New User
            </div>
            <div class="admin-card-body">
                <form method="POST" action="{{ url_for('create_user') }}">
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label for="username" class="form-label">Username</label>
                            <input type="text" class="form-control" id="username" name="username" required>
                        </div>
                        <div class="col-md-4">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" name="email" required>
                        </div>
                        <div class="col-md-4">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="password" name="password" required>
                        </div>
                        <div class="col-md-6">
                            <label for="first_name" class="form-label">First Name</label>
                            <input type="text" class="form-control" id="first_name" name="first_name">
                        </div>
                        <div class="col-md-6">
                            <label for="last_name" class="form-label">Last Name</label>
                            <input type="text" class="form-control" id="last_name" name="last_name">
                        </div>
                        <div class="col-12">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="is_admin" name="is_admin">
                                <label class="form-check-label" for="is_admin">
                                    Admin User
                                </label>
                            </div>
                        </div>
                        <div class="col-12">
                            <button type="submit" class="btn btn-admin btn-admin-primary btn-fancy">Create User</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        
        <!-- User List Card -->
        <div class="admin-card">
            <div class="admin-card-header">
                <i class="fas fa-users"></i> User Management
            </div>
            <div class="admin-card-body">
                <div class="table-responsive">
                    <table class="admin-table table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Username</th>
                                <th>Email</th>
                                <th>Name</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for user in users %}
                            <tr>
                                <td>{{ user.id }}</td>
                                <td>{{ user.username }}</td>
                                <td>{{ user.email }}</td>
                                <td>{{ user.full_name or 'N/A' }}</td>
                                <td>
                                    {% if user.is_admin %}
                                    <span class="user-status admin">Admin</span>
                                    {% else %}
                                    <span class="user-status active">User</span>
                                    {% endif %}
                                </td>
                                <td>
                                    <a href="{{ url_for('edit_user', user_id=user.id) }}" class="btn btn-admin btn-admin-warning btn-sm btn-fancy">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                    <button type="button" class="btn btn-admin btn-admin-danger btn-sm btn-fancy" 
                                            data-bs-toggle="modal" 
                                            data-bs-target="#deleteUserModal"
                                            data-user-id="{{ user.id }}"
                                            data-username="{{ user.username }}">
                                        <i class="fas fa-trash-alt"></i> Delete
                                    </button>
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Single Reusable Delete Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteUserModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <div class="delete-confirmation">
                    <div class="delete-icon">
                        <i class="fas fa-exclamation-triangle"></i>
                    </div>
                    <h4 class="delete-title">Are you sure?</h4>
                    <p class="delete-description">
                        You are about to delete user <span class="delete-username username-to-delete"></span>.<br>
                        This action cannot be undone and all user data will be permanently deleted.
                    </p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-modal-cancel" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Cancel
                </button>
                <a href="#" class="btn btn-modal-delete btn-delete-user">
                    <i class="fas fa-trash-alt me-2"></i>Delete User
                </a>
            </div>
        </div>
    </div>
</div>
{% endblock %}
</file>

<file path="templates/brain_example.html">
{% extends "layout.html" %}

{% block title %}Brain Tumor Detection Example - MedXpert{% endblock %}

{% block content %}
<style>
.example-hero {
    background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
    color: white;
    padding: 120px 0 100px;
    margin-top: 0;
    text-align: center;
}

.example-hero h1 {
    font-size: 3.5rem;
    font-weight: 800;
    margin-bottom: 1.5rem;
}

.example-hero p {
    font-size: 1.4rem;
    opacity: 0.9;
    max-width: 800px;
    margin: 0 auto;
    line-height: 1.6;
}

.example-section {
    padding: 100px 0;
    background: #f8f9fa;
}

.model-stats {
    display: flex;
    gap: 30px;
    flex-wrap: wrap;
    justify-content: center;
    margin-bottom: 50px;
}

.stat-item {
    background: rgba(26, 44, 179, 0.1);
    padding: 20px 30px;
    border-radius: 15px;
    text-align: center;
}

.stat-label {
    font-size: 1.1rem;
    color: #1a2cb3;
    margin-bottom: 8px;
}

.stat-value {
    font-size: 1.4rem;
    font-weight: 700;
    color: #1a2cb3;
}

.example-showcase {
    background: white;
    border-radius: 20px;
    padding: 40px;
    box-shadow: 0 20px 60px rgba(26, 44, 179, 0.08);
}

.example-title {
    text-align: center;
    font-size: 1.5rem;
    font-weight: 600;
    color: #1a2cb3;
    margin-bottom: 30px;
}

.before-after-container {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    gap: 40px;
    max-width: 1200px;
    margin: 0 auto;
    align-items: center;
}

.image-container {
    text-align: center;
    background: white;
    padding: 35px;
    border-radius: 20px;
    box-shadow: 0 15px 45px rgba(0,0,0,0.08);
    transition: all 0.3s ease;
}

.image-container:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 60px rgba(0,0,0,0.12);
}

.image-label {
    font-weight: 700;
    color: #1a2cb3;
    margin-bottom: 20px;
    font-size: 1.3rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.arrow-icon {
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    color: white;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
}

.try-model-btn {
    display: block;
    width: fit-content;
    margin: 50px auto 0;
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    color: white;
    padding: 15px 40px;
    border-radius: 30px;
    text-decoration: none;
    font-weight: 600;
    font-size: 1.2rem;
    transition: all 0.3s ease;
    box-shadow: 0 10px 30px rgba(26, 44, 179, 0.2);
}

.try-model-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 15px 40px rgba(26, 44, 179, 0.3);
    color: white;
    text-decoration: none;
}

@media (max-width: 768px) {
    .before-after-container {
        grid-template-columns: 1fr;
        gap: 30px;
    }
    
    .arrow-icon {
        transform: rotate(90deg);
        margin: 0 auto;
    }
    
    .image-container {
        padding: 25px;
    }
}
</style>

<!-- Hero Section -->
<section class="example-hero">
    <div class="container">
        <h1>Brain Tumor Detection</h1>
        <p>Advanced MRI analysis for tumor segmentation using state-of-the-art AI technology</p>
    </div>
</section>

<!-- Example Section -->
<section class="example-section">
    <div class="container">
        <!-- Model Stats -->
        <div class="model-stats">
            <div class="stat-item">
                <div class="stat-label">Dice Score</div>
                <div class="stat-value">0.73</div>
            </div>
            <div class="stat-item">
                <div class="stat-label">Architecture</div>
                <div class="stat-value">U-Net</div>
            </div>
            <div class="stat-item">
                <div class="stat-label">Input Type</div>
                <div class="stat-value">MRI DICOM</div>
            </div>
        </div>

        <!-- Example Showcase -->
        <div class="example-showcase">
            <h4 class="example-title">Clinical Case Example</h4>
            <div class="before-after-container">
                <div class="image-container">
                    <div class="image-label">Original MRI Scan</div>
                    <img src="{{ url_for('static', filename='images/brain.png') }}" alt="Brain MRI Original" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                    <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">Original brain MRI showing suspected tumor region</div>
                </div>
                
                <div class="arrow-icon">
                    <i class="fas fa-arrow-right"></i>
                </div>
                
                <div class="image-container">
                    <div class="image-label">AI Analysis Result</div>
                    <img src="{{ url_for('static', filename='images/result_brain.png') }}" alt="Brain MRI with Tumor Detection" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                    <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">AI-highlighted tumor boundaries with confidence metrics</div>
                </div>
            </div>
        </div>

        <!-- Try Model Button -->
        <a href="{{ url_for('brain') }}" class="try-model-btn">
            <i class="fas fa-play"></i>
            Try This Model
        </a>
    </div>
</section>
{% endblock %}
</file>

<file path="templates/brain.html">
{% extends "layout.html" %}
{% block title %}Brain Tumor Detection - MedXpert{% endblock %}

{% block head %}
<style>
    .slider-container {
        margin-bottom: 15px;
    }
    .image-container {
        position: relative;
        max-width: 100%;
        margin: 0 auto;
        border-radius: 12px;
        overflow: hidden;
        height: 500px; /* Increased height from 400px to 500px to make image bigger */
    }
    .image-container img {
        max-width: 100%;
        width: 100%;
        height: 100%;
        margin: 0 auto;
        display: block;
        border-radius: 12px;
        object-fit: contain; /* Maintain aspect ratio */
    }
    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0.7;
        border-radius: 12px;
    }
    .control-panel {
        background-color: white;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }
    .slice-navigation {
        text-align: center;
        margin: 20px 0;
    }
    .slice-slider {
        width: 100%;
        margin: 0 auto;
    }
    .tumor-info-card {
        background-color: #f8f9fa;
        border-left: 4px solid #0d6efd;
        padding: 15px;
        margin-bottom: 20px;
    }
    .upload-container {
        background-color: white;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        max-width: 750px;
        margin: 0 auto;
    }
    .brain-header {
        background-color: rgba(35, 60, 234, 0.1);
        border-radius: var(--border-radius);
    }
    #segmentationOverlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: block; /* Changed from 'none' to 'block' to show by default */
    }
</style>
{% endblock %}

{% block content %}
<section class="model-header brain-header py-5">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-12 text-center">
                <h1>Brain Tumor Detection</h1>
                <p class="lead">Upload an MRI brain scan to detect and segment tumor regions with state-of-the-art accuracy.</p>
            </div>
        </div>
    </div>
</section>

<!-- Section 1: Upload and Analysis -->
<section class="py-5 bg-light">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card mb-4 shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h3 class="mb-0"><i class="fas fa-upload me-2"></i>Upload MRI Scan</h3>
                    </div>
                    <div class="card-body">
                        <form action="{{ url_for('predict_brain') }}" method="POST" enctype="multipart/form-data">
                            <div class="mb-3">
                                <label for="file" class="form-label">Select MRI image (NII.GZ format)</label>
                                <input type="file" class="form-control" id="file" name="file" accept=".nii.gz" required>
                                <div class="form-text">Supported format: NII.GZ (NIFTI) scan images</div>
                            </div>
                            <button type="submit" class="btn btn-primary" id="analyzeBrainBtn">
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                                Analyze MRI
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Section 2: Results Analysis -->
<section class="py-5 bg-white">
    <div class="container">
        {% if original_img_b64 %}
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card mb-4 shadow">
                    <div class="card-header bg-primary text-white">
                        <h3 class="mb-0"><i class="fas fa-chart-bar me-2"></i>MRI Analysis Results</h3>
                    </div>
                    <div class="card-body">
                        <!-- Tumor Info Card -->
                        <div class="tumor-info-card">
                            <h5><i class="fas fa-info-circle me-2"></i>Tumor Detection Summary</h5>
                            <p class="mb-1" id="slice-count-info">Detecting tumor information...</p>
                            <p class="mb-0" id="current-slice-info">Current slice: analyzing...</p>
                        </div>
                        
                        <!-- MRI Image Display with Rearranged Layout -->
                        <div class="row">
                            <div class="col-lg-4 col-md-4">
                                <!-- Control Panel moved to left side -->
                                <div class="control-panel">
                                    <h5 class="mb-3">Image Controls</h5>
                                    <div class="slider-container">
                                        <label for="brightness" class="form-label">Brightness: <span id="brightnessValue">0</span></label>
                                        <input type="range" class="form-range" min="-100" max="100" value="0" id="brightness">
                                    </div>
                                    <div class="slider-container">
                                        <label for="contrast" class="form-label">Contrast: <span id="contrastValue">100</span>%</label>
                                        <input type="range" class="form-range" min="0" max="200" value="100" id="contrast">
                                    </div>
                                    
                                    <div class="form-check form-switch mt-3">
                                        <input class="form-check-input" type="checkbox" id="toggleSegmentation" checked>
                                        <label class="form-check-label" for="toggleSegmentation">Show Tumor Segmentation</label>
                                    </div>
                                    
                                    <div class="text-center mt-3">
                                        <button class="btn btn-sm btn-outline-primary" id="resetAdjustments">Reset Adjustments</button>
                                    </div>
                                    
                                    <!-- MRI Slice Navigation moved under the controls -->
                                    <div class="slice-navigation mt-4">
                                        <h5 class="mb-3">Slice Navigation</h5>
                                        <div class="d-flex align-items-center justify-content-center mb-3">
                                            <button id="prevSlice" class="btn btn-sm btn-outline-secondary me-3">
                                                <i class="fas fa-chevron-left"></i>
                                            </button>
                                            <span id="sliceCounter">Slice 1 of 64</span>
                                            <button id="nextSlice" class="btn btn-sm btn-outline-secondary ms-3">
                                                <i class="fas fa-chevron-right"></i>
                                            </button>
                                        </div>
                                        <input type="range" class="form-range slice-slider" min="0" max="63" value="0" id="sliceSlider">
                                    </div>
                                </div>
                            </div>
                            
                            <div class="col-lg-8 col-md-8">
                                <!-- MRI Image moved to right side -->
                                <div class="image-container">
                                    <img src="data:image/png;base64,{{ original_img_b64 }}" class="img-fluid rounded" id="baseImage" alt="MRI Slice">
                                    <img src="data:image/png;base64,{{ segmented_img_b64 }}" class="img-fluid rounded" id="segmentationOverlay" alt="Tumor Segmentation">
                                </div>
                                <p class="text-center text-muted mt-2" id="sliceLabel">Slice 1/64</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}
    </div>
</section>

<!-- Section 3: Educational Information -->
<section class="py-5 bg-light">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h3 class="mb-0"><i class="fas fa-book-medical me-2"></i>Educational Information</h3>
                    </div>
                    <div class="card-body">
                        <h4>About Brain Tumor Detection</h4>
                        <p>Brain tumors are masses or growths of abnormal cells in the brain. They can be benign (non-cancerous) or malignant (cancerous), and early detection is crucial for effective treatment.</p>
                        
                        <div class="row mt-4">
                            <div class="col-md-6">
                                <h5>How Our AI Works</h5>
                                <p>Our brain tumor detection model uses a U-Net architecture trained on the BraTS dataset to segment tumor regions in MRI scans. The model analyzes multiple MRI slices to identify abnormal tissue patterns associated with tumors.</p>
                                
                                <h6 class="mt-4">Segmentation Labels:</h6>
                                <ul class="list-group">
                                    <li class="list-group-item d-flex align-items-center">
                                        <span class="badge bg-warning text-dark me-2" style="width: 20px; height: 20px;"></span>
                                        <span>Tumor region - Areas the AI has identified as potential tumor tissue</span>
                                    </li>
                                </ul>
                            </div>
                            
                            <div class="col-md-6">
                                <h5>Types of Brain Tumors</h5>
                                <ul>
                                    <li><strong>Gliomas:</strong> Tumors that occur in the brain and spinal cord, including astrocytomas, oligodendrogliomas, and glioblastomas</li>
                                    <li><strong>Meningiomas:</strong> Tumors that arise from the membranes surrounding the brain and spinal cord</li>
                                    <li><strong>Pituitary Adenomas:</strong> Tumors that develop in the pituitary gland</li>
                                    <li><strong>Schwannomas:</strong> Tumors that develop from the Schwann cells that surround nerves</li>
                                    <li><strong>Metastatic Brain Tumors:</strong> Cancer that spreads to the brain from another part of the body</li>
                                </ul>
                            </div>
                        </div>
                        
                        <div class="row mt-4">
                            <div class="col-md-12">
                                <h5>MRI in Brain Tumor Diagnosis</h5>
                                <p>Magnetic Resonance Imaging (MRI) is the preferred imaging method for diagnosing brain tumors because it provides detailed images of the brain's soft tissues. Different MRI sequences (T1, T2, FLAIR, etc.) highlight different aspects of brain tissue and tumor characteristics.</p>
                            </div>
                        </div>
                        
                        <div class="alert alert-warning mt-4">
                            <p class="mb-0"><strong>Disclaimer:</strong> This AI tool is designed to assist medical professionals in detecting brain tumors. It should not replace professional medical diagnosis. Always consult with healthcare providers for medical decisions.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
{% endblock %}

{% block scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Add event listener to the brain analysis form to show loading spinner
        const brainForm = document.querySelector('form');
        const analyzeBtn = document.getElementById('analyzeBrainBtn');
        
        if (brainForm) {
            brainForm.addEventListener('submit', function() {
                // Show spinner and disable button
                const spinner = analyzeBtn.querySelector('.spinner-border');
                spinner.classList.remove('d-none');
                analyzeBtn.disabled = true;
            });
        }
    });
</script>

{% if original_img_b64 %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize variables with data from backend
        let currentSlice = {{ current_slice_idx if current_slice_idx else 0 }};
        const totalSlices = {{ total_slices if total_slices else 64 }};
        let slicesWithTumor = {{ tumor_info.tumor_slice_indices|tojson if tumor_info and tumor_info.tumor_slice_indices else '[]' }};
        
        // Store all slice images
        let allSlices = {
            original: [],
            segmented: []
        };
        
        // Initialize with data from the backend if available
        {% if all_original_slices %}
            {% for slice in all_original_slices %}
                allSlices.original.push("{{ slice }}");
            {% endfor %}
        {% else %}
            // If not provided, at least add the current slice
            allSlices.original.push("{{ original_img_b64 }}");
        {% endif %}
        
        {% if all_segmented_slices %}
            {% for slice in all_segmented_slices %}
                allSlices.segmented.push("{{ slice }}");
            {% endfor %}
        {% else %}
            // If not provided, at least add the current slice
            allSlices.segmented.push("{{ segmented_img_b64 }}");
        {% endif %}
        
        // Get DOM elements
        const baseImage = document.getElementById('baseImage');
        const segmentationOverlay = document.getElementById('segmentationOverlay');
        const toggleSegmentation = document.getElementById('toggleSegmentation');
        const sliceSlider = document.getElementById('sliceSlider');
        const sliceCounter = document.getElementById('sliceCounter');
        const sliceLabel = document.getElementById('sliceLabel');
        const sliceCountInfo = document.getElementById('slice-count-info');
        const currentSliceInfo = document.getElementById('current-slice-info');
        const brightnessSlider = document.getElementById('brightness');
        const contrastSlider = document.getElementById('contrast');
        const brightnessValue = document.getElementById('brightnessValue');
        const contrastValue = document.getElementById('contrastValue');
        const prevSliceBtn = document.getElementById('prevSlice');
        const nextSliceBtn = document.getElementById('nextSlice');
        const resetBtn = document.getElementById('resetAdjustments');
        
        // Update tumor info section
        function updateTumorInfo() {
            if (slicesWithTumor && slicesWithTumor.length > 0) {
                sliceCountInfo.textContent = `Tumor detected in ${slicesWithTumor.length} of ${totalSlices} slices`;
            } else {
                sliceCountInfo.textContent = `No tumor detected across ${totalSlices} slices`;
            }
            updateCurrentSliceInfo();
        }
        
        // Update current slice info
        function updateCurrentSliceInfo() {
            currentSliceInfo.textContent = `Current slice: ${currentSlice + 1}/${totalSlices}`;
            
            // Highlight if tumor is present in this slice
            if (slicesWithTumor && slicesWithTumor.includes(currentSlice)) {
                currentSliceInfo.classList.add('text-danger', 'fw-bold');
            } else {
                currentSliceInfo.classList.remove('text-danger', 'fw-bold');
            }
        }
        
        // Update slice navigation information
        function updateSliceNavigationInfo() {
            sliceCounter.textContent = `Slice ${currentSlice + 1} of ${totalSlices}`;
            sliceLabel.textContent = `Slice ${currentSlice + 1}/${totalSlices}`;
            sliceSlider.value = currentSlice;
        }
        
        // Apply brightness and contrast filters
        function applyFilters() {
            const brightnessVal = parseInt(brightnessSlider.value) + 100;
            const contrastVal = parseInt(contrastSlider.value);
            
            baseImage.style.filter = `brightness(${brightnessVal/100}) contrast(${contrastVal/100})`;
            segmentationOverlay.style.filter = `brightness(${brightnessVal/100}) contrast(${contrastVal/100})`;
        }
        
        // Navigate to a different slice
        function goToSlice(index) {
            if (index < 0) index = 0;
            if (index >= totalSlices) index = totalSlices - 1;
            
            currentSlice = index;
            
            // Update the slice counter and slider
            updateSliceNavigationInfo();
            updateCurrentSliceInfo();
            
            // Update the displayed images if we have the data
            if (allSlices.original.length > currentSlice) {
                baseImage.src = `data:image/png;base64,${allSlices.original[currentSlice]}`;
            }
            
            if (allSlices.segmented.length > currentSlice) {
                segmentationOverlay.src = `data:image/png;base64,${allSlices.segmented[currentSlice]}`;
            }
            
            // Remove visual border indicator code
        }
        
        // Set up event listeners
        
        // Toggle segmentation visibility
        toggleSegmentation.addEventListener('change', function() {
            segmentationOverlay.style.display = this.checked ? 'block' : 'none';
        });
        
        // Brightness control
        brightnessSlider.addEventListener('input', function() {
            brightnessValue.textContent = this.value;
            applyFilters();
        });
        
        // Contrast control
        contrastSlider.addEventListener('input', function() {
            contrastValue.textContent = this.value;
            applyFilters();
        });
        
        // Reset adjustments
        resetBtn.addEventListener('click', function() {
            brightnessSlider.value = 0;
            contrastSlider.value = 100;
            brightnessValue.textContent = '0';
            contrastValue.textContent = '100';
            toggleSegmentation.checked = true;
            segmentationOverlay.style.display = 'block';
            applyFilters();
        });
        
        // Navigation buttons
        prevSliceBtn.addEventListener('click', function() {
            goToSlice(currentSlice - 1);
        });
        
        nextSliceBtn.addEventListener('click', function() {
            goToSlice(currentSlice + 1);
        });
        
        // Slider navigation
        sliceSlider.addEventListener('input', function() {
            goToSlice(parseInt(this.value));
        });
        
        // Mouse wheel navigation
        const imageContainer = document.querySelector('.image-container');
        if (imageContainer) {
            imageContainer.addEventListener('wheel', function(event) {
                event.preventDefault();
                // Scroll down = next slice, scroll up = previous slice
                if (event.deltaY > 0) {
                    goToSlice(currentSlice + 1);
                } else {
                    goToSlice(currentSlice - 1);
                }
            });
        }
        
        // Keyboard navigation
        document.addEventListener('keydown', function(event) {
            if (event.key === 'ArrowRight' || event.key === 'ArrowDown') {
                goToSlice(currentSlice + 1);
            } else if (event.key === 'ArrowLeft' || event.key === 'ArrowUp') {
                goToSlice(currentSlice - 1);
            }
        });

        // Initialize the application
        updateTumorInfo();
        updateSliceNavigationInfo();
        updateCurrentSliceInfo();
        applyFilters();
        
        // Remove the initial border indicator code
    });
</script>
{% endif %}
{% endblock %}
</file>

<file path="templates/chest_example.html">
{% extends "layout.html" %}

{% block title %}Chest X-ray Analysis Example - MedXpert{% endblock %}

{% block content %}
<style>
.example-hero {
    background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
    color: white;
    padding: 120px 0 100px;
    margin-top: 0;
    text-align: center;
}

.example-hero h1 {
    font-size: 3.5rem;
    font-weight: 800;
    margin-bottom: 1.5rem;
}

.example-hero p {
    font-size: 1.4rem;
    opacity: 0.9;
    max-width: 800px;
    margin: 0 auto;
    line-height: 1.6;
}

.example-section {
    padding: 100px 0;
    background: #f8f9fa;
}

.model-stats {
    display: flex;
    gap: 30px;
    flex-wrap: wrap;
    justify-content: center;
    margin-bottom: 50px;
}

.stat-item {
    background: rgba(26, 44, 179, 0.1);
    padding: 20px 30px;
    border-radius: 15px;
    text-align: center;
}

.stat-label {
    font-size: 1.1rem;
    color: #1a2cb3;
    margin-bottom: 8px;
}

.stat-value {
    font-size: 1.4rem;
    font-weight: 700;
    color: #1a2cb3;
}

.example-showcase {
    background: white;
    border-radius: 20px;
    padding: 40px;
    box-shadow: 0 20px 60px rgba(26, 44, 179, 0.08);
}

.example-title {
    text-align: center;
    font-size: 1.5rem;
    font-weight: 600;
    color: #1a2cb3;
    margin-bottom: 30px;
}

.before-after-container {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    gap: 40px;
    max-width: 1200px;
    margin: 0 auto;
    align-items: center;
}

.image-container {
    text-align: center;
    background: white;
    padding: 35px;
    border-radius: 20px;
    box-shadow: 0 15px 45px rgba(0,0,0,0.08);
    transition: all 0.3s ease;
}

.image-container:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 60px rgba(0,0,0,0.12);
}

.image-label {
    font-weight: 700;
    color: #1a2cb3;
    margin-bottom: 20px;
    font-size: 1.3rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.arrow-icon {
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    color: white;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
}

.try-model-btn {
    display: block;
    width: fit-content;
    margin: 50px auto 0;
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    color: white;
    padding: 15px 40px;
    border-radius: 30px;
    text-decoration: none;
    font-weight: 600;
    font-size: 1.2rem;
    transition: all 0.3s ease;
    box-shadow: 0 10px 30px rgba(26, 44, 179, 0.2);
}

.try-model-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 15px 40px rgba(26, 44, 179, 0.3);
    color: white;
    text-decoration: none;
}

@media (max-width: 768px) {
    .before-after-container {
        grid-template-columns: 1fr;
        gap: 30px;
    }
    
    .arrow-icon {
        transform: rotate(90deg);
        margin: 0 auto;
    }
    
    .image-container {
        padding: 25px;
    }
}
</style>

<!-- Hero Section -->
<section class="example-hero">
    <div class="container">
        <h1>Chest X-ray Analysis</h1>
        <p>Multi-class classification for lung pathology detection using advanced AI technology</p>
    </div>
</section>

<!-- Example Section -->
<section class="example-section">
    <div class="container">
        <!-- Model Stats -->
        <div class="model-stats">
            <div class="stat-item">
                <div class="stat-label">Accuracy</div>
                <div class="stat-value">95%</div>
            </div>
            <div class="stat-item">
                <div class="stat-label">Architecture</div>
                <div class="stat-value">CNN</div>
            </div>
            <div class="stat-item">
                <div class="stat-label">Classes</div>
                <div class="stat-value">14 Conditions</div>
            </div>
        </div>

        <!-- Example Showcase -->
        <div class="example-showcase">
            <h4 class="example-title">COVID-19 Detection Example</h4>
            <div class="before-after-container">
                <div class="image-container">
                    <div class="image-label">Chest X-ray</div>
                    <img src="{{ url_for('static', filename='images/COVID.png') }}" alt="Chest X-ray Original" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                    <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">Standard chest radiograph showing possible lung opacity</div>
                </div>
                
                <div class="arrow-icon">
                    <i class="fas fa-arrow-right"></i>
                </div>
                
                <div class="image-container">
                    <div class="image-label">AI Analysis</div>
                    <div style="position: relative;">
                        <img src="{{ url_for('static', filename='images/gradcam_COVID.png') }}" alt="Chest X-ray with COVID-19 Detection" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                        <div style="position: absolute; top: 20px; right: 20px; background: rgba(220, 53, 69, 0.9); color: white; padding: 8px 15px; border-radius: 20px; font-weight: 700; font-size: 1.1rem; backdrop-filter: blur(10px);">
                            COVID-19
                        </div>
                        <div style="position: absolute; bottom: 20px; left: 20px; background: rgba(220, 53, 69, 0.9); color: white; padding: 5px 12px; border-radius: 15px; font-weight: 600; backdrop-filter: blur(10px);">
                            100% Confidence
                        </div>
                    </div>
                    <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">AI highlighted COVID-19 patterns with heatmap visualization</div>
                </div>
            </div>
        </div>

        <!-- Try Model Button -->
        <a href="{{ url_for('chest') }}" class="try-model-btn">
            <i class="fas fa-play"></i>
            Try This Model
        </a>
    </div>
</section>
{% endblock %}
</file>

<file path="templates/chest.html">
{% extends "layout.html" %}

{% block title %}MedXpert - Chest X-ray Analysis{% endblock %}

{% block head %}
<style>
    .chest-header {
        background-color: rgba(22, 163, 74, 0.1);
        border-radius: var(--border-radius);
    }
    
    .model-icon {
        max-height: 180px;
    }
    
    .upload-container {
        background-color: white;
    }
    
    .gradcam-toggle-container {
        margin-top: 1rem;
        text-align: center;
    }
    
    .image-compare-container {
        position: relative;
        max-width: 100%;
        margin: 1rem auto;
        border-radius: 8px;
        overflow: hidden;
    }
    
    .image-compare-container img {
        width: 100%;
        display: block;
    }
    
    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 1;
        transition: opacity 0.3s ease;
    }
    
    .accuracy-chart-container {
        background-color: white;
        border-radius: 8px;
        padding: 1rem;
        margin-top: 2rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .classification-label {
        text-align: center;
        margin-top: 0.5rem;
        padding: 0.5rem;
        border-radius: 4px;
        font-weight: 600;
    }
    
    .covid-label {
        background-color: rgba(220, 38, 38, 0.1);
        color: #dc2626;
    }
    
    .opacity-label {
        background-color: rgba(245, 158, 11, 0.1);
        color: #d97706;
    }
    
    .normal-label {
        background-color: rgba(16, 185, 129, 0.1);
        color: #059669;
    }
    
    .pneumonia-label {
        background-color: rgba(59, 130, 246, 0.1);
        color: #3b82f6;
    }

    .image-controls {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-top: 1rem;
    }

    .slider-container {
        width: 100%;
        display: flex;
        align-items: center;
        margin-top: 0.5rem;
    }

    .slider-container label {
        margin-right: 1rem;
        width: 80px;
        text-align: right;
    }

    .slider-container input {
        flex-grow: 1;
    }

    .slider-value {
        width: 40px;
        margin-left: 1rem;
        text-align: center;
    }

    .class-probability-bars {
        margin-top: 1rem;
    }

    .class-probability-bar {
        margin-bottom: 0.5rem;
    }

    .progress-label {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.25rem;
    }

    .probability-bar {
        height: 10px;
        border-radius: 5px;
        background-color: #e2e8f0;
        overflow: hidden;
    }

    .probability-value {
        height: 100%;
        background-color: var(--primary-color);
        border-radius: 5px;
    }
    
    .condition-info h5 {
        margin-top: 1rem;
        color: var(--primary-color);
    }
    
    .finding-list li {
        margin-bottom: 0.5rem;
    }
    
    .treatment-box {
        background-color: #f8fafc;
        border-left: 4px solid var(--primary-color);
        padding: 1rem;
        margin-top: 1rem;
        border-radius: 0 4px 4px 0;
    }
    
    /* Fix for sliders */
    .form-range::-webkit-slider-thumb {
        appearance: none;
        width: 15px;
        height: 15px;
        background-color: var(--primary-color);
        border-radius: 50%;
        cursor: pointer;
    }
    
    .form-range::-moz-range-thumb {
        width: 15px;
        height: 15px;
        background-color: var(--primary-color);
        border-radius: 50%;
        cursor: pointer;
        border: none;
    }
    
    /* Make the meaning section wider */
    .meaning-section {
        margin-top: 2rem;
    }
</style>
{% endblock %}

{% block content %}
<section class="model-header py-5" style="background-color: rgba(35, 60, 234, 0.1);">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-12 text-center">
                <h1>Chest X-ray Analysis</h1>
                <p class="lead">Upload a chest X-ray to detect various lung conditions with high accuracy.</p>
            </div>
        </div>
    </div>
</section>

<!-- Section 1: Upload and X-ray Analysis -->
<section class="py-5 bg-light">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card mb-4 shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h3 class="mb-0"><i class="fas fa-upload me-2"></i>Image Upload</h3>
                    </div>
                    <div class="card-body">
                        <form id="chestUploadForm" enctype="multipart/form-data">
                            <div class="mb-3">
                                <label for="chestFile" class="form-label">Select X-ray Image</label>
                                <input class="form-control" type="file" id="chestFile" name="file" accept=".jpg,.jpeg,.png">
                                <div class="form-text">Supported formats: JPG, JPEG, PNG</div>
                            </div>
                            <button type="submit" class="btn btn-primary" id="analyzeChestBtn">
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                                Analyze X-ray
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Section 2: Results Analysis -->
<section class="py-5 bg-white">
    <div class="container">
        <div class="results-container mt-2 d-none" id="chestResults">
            <div class="row justify-content-center">
                <div class="col-lg-10">
                    <div class="card mb-4 shadow">
                        <div class="card-header bg-primary text-white">
                            <h3 class="mb-0"><i class="fas fa-chart-bar me-2"></i>Analysis Results</h3>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <!-- Control Panel moved to left side -->
                                    <div class="control-panel p-3 border rounded bg-white">
                                        <h5 class="mb-3">Image Controls</h5>
                                        <div class="mb-3">
                                            <label for="brightness" class="form-label mb-1">Brightness: <span id="brightnessValue">0</span></label>
                                            <input type="range" class="form-range" min="-100" max="100" value="0" id="brightness">
                                        </div>
                                        <div class="mb-3">
                                            <label for="contrast" class="form-label mb-1">Contrast: <span id="contrastValue">100</span>%</label>
                                            <input type="range" class="form-range" min="0" max="200" value="100" id="contrast">
                                        </div>
                                        
                                        <!-- Grad-CAM controls -->
                                        <hr>
                                        <h5 class="mb-3">Grad-CAM Controls</h5>
                                        <div class="form-check form-switch mb-3">
                                            <input class="form-check-input" type="checkbox" id="toggleGradCAM" checked>
                                            <label class="form-check-label ms-2" for="toggleGradCAM">Show Heatmap</label>
                                        </div>
                                        
                                        <div class="mb-3">
                                            <label for="opacitySlider" class="form-label mb-1">Opacity: <span id="opacityValue">100%</span></label>
                                            <input type="range" class="form-range" id="opacitySlider" min="0" max="100" value="100">
                                        </div>
                                        
                                        <div class="text-center mt-3">
                                            <button class="btn btn-sm btn-outline-primary" id="resetAdjustments">Reset Adjustments</button>
                                        </div>
                                        
                                        <!-- Classification Result Summary -->
                                        <div class="mt-4">
                                            <div id="chestClassification" class="classification-label p-2 mt-3">Classification: Unknown</div>
                                            <div id="chestConfidence" class="text-center mt-1">Confidence: 0%</div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="col-md-8">
                                    <div class="row">
                                        <div class="col-md-7">
                                            <!-- Image container moved to left side of this column -->
                                            <div class="image-compare-container">
                                                <!-- Original image -->
                                                <img id="original-xray" src="" alt="Original X-ray Image">
                                                
                                                <!-- Grad-CAM overlay (togglable) -->
                                                <div id="gradcam-overlay" class="image-overlay">
                                                    <img id="gradcam-xray" src="" alt="Grad-CAM Visualization">
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="col-md-5">
                                            <!-- Class probability bars moved to the right -->
                                            <div class="card h-100">
                                                <div class="card-body">
                                                    <h5 class="card-title">Classification Probabilities</h5>
                                                    <div class="class-probability-bars">
                                                        <div class="class-probability-bar">
                                                            <div class="progress-label">
                                                                <span>COVID-19</span>
                                                                <span id="covidProb">0%</span>
                                                            </div>
                                                            <div class="probability-bar">
                                                                <div class="probability-value covid-prob" style="width: 0%"></div>
                                                            </div>
                                                        </div>
                                                        <div class="class-probability-bar">
                                                            <div class="progress-label">
                                                                <span>Lung Opacity</span>
                                                                <span id="opacityProb">0%</span>
                                                            </div>
                                                            <div class="probability-bar">
                                                                <div class="probability-value opacity-prob" style="width: 0%"></div>
                                                            </div>
                                                        </div>
                                                        <div class="class-probability-bar">
                                                            <div class="progress-label">
                                                                <span>Normal</span>
                                                                <span id="normalProb">0%</span>
                                                            </div>
                                                            <div class="probability-bar">
                                                                <div class="probability-value normal-prob" style="width: 0%"></div>
                                                            </div>
                                                        </div>
                                                        <div class="class-probability-bar">
                                                            <div class="progress-label">
                                                                <span>Viral Pneumonia</span>
                                                                <span id="pneumoniaProb">0%</span>
                                                            </div>
                                                            <div class="probability-bar">
                                                                <div class="probability-value pneumonia-prob" style="width: 0%"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="alert alert-info mt-3 mb-0">
                                                        <small><strong>Note:</strong> Grad-CAM visualization highlights the regions that influenced the model's classification decision.</small>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
            </div>
            
            <!-- Diagnostic Information -->
            <div class="row justify-content-center mt-5">
                <div class="col-lg-10">
                    <div class="card mb-4 shadow">
                        <div class="card-header bg-primary text-white">
                            <h3 class="mb-0"><i class="fas fa-stethoscope me-2"></i>Diagnostic Information</h3>
                        </div>
                        <div class="card-body">
                            <div id="covidInfo" class="condition-info d-none">
                                <h5>COVID-19 <i class="fas fa-virus"></i></h5>
                                <p>The AI model predicts this X-ray shows patterns consistent with COVID-19 infection.</p>
                                
                                <h6>Common Radiological Findings:</h6>
                                <ul class="finding-list">
                                    <li><strong>Ground glass opacities</strong> - often bilateral and peripheral</li>
                                    <li><strong>Consolidation</strong> in later stages</li>
                                    <li><strong>Crazy paving pattern</strong> - thickened interlobular and intralobular lines</li>
                                    <li>Peripheral and lower zone predominance</li>
                                </ul>
                                
                                <div class="treatment-box">
                                    <h6>Typical Management:</h6>
                                    <p>Treatment typically involves supportive care, monitoring oxygen levels, and in severe cases, respiratory support. Specific treatments depend on disease severity and current guidelines.</p>
                                </div>
                            </div>
                            
                            <div id="opacityInfo" class="condition-info d-none">
                                <h5>Lung Opacity <i class="fas fa-lungs"></i></h5>
                                <p>The AI model detects lung opacities which represent an area of hazy lung density.</p>
                                
                                <h6>Possible Causes:</h6>
                                <ul class="finding-list">
                                    <li><strong>Pneumonia</strong> (bacterial, viral, or fungal)</li>
                                    <li><strong>Pulmonary edema</strong> (fluid in lungs)</li>
                                    <li><strong>Pulmonary hemorrhage</strong> (bleeding)</li>
                                    <li><strong>Atelectasis</strong> (collapsed or airless lung)</li>
                                    <li>Various other inflammatory or infectious conditions</li>
                                </ul>
                                
                                <div class="treatment-box">
                                    <h6>Next Steps:</h6>
                                    <p>Further evaluation is needed to determine the cause of opacity. This may include additional imaging, laboratory tests, or clinical assessment.</p>
                                </div>
                            </div>
                            
                            <div id="normalInfo" class="condition-info d-none">
                                <h5>Normal <i class="fas fa-check-circle"></i></h5>
                                <p>The AI model predicts this X-ray appears normal without significant abnormalities.</p>
                                
                                <h6>Characteristics of Normal Chest X-rays:</h6>
                                <ul class="finding-list">
                                    <li><strong>Clear lung fields</strong> without opacities or consolidations</li>
                                    <li><strong>Normal cardiac silhouette</strong> (width less than half the thorax)</li>
                                    <li><strong>Normal mediastinum</strong> and hilar structures</li>
                                    <li><strong>Clear costophrenic angles</strong> (no fluid)</li>
                                    <li>Normal bony thorax without deformities</li>
                                </ul>
                                
                                <div class="alert alert-success mt-3">
                                    <p class="mb-0">If the patient is showing symptoms despite a normal X-ray, further evaluation may be needed, as some conditions may not be visible on plain radiographs.</p>
                                </div>
                            </div>
                            
                            <div id="pneumoniaInfo" class="condition-info d-none">
                                <h5>Viral Pneumonia <i class="fas fa-biohazard"></i></h5>
                                <p>The AI model detects patterns consistent with viral pneumonia.</p>
                                
                                <h6>Typical Radiological Features:</h6>
                                <ul class="finding-list">
                                    <li><strong>Bilateral interstitial patterns</strong> - typically diffuse</li>
                                    <li><strong>Patchy or diffuse airspace opacities</strong></li>
                                    <li><strong>Ground-glass opacities</strong></li>
                                    <li>Generally lacks lobar consolidation (more common in bacterial pneumonia)</li>
                                    <li>May have small pleural effusions</li>
                                </ul>
                                
                                <div class="treatment-box">
                                    <h6>Typical Management:</h6>
                                    <p>Treatment usually focuses on supportive care including rest, hydration, and fever management. Antiviral medications may be considered in specific cases.</p>
                                </div>
                            </div>
                            
                            <div class="disclaimer mt-3">
                                <hr>
                                <p><small class="text-muted"><strong>Disclaimer:</strong> This AI tool is for educational purposes only and is not a substitute for professional medical diagnosis. Always consult with healthcare providers for medical decisions.</small></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Section 3: Educational Information -->
<section class="py-5 bg-light">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h3 class="mb-0"><i class="fas fa-book-medical me-2"></i>Educational Information</h3>
                    </div>
                    <div class="card-body">
                        <h4>About Chest X-ray Analysis</h4>
                        <p>Chest X-rays are one of the most common imaging tests in medicine, providing valuable information about the lungs, heart, and chest wall.</p>
                        
                        <h5 class="mt-4">How Our AI Works</h5>
                        <p>Our AI model has been trained on thousands of chest X-ray images to identify four different conditions:</p>
                        
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <h6><span class="badge bg-danger me-2">COVID-19</span></h6>
                                <p>Radiographic patterns consistent with COVID-19 infection, typically showing bilateral peripheral ground-glass opacities.</p>
                            </div>
                            <div class="col-md-6">
                                <h6><span class="badge bg-warning me-2">Lung Opacity</span></h6>
                                <p>Hazy areas in the lungs that could indicate various conditions such as pneumonia, edema, or hemorrhage.</p>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <h6><span class="badge bg-success me-2">Normal</span></h6>
                                <p>No significant abnormalities detected in the lung fields or other visible structures.</p>
                            </div>
                            <div class="col-md-6">
                                <h6><span class="badge bg-primary me-2">Viral Pneumonia</span></h6>
                                <p>Patterns consistent with pneumonia caused by viral infection, showing diffuse interstitial patterns.</p>
                            </div>
                        </div>
                        
                        <div class="row mt-4">
                            <div class="col-md-6">
                                <h5>What is Grad-CAM?</h5>
                                <p>Gradient-weighted Class Activation Mapping (Grad-CAM) is a technique that helps visualize which parts of an image are most important for the model's classification decision. The heatmap highlights regions that strongly influenced the model's output, providing insight into what the AI is "looking at" when making diagnoses.</p>
                            </div>
                            <div class="col-md-6">
                                <h5>Clinical Applications</h5>
                                <ul>
                                    <li>Screening for respiratory conditions</li>
                                    <li>Emergency department triage</li>
                                    <li>Monitoring disease progression</li>
                                    <li>Educational purposes for medical training</li>
                                    <li>Research on pulmonary diseases</li>
                                </ul>
                            </div>
                        </div>
                        
                        <div class="alert alert-info mt-4">
                            <p class="mb-0"><strong>Note:</strong> While our AI model provides valuable insights, it should be used as a supportive tool for qualified healthcare professionals rather than a standalone diagnostic system.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
{% endblock %}

{% block scripts %}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
$(document).ready(function() {
    // Initialize variables
    let gradcamOpacity = 1.0;
    let classificationData = {
        'COVID': 0,
        'Lung_Opacity': 0,
        'Normal': 0,
        'Viral Pneumonia': 0
    };
    
    // Handle brightness and contrast adjustments
    $('#brightness').on('input', function() {
        const brightnessValue = $(this).val();
        $('#brightnessValue').text(brightnessValue);
        updateImageAdjustments();
    });
    
    $('#contrast').on('input', function() {
        const contrastValue = $(this).val();
        $('#contrastValue').text(contrastValue);
        updateImageAdjustments();
    });
    
    $('#resetAdjustments').on('click', function() {
        $('#brightness').val(0);
        $('#contrast').val(100);
        $('#brightnessValue').text(0);
        $('#contrastValue').text(100);
        $('#opacitySlider').val(100);
        $('#opacityValue').text('100%');
        gradcamOpacity = 1.0;
        updateImageAdjustments();
        
        if ($('#toggleGradCAM').is(':checked')) {
            $('#gradcam-overlay').css('opacity', gradcamOpacity);
        }
    });
    
    function updateImageAdjustments() {
        const brightness = parseInt($('#brightness').val());
        const contrast = parseInt($('#contrast').val());
        
        // Apply filters to the original image using proper calculation
        $('#original-xray').css('filter', `brightness(${(brightness+100)/100}) contrast(${contrast/100})`);
        
        // Apply the same filters to the gradcam image to maintain consistency
        $('#gradcam-xray').css('filter', `brightness(${(brightness+100)/100}) contrast(${contrast/100})`);
    }
    
    // Toggle Grad-CAM visibility
    $('#toggleGradCAM').on('change', function() {
        if ($(this).is(':checked')) {
            $('#gradcam-overlay').css('opacity', gradcamOpacity);
        } else {
            $('#gradcam-overlay').css('opacity', 0);
        }
    });
    
    // Opacity slider
    $('#opacitySlider').on('input', function() {
        gradcamOpacity = $(this).val() / 100;
        $('#opacityValue').text($(this).val() + '%');
        
        if ($('#toggleGradCAM').is(':checked')) {
            $('#gradcam-overlay').css('opacity', gradcamOpacity);
        }
    });
    
    // Function to apply class styling to the classification label
    function setClassificationStyle(className) {
        // Remove all possible classes first
        $('#chestClassification').removeClass('covid-label opacity-label normal-label pneumonia-label');
        
        // Add appropriate class based on classification
        if (className === 'COVID') {
            $('#chestClassification').addClass('covid-label');
        } else if (className === 'Lung_Opacity') {
            $('#chestClassification').addClass('opacity-label');
        } else if (className === 'Normal') {
            $('#chestClassification').addClass('normal-label');
        } else if (className === 'Viral Pneumonia') {
            $('#chestClassification').addClass('pneumonia-label');
        }
    }
    
    // Update probability bars
    function updateProbabilityBars(classData) {
        // Set width and text for each class probability
        for (const [className, probability] of Object.entries(classData)) {
            const probPercent = (probability * 100).toFixed(1) + '%';
            let classSelector, probId;
            
            if (className === 'COVID') {
                classSelector = '.covid-prob';
                probId = '#covidProb';
            } else if (className === 'Lung_Opacity') {
                classSelector = '.opacity-prob';
                probId = '#opacityProb';
            } else if (className === 'Normal') {
                classSelector = '.normal-prob';
                probId = '#normalProb';
            } else if (className === 'Viral Pneumonia') {
                classSelector = '.pneumonia-prob';
                probId = '#pneumoniaProb';
            }
            
            $(classSelector).css('width', probPercent);
            $(probId).text(probPercent);
        }
    }

    // Form submission
    $('#chestUploadForm').on('submit', function(e) {
        e.preventDefault();
        
        const fileInput = $('#chestFile')[0];
        if (fileInput.files.length === 0) {
            alert('Please select a file to upload');
            return;
        }
        
        const formData = new FormData();
        formData.append('file', fileInput.files[0]);
        
        // Show loading spinner
        $('#analyzeChestBtn .spinner-border').removeClass('d-none');
        $('#analyzeChestBtn').prop('disabled', true);
        
        // Clear previous results
        $('#chestResults').addClass('d-none');
        $('.condition-info').addClass('d-none');
        
        $.ajax({
            url: '/predict/chest',
            type: 'POST',
            data: formData,
            contentType: false,
            processData: false,
            success: function(response) {
                if (response.status === 'success') {
                    // Display results
                    $('#chestResults').removeClass('d-none');
                    
                    // Reset image adjustments
                    $('#brightness').val(0);
                    $('#contrast').val(100);
                    $('#brightnessValue').text(0);
                    $('#contrastValue').text(100);
                    
                    // Set classification and confidence
                    const classText = response.class.replace('_', ' ');
                    $('#chestClassification').text(`Classification: ${classText}`);
                    $('#chestConfidence').text(`Confidence: ${response.confidence.toFixed(2)}%`);
                    
                    // Apply appropriate styling
                    setClassificationStyle(response.class);
                    
                    // Set original image
                    if (response.original_base64) {
                        $('#original-xray').attr('src', `data:image/png;base64,${response.original_base64}`);
                    } else {
                        $('#original-xray').attr('src', response.image_path);
                    }
                    
                    // Handle Grad-CAM with comprehensive error protection
                    handleGradCam(response);
                    
                    // Show appropriate info section
                    $('.condition-info').addClass('d-none');
                    if (response.class === 'COVID') {
                        $('#covidInfo').removeClass('d-none');
                    } else if (response.class === 'Lung_Opacity') {
                        $('#opacityInfo').removeClass('d-none');
                    } else if (response.class === 'Normal') {
                        $('#normalInfo').removeClass('d-none');
                    } else if (response.class === 'Viral Pneumonia') {
                        $('#pneumoniaInfo').removeClass('d-none');
                    }
                    
                    // Update probability bars with mock data for demonstration
                    // In a real app, these would come from the model
                    const classData = {
                        'COVID': 0.05,
                        'Lung_Opacity': 0.08,
                        'Normal': 0.02,
                        'Viral Pneumonia': 0.03
                    };
                    
                    // Set the detected class to high probability
                    classData[response.class] = response.confidence / 100;
                    
                    // Update probability bars
                    updateProbabilityBars(classData);
                    
                } else {
                    alert('Error: ' + response.message);
                }
            },
            error: function(xhr, status, error) {
                alert('Error processing image: ' + error);
            },
            complete: function() {
                // Hide loading spinner
                $('#analyzeChestBtn .spinner-border').addClass('d-none');
                $('#analyzeChestBtn').prop('disabled', false);
            }
        });
    });
    
    // Handle Grad-CAM with comprehensive error protection
    function handleGradCam(response) {
        // Remove any previous error messages
        $('.gradcam-error-message').remove();
        
        try {
            // Check if there's an explicit gradcam_error in the response
            if (response.gradcam_error) {
                throw new Error(response.gradcam_error);
            }
            
            // Check if gradcam_base64 exists and is not empty
            if (!response.gradcam_base64 || response.gradcam_base64.trim().length === 0) {
                throw new Error('Grad-CAM data missing');
            }
            
            // Verify it's a valid base64 string
            const validBase64 = /^[A-Za-z0-9+/=]+$/.test(response.gradcam_base64.trim());
            if (!validBase64) {
                throw new Error('Invalid Grad-CAM data');
            }
            
            // Set the Grad-CAM image
            $('#gradcam-xray').attr('src', `data:image/png;base64,${response.gradcam_base64}`);
            
            // Enable Grad-CAM controls
            $('#gradcam-overlay').css('opacity', gradcamOpacity);
            $('#toggleGradCAM').prop('checked', true).prop('disabled', false);
            $('#opacitySlider').prop('disabled', false);
            
            // Add load event handler to detect image loading issues
            $('#gradcam-xray').on('error', function() {
                // If image fails to load after setting src
                displayGradCAMError('Failed to render Grad-CAM visualization');
            });
            
        } catch (error) {
            // Handle all Grad-CAM errors
            console.error('Grad-CAM error:', error);
            displayGradCAMError();
        }
    }
    
    // Function to display Grad-CAM error message
    function displayGradCAMError(message = null) {
        // Disable Grad-CAM functionality
        $('#gradcam-overlay').css('opacity', 0);
        $('#gradcam-xray').attr('src', '');
        $('#toggleGradCAM').prop('checked', false).prop('disabled', true);
        $('#opacitySlider').prop('disabled', true);
        
        // Show user-friendly error message
        const errorDiv = $('<div class="alert alert-warning mt-3 gradcam-error-message" role="alert">' +
            '<i class="fas fa-exclamation-triangle me-2"></i>' +
            'Grad-CAM visualization is currently unavailable for this image. Analysis results are still valid.' +
            '</div>');
            
        // Add error message below the image
        $('.image-compare-container').after(errorDiv);
    }
});
</script>
{% endblock %}
</file>

<file path="templates/edit_user.html">
{% extends "layout.html" %}

{% block title %}MedXpert - Edit User{% endblock %}

{% block head %}
<style>
    /* Edit user page styling */
    .edit-user-container {
        position: relative;
        z-index: 5;
        margin: 100px auto 5rem;
        max-width: 900px;
        padding: 0 1.5rem;
        animation: fadeIn 0.8s ease-out;
    }
    
    .edit-card {
        border: none;
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        background-color: white;
        overflow: hidden;
    }
    
    .edit-card-header {
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
        padding: 1.5rem;
        color: white;
        font-weight: 600;
        font-size: 1.25rem;
        position: relative;
        overflow: hidden;
    }
    
    .edit-card-header:before {
        content: "";
        position: absolute;
        width: 200px;
        height: 200px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        top: -100px;
        right: -50px;
        pointer-events: none;
    }
    
    .edit-card-header i {
        margin-right: 10px;
    }
    
    .edit-card-body {
        padding: 2rem;
    }
    
    .edit-form-group {
        margin-bottom: 1.5rem;
    }
    
    .edit-form-label {
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--dark-gray);
    }
    
    .edit-form-control {
        border-radius: var(--radius);
        padding: 0.75rem 1rem;
        border: 1px solid rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        width: 100%;
    }
    
    .edit-form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(35, 60, 234, 0.15);
        background-color: white;
        transform: translateY(-2px);
    }
    
    .edit-btn {
        border-radius: var(--radius);
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
        z-index: 1;
    }
    
    .edit-btn:before {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 0;
        background: rgba(255, 255, 255, 0.2);
        transition: all 0.3s;
        border-radius: 50% 50% 0 0;
        z-index: -1;
    }
    
    .edit-btn:hover:before {
        height: 180%;
    }
    
    .edit-btn:after {
        content: "";
        position: absolute;
        width: 0;
        height: 0;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        transition: all 0.5s ease;
    }
    
    .edit-btn:active:after {
        width: 200px;
        height: 200px;
        opacity: 0;
    }
    
    .edit-btn-primary {
        background: linear-gradient(135deg, #1a2cb3, #233cea);
        color: white;
        border: none;
    }
    
    .edit-btn-primary:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 20px rgba(35, 60, 234, 0.3);
        color: white;
        background: linear-gradient(135deg, #1625a7, #1e36dc);
    }
    
    .edit-btn-secondary {
        background-color: #f8f9fa;
        color: #333;
        border: 1px solid #ddd;
    }
    
    .edit-btn-secondary:hover {
        background-color: #e9ecef;
        transform: translateY(-3px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        color: #212529;
    }
    
    .edit-alert {
        border-radius: var(--radius);
        padding: 1rem 1.5rem;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        background-color: rgba(220, 53, 69, 0.1);
        border-left: 4px solid #dc3545;
        color: #dc3545;
    }
    
    .edit-alert-icon {
        margin-right: 1rem;
        font-size: 1.25rem;
    }
    
    /* Animation keyframes */
    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }
</style>
{% endblock %}

{% block content %}
<div class="edit-user-container">
    <div class="edit-card">
        <div class="edit-card-header">
            <i class="fas fa-user-edit"></i> Edit User Profile
        </div>
        <div class="edit-card-body">
            {% if error %}
            <div class="edit-alert">
                <i class="edit-alert-icon fas fa-exclamation-circle"></i>
                <div>{{ error }}</div>
            </div>
            {% endif %}
            
            <form method="post" action="{{ url_for('edit_user', user_id=user.id) }}">
                <div class="row">
                    <div class="col-md-6">
                        <div class="edit-form-group">
                            <label for="username" class="edit-form-label">Username</label>
                            <input type="text" class="edit-form-control form-control" id="username" name="username" value="{{ user.username }}" required>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="edit-form-group">
                            <label for="email" class="edit-form-label">Email Address</label>
                            <input type="email" class="edit-form-control form-control" id="email" name="email" value="{{ user.email or '' }}">
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="edit-form-group">
                            <label for="full_name" class="edit-form-label">Full Name</label>
                            <input type="text" class="edit-form-control form-control" id="full_name" name="full_name" value="{{ user.full_name or '' }}">
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="edit-form-group">
                            <label for="phone" class="edit-form-label">Phone Number</label>
                            <input type="text" class="edit-form-control form-control" id="phone" name="phone" value="{{ user.phone or '' }}">
                        </div>
                    </div>
                </div>
                
                <div class="edit-form-group">
                    <label for="new_password" class="edit-form-label">New Password</label>
                    <input type="password" class="edit-form-control form-control" id="new_password" name="new_password" placeholder="Leave blank to keep current password">
                    <small class="text-muted">Minimum 8 characters recommended</small>
                </div>
                
                <div class="edit-form-group">
                    <label for="role" class="edit-form-label">User Role</label>
                    <select class="edit-form-control form-select" id="role" name="role">
                        <option value="user" {% if user.role == 'user' %}selected{% endif %}>Standard User</option>
                        <option value="admin" {% if user.role == 'admin' %}selected{% endif %}>Administrator</option>
                    </select>
                </div>
                
                <div class="d-flex justify-content-between mt-4">
                    <a href="{{ url_for('admin') }}" class="edit-btn edit-btn-secondary">
                        <i class="fas fa-arrow-left me-2"></i>Back to Admin
                    </a>
                    <button type="submit" class="edit-btn edit-btn-primary">
                        <i class="fas fa-save me-2"></i>Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %}
</file>

<file path="templates/education.html">
{% extends "layout.html" %}

{% block title %}MedXpert Information - Medical AI Model Guide{% endblock %}

{% block content %}
<!-- Hero Section -->
<section class="education-hero">
    <div class="hero-background">
        <div class="hero-particles"></div>
    </div>
    <div class="content-container">
        <div class="row justify-content-center">
            <div class="col-lg-10 text-center">
                <h1 class="hero-title">Medical AI Model Information</h1>
                <p class="hero-subtitle">Comprehensive guide to understanding our advanced medical imaging AI models</p>
                <div class="hero-stats">
                    <div class="stat-item">
                        <span class="stat-number">4</span>
                        <span class="stat-label">AI Models</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">95%+</span>
                        <span class="stat-label">Accuracy</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">10M+</span>
                        <span class="stat-label">Training Images</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Navigation Tabs -->
<section class="nav-tabs-section">
    <div class="content-container">
        <div class="model-nav-tabs">
            <button class="nav-tab active" data-model="brain">
                <i class="fas fa-brain"></i>
                <span>Brain Tumor Detection</span>
            </button>
            <button class="nav-tab" data-model="chest">
                <i class="fas fa-lungs"></i>
                <span>Chest X-ray Analysis</span>
            </button>
            <button class="nav-tab" data-model="skin">
                <i class="fas fa-diagnoses"></i>
                <span>Skin Cancer Detection</span>
            </button>
            <button class="nav-tab" data-model="fracture">
                <i class="fas fa-bone"></i>
                <span>Fracture Detection</span>
            </button>
        </div>
    </div>
</section>

<!-- Model Content Sections -->
<div class="model-content-container">
    <!-- Brain Tumor Detection -->
    <section class="model-section active" id="brain-section">
        <div class="content-container">
            <div class="model-header">
                <div class="model-icon">
                    <i class="fas fa-brain"></i>
                </div>
                <div class="model-info">
                    <h2>Brain Tumor Detection</h2>
                    <p class="model-description">Advanced segmentation model for detecting and analyzing brain tumors from MRI scans</p>
                    <div class="model-metrics">
                        <div class="metric">
                            <span class="metric-value">0.73</span>
                            <span class="metric-label">Dice Score</span>
                        </div>
                        <div class="metric">
                            <span class="metric-value">U-Net</span>
                            <span class="metric-label">Architecture</span>
                        </div>
                        <div class="metric">
                            <span class="metric-value">MRI</span>
                            <span class="metric-label">Modality</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="content-grid">
                <!-- Overview -->
                <div class="content-card">
                    <h3><i class="fas fa-info-circle"></i> Overview</h3>
                    <p>Our brain tumor detection model utilizes advanced U-Net architecture to perform precise segmentation of brain tumors from MRI scans. The model can identify various types of brain tumors including gliomas, meningiomas, and pituitary tumors.</p>
                    <div class="feature-list">
                        <div class="feature-item">
                            <i class="fas fa-check"></i>
                            <span>Multi-class tumor segmentation</span>
                        </div>
                        <div class="feature-item">
                            <i class="fas fa-check"></i>
                            <span>3D volume analysis</span>
                        </div>
                        <div class="feature-item">
                            <i class="fas fa-check"></i>
                            <span>Tumor size quantification</span>
                        </div>
                    </div>
                </div>

                <!-- Technical Details -->
                <div class="content-card">
                    <h3><i class="fas fa-cogs"></i> Technical Architecture</h3>
                    <div class="tech-details">
                        <div class="tech-item">
                            <strong>Model Type:</strong> U-Net with ResNet backbone
                        </div>
                        <div class="tech-item">
                            <strong>Input Size:</strong> 256x256x3 (RGB)
                        </div>
                        <div class="tech-item">
                            <strong>Output:</strong> Segmentation mask
                        </div>
                        <div class="tech-item">
                            <strong>Training Data:</strong> 2,500+ annotated MRI scans
                        </div>
                        <div class="tech-item">
                            <strong>Validation:</strong> 5-fold cross-validation
                        </div>
                    </div>
                </div>

                <!-- Use Cases -->
                <div class="content-card">
                    <h3><i class="fas fa-stethoscope"></i> Clinical Applications</h3>
                    <div class="use-cases">
                        <div class="use-case">
                            <h4>Diagnostic Support</h4>
                            <p>Assist radiologists in identifying and localizing brain tumors during initial screening</p>
                        </div>
                        <div class="use-case">
                            <h4>Treatment Planning</h4>
                            <p>Provide precise tumor measurements for surgical planning and radiation therapy</p>
                        </div>
                        <div class="use-case">
                            <h4>Monitoring</h4>
                            <p>Track tumor progression and treatment response over time</p>
                        </div>
                    </div>
                </div>

                <!-- Limitations -->
                <div class="content-card">
                    <h3><i class="fas fa-exclamation-triangle"></i> Limitations & Considerations</h3>
                    <ul class="limitations-list">
                        <li>Requires high-quality MRI scans with proper contrast</li>
                        <li>May struggle with very small tumors (< 5mm)</li>
                        <li>Performance varies with tumor type and location</li>
                        <li>Should be used as a decision support tool, not replacement for expert diagnosis</li>
                    </ul>
                </div>
            </div>
        </div>
    </section>

    <!-- Chest X-ray Analysis -->
    <section class="model-section" id="chest-section">
        <div class="content-container">
            <div class="model-header">
                <div class="model-icon">
                    <i class="fas fa-lungs"></i>
                </div>
                <div class="model-info">
                    <h2>Chest X-ray Analysis</h2>
                    <p class="model-description">Comprehensive analysis of chest X-rays for detecting pulmonary abnormalities and diseases</p>
                    <div class="model-metrics">
                        <div class="metric">
                            <span class="metric-value">95%</span>
                            <span class="metric-label">Accuracy</span>
                        </div>
                        <div class="metric">
                            <span class="metric-value">ResNet-50</span>
                            <span class="metric-label">Architecture</span>
                        </div>
                        <div class="metric">
                            <span class="metric-value">X-ray</span>
                            <span class="metric-label">Modality</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="content-grid">
                <!-- Overview -->
                <div class="content-card">
                    <h3><i class="fas fa-info-circle"></i> Overview</h3>
                    <p>Our chest X-ray analysis model uses deep learning to detect various pulmonary conditions including pneumonia, COVID-19, tuberculosis, and other respiratory diseases. The model provides both classification and localization of abnormalities.</p>
                    <div class="feature-list">
                        <div class="feature-item">
                            <i class="fas fa-check"></i>
                            <span>Multi-disease classification</span>
                        </div>
                        <div class="feature-item">
                            <i class="fas fa-check"></i>
                            <span>Abnormality localization</span>
                        </div>
                        <div class="feature-item">
                            <i class="fas fa-check"></i>
                            <span>Confidence scoring</span>
                        </div>
                    </div>
                </div>

                <!-- Technical Details -->
                <div class="content-card">
                    <h3><i class="fas fa-cogs"></i> Technical Architecture</h3>
                    <div class="tech-details">
                        <div class="tech-item">
                            <strong>Model Type:</strong> ResNet-50 with attention mechanism
                        </div>
                        <div class="tech-item">
                            <strong>Input Size:</strong> 224x224x1 (Grayscale)
                        </div>
                        <div class="tech-item">
                            <strong>Output:</strong> Multi-class probabilities + heatmap
                        </div>
                        <div class="tech-item">
                            <strong>Training Data:</strong> 50,000+ chest X-rays
                        </div>
                        <div class="tech-item">
                            <strong>Classes:</strong> Normal, Pneumonia, COVID-19, Tuberculosis
                        </div>
                    </div>
                </div>

                <!-- Use Cases -->
                <div class="content-card">
                    <h3><i class="fas fa-stethoscope"></i> Clinical Applications</h3>
                    <div class="use-cases">
                        <div class="use-case">
                            <h4>Emergency Screening</h4>
                            <p>Rapid screening for COVID-19 and pneumonia in emergency departments</p>
                        </div>
                        <div class="use-case">
                            <h4>Routine Check-ups</h4>
                            <p>Automated analysis of routine chest X-rays for early disease detection</p>
                        </div>
                        <div class="use-case">
                            <h4>Resource Optimization</h4>
                            <p>Prioritize cases requiring immediate attention in high-volume settings</p>
                        </div>
                    </div>
                </div>

                <!-- Limitations -->
                <div class="content-card">
                    <h3><i class="fas fa-exclamation-triangle"></i> Limitations & Considerations</h3>
                    <ul class="limitations-list">
                        <li>Requires proper X-ray positioning and exposure</li>
                        <li>May miss subtle findings in early disease stages</li>
                        <li>Performance affected by patient positioning and image quality</li>
                        <li>Should be validated with clinical correlation</li>
                    </ul>
                </div>
            </div>
        </div>
    </section>

    <!-- Skin Cancer Detection -->
    <section class="model-section" id="skin-section">
        <div class="content-container">
            <div class="model-header">
                <div class="model-icon">
                    <i class="fas fa-diagnoses"></i>
                </div>
                <div class="model-info">
                    <h2>Skin Cancer Detection</h2>
                    <p class="model-description">Advanced classification model for detecting malignant skin lesions from dermoscopic images</p>
                    <div class="model-metrics">
                        <div class="metric">
                            <span class="metric-value">93%</span>
                            <span class="metric-label">Accuracy</span>
                        </div>
                        <div class="metric">
                            <span class="metric-value">EfficientNet</span>
                            <span class="metric-label">Architecture</span>
                        </div>
                        <div class="metric">
                            <span class="metric-value">Dermoscopy</span>
                            <span class="metric-label">Modality</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="content-grid">
                <!-- Overview -->
                <div class="content-card">
                    <h3><i class="fas fa-info-circle"></i> Overview</h3>
                    <p>Our skin cancer detection model analyzes dermoscopic images to classify skin lesions as benign or malignant. The model can detect various types of skin cancer including melanoma, basal cell carcinoma, and squamous cell carcinoma.</p>
                    <div class="feature-list">
                        <div class="feature-item">
                            <i class="fas fa-check"></i>
                            <span>Binary classification (Benign/Malignant)</span>
                        </div>
                        <div class="feature-item">
                            <i class="fas fa-check"></i>
                            <span>Lesion boundary detection</span>
                        </div>
                        <div class="feature-item">
                            <i class="fas fa-check"></i>
                            <span>Risk stratification</span>
                        </div>
                    </div>
                </div>

                <!-- Technical Details -->
                <div class="content-card">
                    <h3><i class="fas fa-cogs"></i> Technical Architecture</h3>
                    <div class="tech-details">
                        <div class="tech-item">
                            <strong>Model Type:</strong> EfficientNet-B4 with custom head
                        </div>
                        <div class="tech-item">
                            <strong>Input Size:</strong> 380x380x3 (RGB)
                        </div>
                        <div class="tech-item">
                            <strong>Output:</strong> Binary classification + confidence
                        </div>
                        <div class="tech-item">
                            <strong>Training Data:</strong> 15,000+ dermoscopic images
                        </div>
                        <div class="tech-item">
                            <strong>Augmentation:</strong> Rotation, flip, color jittering
                        </div>
                    </div>
                </div>

                <!-- Use Cases -->
                <div class="content-card">
                    <h3><i class="fas fa-stethoscope"></i> Clinical Applications</h3>
                    <div class="use-cases">
                        <div class="use-case">
                            <h4>Primary Care Screening</h4>
                            <p>Enable general practitioners to screen suspicious skin lesions</p>
                        </div>
                        <div class="use-case">
                            <h4>Dermatology Triage</h4>
                            <p>Prioritize high-risk cases for immediate dermatologist review</p>
                        </div>
                        <div class="use-case">
                            <h4>Telemedicine</h4>
                            <p>Support remote skin cancer screening in underserved areas</p>
                        </div>
                    </div>
                </div>

                <!-- Limitations -->
                <div class="content-card">
                    <h3><i class="fas fa-exclamation-triangle"></i> Limitations & Considerations</h3>
                    <ul class="limitations-list">
                        <li>Requires high-quality dermoscopic images</li>
                        <li>May struggle with atypical presentations</li>
                        <li>Performance varies with skin type and lesion location</li>
                        <li>Should be followed by biopsy for definitive diagnosis</li>
                    </ul>
                </div>
            </div>
        </div>
    </section>

    <!-- Fracture Detection -->
    <section class="model-section" id="fracture-section">
        <div class="content-container">
            <div class="model-header">
                <div class="model-icon">
                    <i class="fas fa-bone"></i>
                </div>
                <div class="model-info">
                    <h2>Fracture Detection</h2>
                    <p class="model-description">Object detection model for identifying and localizing bone fractures in X-ray images</p>
                    <div class="model-metrics">
                        <div class="metric">
                            <span class="metric-value">0.94</span>
                            <span class="metric-label">mAP50</span>
                        </div>
                        <div class="metric">
                            <span class="metric-value">YOLO v8</span>
                            <span class="metric-label">Architecture</span>
                        </div>
                        <div class="metric">
                            <span class="metric-value">X-ray</span>
                            <span class="metric-label">Modality</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="content-grid">
                <!-- Overview -->
                <div class="content-card">
                    <h3><i class="fas fa-info-circle"></i> Overview</h3>
                    <p>Our fracture detection model uses YOLO (You Only Look Once) architecture to detect and localize bone fractures in X-ray images. The model can identify various types of fractures including stress fractures, complete fractures, and hairline fractures.</p>
                    <div class="feature-list">
                        <div class="feature-item">
                            <i class="fas fa-check"></i>
                            <span>Real-time fracture detection</span>
                        </div>
                        <div class="feature-item">
                            <i class="fas fa-check"></i>
                            <span>Multiple fracture types</span>
                        </div>
                        <div class="feature-item">
                            <i class="fas fa-check"></i>
                            <span>Bounding box localization</span>
                        </div>
                    </div>
                </div>

                <!-- Technical Details -->
                <div class="content-card">
                    <h3><i class="fas fa-cogs"></i> Technical Architecture</h3>
                    <div class="tech-details">
                        <div class="tech-item">
                            <strong>Model Type:</strong> YOLO v8 with CSP backbone
                        </div>
                        <div class="tech-item">
                            <strong>Input Size:</strong> 640x640x1 (Grayscale)
                        </div>
                        <div class="tech-item">
                            <strong>Output:</strong> Bounding boxes + confidence scores
                        </div>
                        <div class="tech-item">
                            <strong>Training Data:</strong> 8,000+ annotated X-rays
                        </div>
                        <div class="tech-item">
                            <strong>Inference Speed:</strong> ~30ms per image
                        </div>
                    </div>
                </div>

                <!-- Use Cases -->
                <div class="content-card">
                    <h3><i class="fas fa-stethoscope"></i> Clinical Applications</h3>
                    <div class="use-cases">
                        <div class="use-case">
                            <h4>Emergency Radiology</h4>
                            <p>Rapid fracture detection in emergency departments</p>
                        </div>
                        <div class="use-case">
                            <h4>Sports Medicine</h4>
                            <p>Quick assessment of sports-related injuries</p>
                        </div>
                        <div class="use-case">
                            <h4>Orthopedic Screening</h4>
                            <p>Automated screening for fracture patterns</p>
                        </div>
                    </div>
                </div>

                <!-- Limitations -->
                <div class="content-card">
                    <h3><i class="fas fa-exclamation-triangle"></i> Limitations & Considerations</h3>
                    <ul class="limitations-list">
                        <li>May miss subtle or hairline fractures</li>
                        <li>Performance affected by image quality and positioning</li>
                        <li>Requires proper X-ray technique and exposure</li>
                        <li>Should be correlated with clinical findings</li>
                    </ul>
                </div>
            </div>
        </div>
    </section>
</div>

<!-- Try Models Section -->
<section class="try-models-section">
    <div class="content-container">
        <div class="text-center">
            <h2>Ready to Experience Our Models?</h2>
            <p>Test our AI models with your own medical images and see the results in action</p>
            <div class="model-buttons">
                <a href="{{ url_for('brain') }}" class="model-btn">
                    <i class="fas fa-brain"></i>
                    <span>Try Brain Tumor Detection</span>
                </a>
                <a href="{{ url_for('chest') }}" class="model-btn">
                    <i class="fas fa-lungs"></i>
                    <span>Try Chest X-ray Analysis</span>
                </a>
                <a href="{{ url_for('skin') }}" class="model-btn">
                    <i class="fas fa-diagnoses"></i>
                    <span>Try Skin Cancer Detection</span>
                </a>
                <a href="{{ url_for('fracture') }}" class="model-btn">
                    <i class="fas fa-bone"></i>
                    <span>Try Fracture Detection</span>
                </a>
            </div>
        </div>
    </div>
</section>
{% endblock %}

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Tab navigation functionality
    const tabs = document.querySelectorAll('.nav-tab');
    const sections = document.querySelectorAll('.model-section');
    
    tabs.forEach(tab => {
        tab.addEventListener('click', function() {
            const targetModel = this.getAttribute('data-model');
            
            // Remove active class from all tabs and sections
            tabs.forEach(t => t.classList.remove('active'));
            sections.forEach(s => s.classList.remove('active'));
            
            // Add active class to clicked tab and corresponding section
            this.classList.add('active');
            document.getElementById(targetModel + '-section').classList.add('active');
            
            // Smooth scroll to section
            document.getElementById(targetModel + '-section').scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
        });
    });
    
    // Add scroll animations
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver(function(entries) {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate-in');
            }
        });
    }, observerOptions);
    
    // Observe all content cards
    document.querySelectorAll('.content-card').forEach(card => {
        observer.observe(card);
    });
});
</script>

<style>
/* Hero Section */
.education-hero {
    background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
    color: white;
    padding: 6rem 0 4rem;
    position: relative;
    overflow: hidden;
}

.hero-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
}

.hero-particles {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
        radial-gradient(circle at 20% 20%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 80% 80%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
    animation: float 20s infinite alternate ease-in-out;
}

@keyframes float {
    0% { transform: translate(0, 0); }
    50% { transform: translate(-20px, 20px); }
    100% { transform: translate(20px, -20px); }
}

.education-hero .content-container {
    position: relative;
    z-index: 2;
}

.hero-title {
    font-size: 3.5rem;
    font-weight: 700;
    margin-bottom: 1.5rem;
    background: linear-gradient(135deg, #ffffff, #e8ecff);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
}

.hero-subtitle {
    font-size: 1.3rem;
    margin-bottom: 3rem;
    opacity: 0.9;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
}

.hero-stats {
    display: flex;
    justify-content: center;
    gap: 3rem;
    margin-top: 2rem;
}

.stat-item {
    text-align: center;
}

.stat-number {
    display: block;
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
}

.stat-label {
    font-size: 0.9rem;
    opacity: 0.8;
    text-transform: uppercase;
    letter-spacing: 1px;
}

/* Navigation Tabs */
.nav-tabs-section {
    background: white;
    padding: 2rem 0;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
    position: sticky;
    top: 0;
    z-index: 100;
}

.model-nav-tabs {
    display: flex;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
}

.nav-tab {
    display: flex;
    align-items: center;
    gap: 0.8rem;
    padding: 1rem 1.5rem;
    background: #f8f9ff;
    border: 2px solid transparent;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-weight: 600;
    color: #666;
}

.nav-tab:hover {
    background: #e8ecff;
    color: #233cea;
    transform: translateY(-2px);
}

.nav-tab.active {
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    color: white;
    border-color: #233cea;
    box-shadow: 0 8px 25px rgba(35, 60, 234, 0.3);
}

.nav-tab i {
    font-size: 1.2rem;
}

/* Model Sections */
.model-content-container {
    background: #f8f9ff;
    min-height: 100vh;
}

.model-section {
    display: none;
    padding: 4rem 0;
}

.model-section.active {
    display: block;
}

.model-header {
    display: flex;
    align-items: center;
    gap: 2rem;
    margin-bottom: 3rem;
    background: white;
    padding: 2rem;
    border-radius: 16px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

.model-icon {
    width: 80px;
    height: 80px;
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    color: white;
    flex-shrink: 0;
}

.model-info h2 {
    font-size: 2.5rem;
    font-weight: 700;
    color: #1a2cb3;
    margin-bottom: 1rem;
}

.model-description {
    font-size: 1.1rem;
    color: #666;
    margin-bottom: 1.5rem;
    line-height: 1.6;
}

.model-metrics {
    display: flex;
    gap: 2rem;
}

.metric {
    text-align: center;
}

.metric-value {
    display: block;
    font-size: 1.5rem;
    font-weight: 700;
    color: #233cea;
}

.metric-label {
    font-size: 0.85rem;
    color: #666;
    text-transform: uppercase;
    letter-spacing: 1px;
}

/* Content Grid */
.content-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
}

.content-card {
    background: white;
    padding: 2rem;
    border-radius: 16px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    opacity: 0;
    transform: translateY(30px);
}

.content-card.animate-in {
    opacity: 1;
    transform: translateY(0);
    transition: opacity 0.6s ease, transform 0.6s ease;
}

.content-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 40px rgba(35, 60, 234, 0.15);
}

.content-card h3 {
    font-size: 1.4rem;
    font-weight: 700;
    color: #1a2cb3;
    margin-bottom: 1.5rem;
    display: flex;
    align-items: center;
    gap: 0.8rem;
}

.content-card h3 i {
    color: #233cea;
}

.content-card p {
    color: #555;
    line-height: 1.6;
    margin-bottom: 1.5rem;
}

/* Feature Lists */
.feature-list {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
}

.feature-item {
    display: flex;
    align-items: center;
    gap: 0.8rem;
    color: #555;
}

.feature-item i {
    color: #28a745;
    font-size: 1.1rem;
}

/* Technical Details */
.tech-details {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.tech-item {
    padding: 1rem;
    background: #f8f9ff;
    border-radius: 8px;
    border-left: 4px solid #233cea;
}

.tech-item strong {
    color: #1a2cb3;
}

/* Use Cases */
.use-cases {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.use-case h4 {
    color: #1a2cb3;
    font-weight: 600;
    margin-bottom: 0.5rem;
}

.use-case p {
    color: #666;
    margin: 0;
}

/* Limitations */
.limitations-list {
    list-style: none;
    padding: 0;
}

.limitations-list li {
    padding: 0.8rem 0;
    border-bottom: 1px solid #eee;
    color: #666;
    position: relative;
    padding-left: 1.5rem;
}

.limitations-list li:before {
    content: '⚠️';
    position: absolute;
    left: 0;
    top: 0.8rem;
}

.limitations-list li:last-child {
    border-bottom: none;
}

/* Try Models Section */
.try-models-section {
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    color: white;
    padding: 4rem 0;
    text-align: center;
}

.try-models-section h2 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
}

.try-models-section p {
    font-size: 1.2rem;
    margin-bottom: 3rem;
    opacity: 0.9;
}

.model-buttons {
    display: flex;
    justify-content: center;
    gap: 1.5rem;
    flex-wrap: wrap;
}

.model-btn {
    display: flex;
    align-items: center;
    gap: 0.8rem;
    padding: 1rem 2rem;
    background: white;
    color: #233cea;
    text-decoration: none;
    border-radius: 12px;
    font-weight: 600;
    transition: all 0.3s ease;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
}

.model-btn:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
    color: #233cea;
}

.model-btn i {
    font-size: 1.2rem;
}

/* Responsive Design */
@media (max-width: 768px) {
    .hero-title {
        font-size: 2.5rem;
    }
    
    .hero-stats {
        flex-direction: column;
        gap: 1.5rem;
    }
    
    .model-nav-tabs {
        flex-direction: column;
        align-items: center;
    }
    
    .nav-tab {
        width: 100%;
        max-width: 300px;
        justify-content: center;
    }
    
    .model-header {
        flex-direction: column;
        text-align: center;
    }
    
    .model-metrics {
        justify-content: center;
    }
    
    .content-grid {
        grid-template-columns: 1fr;
    }
    
    .model-buttons {
        flex-direction: column;
        align-items: center;
    }
    
    .model-btn {
        width: 100%;
        max-width: 300px;
        justify-content: center;
    }
}

@media (max-width: 480px) {
    .education-hero {
        padding: 4rem 0 2rem;
    }
    
    .hero-title {
        font-size: 2rem;
    }
    
    .hero-subtitle {
        font-size: 1.1rem;
    }
    
    .model-info h2 {
        font-size: 2rem;
    }
    
    .content-card {
        padding: 1.5rem;
    }
}
</style>
{% endblock %}
</file>

<file path="templates/error.html">
<!DOCTYPE html>
    <html>
    <head>
        <title>Error</title>
        <style>
            body { font-family: Arial, sans-serif; margin: 40px; }
            .error-container { text-align: center; }
            .error-message { color: #721c24; background-color: #f8d7da; padding: 20px; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="error-container">
            <h1>Error</h1>
            <div class="error-message">
                {{ error }}
            </div>
            <p><a href="{{ url_for('home') }}">Return to Home</a></p>
        </div>
    </body>
    </html>
</file>

<file path="templates/fracture_example.html">
{% extends "layout.html" %}

{% block title %}Fracture Detection Example - MedXpert{% endblock %}

{% block content %}
<style>
.example-hero {
    background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
    color: white;
    padding: 120px 0 100px;
    margin-top: 0;
    text-align: center;
}

.example-hero h1 {
    font-size: 3.5rem;
    font-weight: 800;
    margin-bottom: 1.5rem;
}

.example-hero p {
    font-size: 1.4rem;
    opacity: 0.9;
    max-width: 800px;
    margin: 0 auto;
    line-height: 1.6;
}

.example-section {
    padding: 100px 0;
    background: #f8f9fa;
}

.model-stats {
    display: flex;
    gap: 30px;
    flex-wrap: wrap;
    justify-content: center;
    margin-bottom: 50px;
}

.stat-item {
    background: rgba(26, 44, 179, 0.1);
    padding: 20px 30px;
    border-radius: 15px;
    text-align: center;
}

.stat-label {
    font-size: 1.1rem;
    color: #1a2cb3;
    margin-bottom: 8px;
}

.stat-value {
    font-size: 1.4rem;
    font-weight: 700;
    color: #1a2cb3;
}

.example-showcase {
    background: white;
    border-radius: 20px;
    padding: 40px;
    box-shadow: 0 20px 60px rgba(26, 44, 179, 0.08);
}

.example-title {
    text-align: center;
    font-size: 1.5rem;
    font-weight: 600;
    color: #1a2cb3;
    margin-bottom: 30px;
}

.before-after-container {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    gap: 40px;
    max-width: 1200px;
    margin: 0 auto;
    align-items: center;
}

.image-container {
    text-align: center;
    background: white;
    padding: 35px;
    border-radius: 20px;
    box-shadow: 0 15px 45px rgba(0,0,0,0.08);
    transition: all 0.3s ease;
}

.image-container:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 60px rgba(0,0,0,0.12);
}

.image-label {
    font-weight: 700;
    color: #1a2cb3;
    margin-bottom: 20px;
    font-size: 1.3rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.arrow-icon {
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    color: white;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
}

.try-model-btn {
    display: block;
    width: fit-content;
    margin: 50px auto 0;
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    color: white;
    padding: 15px 40px;
    border-radius: 30px;
    text-decoration: none;
    font-weight: 600;
    font-size: 1.2rem;
    transition: all 0.3s ease;
    box-shadow: 0 10px 30px rgba(26, 44, 179, 0.2);
}

.try-model-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 15px 40px rgba(26, 44, 179, 0.3);
    color: white;
    text-decoration: none;
}

@media (max-width: 768px) {
    .before-after-container {
        grid-template-columns: 1fr;
        gap: 30px;
    }
    
    .arrow-icon {
        transform: rotate(90deg);
        margin: 0 auto;
    }
    
    .image-container {
        padding: 25px;
    }
}
</style>

<!-- Hero Section -->
<section class="example-hero">
    <div class="container">
        <h1>Fracture Detection</h1>
        <p>X-ray analysis for bone fracture identification using advanced AI technology</p>
    </div>
</section>

<!-- Example Section -->
<section class="example-section">
    <div class="container">
        <!-- Model Stats -->
        <div class="model-stats">
            <div class="stat-item">
                <div class="stat-label">mAP50</div>
                <div class="stat-value">0.94</div>
            </div>
            <div class="stat-item">
                <div class="stat-label">Architecture</div>
                <div class="stat-value">YOLO</div>
            </div>
            <div class="stat-item">
                <div class="stat-label">Detection</div>
                <div class="stat-value">Object</div>
            </div>
        </div>

        <!-- Example Showcase -->
        <div class="example-showcase">
            <h4 class="example-title">Wrist Fracture Detection</h4>
            <div class="before-after-container">
                <div class="image-container">
                    <div class="image-label">X-ray Image</div>
                    <img src="{{ url_for('static', filename='images/bone.jpg') }}" alt="Wrist X-ray Original" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                    <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">Wrist radiograph following trauma</div>
                </div>
                
                <div class="arrow-icon">
                    <i class="fas fa-arrow-right"></i>
                </div>
                
                <div class="image-container">
                    <div class="image-label">Fracture Detected</div>
                    <img src="{{ url_for('static', filename='images/result_bone.jpg') }}" alt="Wrist X-ray with Fracture Detection" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                    <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">AI detected distal radius fracture with precise localization</div>
                </div>
            </div>
        </div>

        <!-- Try Model Button -->
        <a href="{{ url_for('fracture') }}" class="try-model-btn">
            <i class="fas fa-play"></i>
            Try This Model
        </a>
    </div>
</section>
{% endblock %}
</file>

<file path="templates/fracture.html">
{% extends "layout.html" %}

{% block title %}MedXpert - Fracture Detection{% endblock %}

{% block head %}
<style>
    .fracture-header {
        background-color: rgba(35, 60, 234, 0.1);
        border-radius: var(--border-radius);
    }
    
    .model-icon {
        max-height: 180px;
    }
    
    .upload-container {
        background-color: white;
    }
    
    .image-comparison {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }
    
    @media (min-width: 768px) {
        .image-comparison {
            flex-direction: row;
        }
    }
    
    .image-container {
        position: relative;
        height: 400px; /* Fixed height for consistency */
        margin-bottom: 20px;
        text-align: center; /* Center the image horizontally */
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }
    
    /* Professional zoom styles */
    .zoom-container {
        position: relative;
        overflow: hidden; /* Hide overflow when zooming */
        border-radius: 12px;
        cursor: crosshair;
    }
    
    .zoom-result {
        position: absolute;
        border: 2px solid #233cea;
        background-color: white;
        border-radius: 100%;
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        height: 150px;
        width: 150px;
        top: 0;
        left: 0;
        z-index: 100;
        transform: translate(-50%, -50%);
        pointer-events: none;
        opacity: 0;
        transition: opacity 0.2s ease;
        background-repeat: no-repeat;
    }
    
    .zoom-lens {
        position: absolute;
        border: 2px solid #233cea;
        width: 80px;
        height: 80px;
        border-radius: 50%;
        pointer-events: none;
        transform: translate(-50%, -50%);
        display: none;
    }
    
    /* Zoom tools */
    .zoom-tools {
        margin-top: 1rem;
        display: flex;
        justify-content: center;
        gap: 0.5rem;
    }
    
    .zoom-level-indicator {
        padding: 0.25rem 0.5rem;
        background-color: rgba(35, 60, 234, 0.1);
        border-radius: 4px;
        color: #233cea;
        font-weight: 600;
        margin-left: 1rem;
    }
    
    .image-container img {
        max-width: 80%; /* Limit maximum width to prevent very wide images */
        max-height: 90%; /* Allow most of the container height */
        min-height: 300px; /* Minimum height to ensure small images appear larger */
        min-width: 300px; /* Minimum width to ensure small images appear larger */
        object-fit: contain; /* This will maintain aspect ratio while fitting in container */
        display: inline-block; /* Allow image to be centered */
        border-radius: 12px !important; /* Apply rounded corners to the image itself */
    }
    
    .zoomed {
        cursor: zoom-out;
        overflow: auto;
    }
    
    .zoomed img {
        transform: scale(2);
        max-width: none;
        max-height: none;
    }
    
    /* Ensure the image has rounded corners */
    #detectionImage {
        border-radius: 12px !important;
    }
    
    .image-label {
        position: absolute;
        top: 10px;
        left: 10px;
        background-color: rgba(0, 0, 0, 0.6);
        color: white;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 14px;
    }
    
    .detection-details {
    background-color: white;
    border-radius: 8px;
    padding: 1.5rem;
    height: 100%;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);

    width: 100%; /* أو مثلاً 90% لو مش عايزه full */
    max-width: 900px; /* اختياري: تحديد أقصى عرض */
    margin: 0 auto; /* دي اللي بتخليه ف النص */
}

    
    .detection-box {
        border-left: 4px solid #f6f266;
        padding: 0.75rem 1rem;
        background-color: rgba(246, 242, 102, 0.05);
        margin-bottom: 1rem;
        border-radius: 0 8px 8px 0;
    }
    
    .detection-box h5 {
        margin-bottom: 0.5rem;
        color: #c4bf3d;
    }
    
    .accuracy-chart-container {
        background-color: white;
        border-radius: 8px;
        padding: 1rem;
        margin-top: 2rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }
    
    /* Removed fracture-types and fracture-type-card styles */
    
    .model-info-section {
        background-color: #f8f9fa;
        padding: 2rem 0;
        border-radius: 8px;
        margin-top: 3rem;
    }
    
    .info-card {
        height: 100%;
        transition: transform 0.3s;
        border-left: 4px solid var(--primary-color);
    }
    
    .info-card:hover {
        transform: translateY(-5px);
    }
    
    .info-icon {
        font-size: 2.5rem;
        color: var(--primary-color);
        margin-bottom: 1rem;
    }
    
    .accuracy-chart {
        height: 250px;
    }
    
    .accuracy-metric {
        text-align: center;
        padding: 1rem;
        border-radius: 8px;
        background-color: white;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        margin-bottom: 1rem;
        transition: transform 0.2s;
    }
    
    .accuracy-metric:hover {
        transform: translateY(-3px);
    }
    
    .accuracy-value {
        font-size: 2rem;
        font-weight: 600;
        color: var(--primary-color);
        margin-bottom: 0;
    }
    
    .model-limitations {
        background-color: rgba(255, 243, 205, 0.5);
        border-left: 4px solid #ffc107;
        padding: 1.5rem;
        border-radius: 0 8px 8px 0;
        margin-top: 2rem;
    }
    
    /* Enhanced form-range styling to make sliders more visible */
    .form-range {
        height: 8px;
        background-color: #eaeaea;
        border-radius: 8px;
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
        -webkit-appearance: none;
        appearance: none;
    }
    
    .form-range::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        width: 18px;
        height: 18px;
        border-radius: 50%;
        background: var(--primary-color);
        cursor: pointer;
        border: 2px solid white;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    }
    
    .form-range::-moz-range-thumb {
        width: 18px;
        height: 18px;
        border-radius: 50%;
        background: var(--primary-color);
        cursor: pointer;
        border: 2px solid white;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    }
    
    .control-panel {
        background-color: #ffffff;
        padding: 16px;
        border-radius: 8px;
        border: 1px solid #e0e0e0;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    }
    
    .slider-container {
        margin-bottom: 16px;
    }

    .detection-table {
        margin-top: 1.5rem;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        width: 100%;
    }
    
    .detection-table table {
        width: 100%;
        margin-bottom: 0;
        table-layout: fixed;
    }
    
    .detection-table th {
        background-color: var(--primary-color);
        color: white;
        font-weight: 500;
        border: none;
        text-align: center;
    }
    
    .detection-table td {
        padding: 0.75rem 1rem;
        vertical-align: middle;
        text-align: center;
    }
    
    .detection-table th {
        padding: 1rem;
        vertical-align: middle;
    }
    
    .detection-table th:first-child {
        width: 10%;
    }
    
    .detection-table th:nth-child(2) {
        width: 20%;
    }
    
    .detection-table th:nth-child(3) {
        width: 20%;
    }
    
    .detection-table th:nth-child(4) {
        width: 50%;
    }
    
    .confidence-badge {
        background-color: rgba(35, 60, 234, 0.2); /* Changed to new blue color */
        color: #233cea; /* Changed to new blue color */
        font-weight: 500;
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        display: inline-block;
    }
</style>
{% endblock %}

{% block content %}
<section class="model-header py-5" style="background-color: rgba(35, 60, 234, 0.1);">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-12 text-center">
                <h1>Fracture Detection</h1>
                <p class="lead">Upload an X-ray image to detect and locate bone fractures with high precision.</p>
            </div>
        </div>
    </div>
</section>

<!-- Section 1: Upload and Analysis -->
<section class="py-5 bg-light">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card mb-4 shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h3 class="mb-0"><i class="fas fa-upload me-2"></i>Upload X-ray Image</h3>
                    </div>
                    <div class="card-body">
                        <form id="fractureUploadForm" enctype="multipart/form-data">
                            <div class="mb-3">
                                <label for="fractureFile" class="form-label">Select an X-ray image</label>
                                <input class="form-control" type="file" id="fractureFile" name="file" accept=".jpg,.jpeg,.png">
                                <div class="form-text">Supported formats: JPG, JPEG, PNG</div>
                            </div>
                            <button type="submit" class="btn btn-primary" id="analyzeFractureBtn">
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                                Analyze Image
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Section 2: Results Analysis -->
<section class="py-5 bg-white">
    <div class="container">
        <div id="fractureResults" class="results-container mt-2 d-none">
            <div class="row justify-content-center">
                <div class="col-lg-10">
                    <div class="card mb-4 shadow">
                        <div class="card-header bg-primary text-white">
                            <h3 class="mb-0"><i class="fas fa-chart-bar me-2"></i>Analysis Results</h3>
                        </div>
                        <div class="card-body">
                            <!-- Removed the alert message -->
                            
                            <div class="row">
                                <div class="col-lg-3 col-md-4">
                                    <!-- Control Panel on left side -->
                                    <div class="control-panel">
                                        <h5 class="mb-3">Image Controls</h5>
                                        <div class="slider-container">
                                            <label for="brightness" class="form-label">Brightness: <span id="brightnessValue">0</span></label>
                                            <input type="range" class="form-range" min="-100" max="100" value="0" id="brightness">
                                        </div>
                                        <div class="slider-container">
                                            <label for="contrast" class="form-label">Contrast: <span id="contrastValue">100</span>%</label>
                                            <input type="range" class="form-range" min="0" max="200" value="100" id="contrast">
                                        </div>
                                        
                                        <div class="form-check form-switch mt-3">
                                            <input class="form-check-input" type="checkbox" id="toggleDetection" checked>
                                            <label class="form-check-label" for="toggleDetection">Show Fracture Detection</label>
                                        </div>
                                        
                                        <div class="text-center mt-3">
                                            <button class="btn btn-sm btn-outline-primary" id="resetAdjustments">Reset Adjustments</button>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="col-lg-9 col-md-8">
                                    <!-- Full width image container with professional zoom feature -->
                                    <div class="image-container zoom-container" style="margin-top: 0; padding-top: 0;">
                                        <img id="detectionImage" alt="X-ray Analysis" class="img-fluid">
                                        <div class="zoom-lens" id="zoomLens"></div>
                                        <div class="zoom-result" id="zoomResult"></div>
                                    </div>
                                    
                                    <!-- Zoom controls -->
                                    <div class="zoom-tools">
                                        <button class="btn btn-sm btn-outline-primary" id="toggleZoom">
                                            <i class="fas fa-search-plus me-1"></i> Toggle Magnifier
                                        </button>
                                        <button class="btn btn-sm btn-outline-primary" id="zoomIn">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-primary" id="zoomOut">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <span class="zoom-level-indicator" id="zoomLevel">2x</span>
                                    </div>
                                    
                                    <!-- No detection message -->
                                    <div id="noDetectionMessage" class="alert alert-success text-center mt-3 d-none">
                                        <i class="fas fa-check-circle me-2"></i> No fractures detected in this image.
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Detection details table moved outside the column layout to take full width -->
                            <div id="detectionDetails" class="detection-table mt-4 d-none" style="width: 100%; margin: 0 auto;">
                                <h4 class="p-3 mb-0">Detection Details</h4>
                                <div class="table-responsive">
                                    <table class="table table-hover">
                                        <thead>
                                            <tr>
                                                <th>#</th>
                                                <th>Type</th>
                                                <th>Confidence</th>
                                                <th>Location</th>
                                            </tr>
                                        </thead>
                                        <tbody id="detectionTableBody">
                                            <!-- Detection rows will be inserted here -->
                                        </tbody>
                                    </table>
                                </div>
                                <div class="alert alert-info m-3" role="alert">
                                    <small><i class="fas fa-info-circle me-2"></i> Our model highlights potential fracture locations with bounding boxes.</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Section 3: Educational Information -->
<section class="py-5 bg-light">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h3 class="mb-0"><i class="fas fa-book-medical me-2"></i>Educational Information</h3>
                    </div>
                    <div class="card-body">
                        <h4>About Fracture Detection</h4>
                        <p>Bone fractures are common injuries that can range from simple hairline fractures to complex open fractures. Early and accurate detection is crucial for proper treatment planning.</p>
                        
                        <div class="row mt-4">
                            <div class="col-md-6">
                                <h5>How Our AI Works</h5>
                                <p>Our fracture detection model uses the YOLO (You Only Look Once) architecture, an advanced object detection algorithm that can identify and localize potential fractures in X-ray images. The model has been trained on thousands of annotated medical images to recognize various types of fractures in different bones.</p>
                            </div>
                            
                            <div class="col-md-6">
                                <!-- Common Fracture Types section removed -->
                            </div>
                        </div>
                        
                        <div class="model-limitations p-4 mt-4">
                            <h5><i class="fas fa-exclamation-triangle text-warning me-2"></i>Important Limitations</h5>
                            <ul class="mt-3">
                                <li><strong>Not a Replacement for Radiologists:</strong> This tool is designed to assist healthcare professionals, not replace their expertise.</li>
                                <li><strong>Quality Dependent:</strong> Performance decreases significantly with poor quality X-ray images.</li>
                                <li><strong>Limited Scope:</strong> The model may not detect all types of fractures, particularly hairline fractures or those in complex anatomical regions.</li>
                            </ul>
                        </div>
                        
                        <div class="alert alert-warning mt-4">
                            <p class="mb-0"><strong>Disclaimer:</strong> This AI tool is designed to assist healthcare professionals in fracture detection, not replace their clinical judgment. Always consult with a qualified medical professional for diagnosis and treatment planning.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
{% endblock %}

{% block scripts %}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
$(document).ready(function() {
    // Store both images when they're loaded
    let originalImage = '';
    let detectionImage = '';
    let zoomEnabled = false;
    let zoomLevel = 2;
    
    // Form submission handler
    $('#fractureUploadForm').on('submit', function(e) {
        e.preventDefault();
        
        const fileInput = $('#fractureFile')[0];
        if (fileInput.files.length === 0) {
            alert('Please select a file to upload');
            return;
        }
        
        const formData = new FormData();
        formData.append('file', fileInput.files[0]);
        
        // Show loading spinner
        $('#analyzeFractureBtn .spinner-border').removeClass('d-none');
        $('#analyzeFractureBtn').prop('disabled', true);
        
        // Clear previous results
        $('#fractureResults').addClass('d-none');
        $('#detectionDetails').addClass('d-none');
        $('#noDetectionMessage').addClass('d-none');
        $('#detectionList').empty();
        
        $.ajax({
            url: '/predict/fracture',
            type: 'POST',
            data: formData,
            contentType: false,
            processData: false,
            success: function(response) {
                // Show the results container
                $('#fractureResults').removeClass('d-none');
                
                if (response.status === 'success') {
                    // Store both images
                    originalImage = `data:image/jpeg;base64,${response.original_image}`;
                    detectionImage = `data:image/jpeg;base64,${response.image}`;
                    
                    // Set initial image (with detection)
                    $('#detectionImage').attr('src', detectionImage);
                    
                    // Handle detection details
                    if (response.detections && response.detections.length > 0) {
                        $('#detectionDetails').removeClass('d-none');
                        
                        // Clear previous detections
                        $('#detectionTableBody').empty();
                        
                        // Add detection details to table
                        response.detections.forEach((detection, index) => {
                            const confidencePct = (detection.confidence * 100).toFixed(2);
                            const location = detection.box.join(', ');
                            
                            const tableRow = $(`
                                <tr>
                                    <td>${index + 1}</td>
                                    <td>${detection.class}</td>
                                    <td><span class="confidence-badge">${confidencePct}%</span></td>
                                    <td><small class="text-muted">[${location}]</small></td>
                                </tr>
                            `);
                            
                            $('#detectionTableBody').append(tableRow);
                        });
                    } else {
                        // Show no detections message
                        $('#noDetectionMessage').removeClass('d-none');
                    }
                } else {
                    // Show error message as an alert instead of using the removed element
                    alert('Error: ' + (response.message || 'An error occurred during processing'));
                }
            },
            error: function(xhr, status, error) {
                // Show the results container
                $('#fractureResults').removeClass('d-none');
                
                // Show error message as an alert
                alert('Error processing image: ' + error);
            },
            complete: function() {
                // Hide loading spinner and re-enable button
                $('#analyzeFractureBtn .spinner-border').addClass('d-none');
                $('#analyzeFractureBtn').prop('disabled', false);
            }
        });
    });
    
    // Handle toggle detection overlay
    $('#toggleDetection').on('change', function() {
        if (this.checked) {
            // Show detection image
            $('#detectionImage').attr('src', detectionImage);
        } else {
            // Show original image
            $('#detectionImage').attr('src', originalImage);
        }
    });
    
    // Handle brightness and contrast adjustments
    $('#brightness').on('input', function() {
        const brightnessValue = $(this).val();
        $('#brightnessValue').text(brightnessValue);
        updateImageAdjustments();
    });
    
    $('#contrast').on('input', function() {
        const contrastValue = $(this).val();
        $('#contrastValue').text(contrastValue);
        updateImageAdjustments();
    });
    
    $('#resetAdjustments').on('click', function() {
        $('#brightness').val(0);
        $('#contrast').val(100);
        $('#brightnessValue').text(0);
        $('#contrastValue').text(100);
        updateImageAdjustments();
    });
    
    function updateImageAdjustments() {
        const brightness = parseInt($('#brightness').val()) + 100;
        const contrast = parseInt($('#contrast').val());
        $('#detectionImage').css('filter', `brightness(${brightness/100}) contrast(${contrast/100})`);
    }
    
    // Professional Zoom Feature
    const imageContainer = document.querySelector('.zoom-container');
    const lens = document.getElementById('zoomLens');
    const result = document.getElementById('zoomResult');
    const img = document.getElementById('detectionImage');
    
    // Toggle zoom functionality
    $('#toggleZoom').on('click', function() {
        zoomEnabled = !zoomEnabled;
        
        if (zoomEnabled) {
            $(this).addClass('active');
            lens.style.display = 'block';
            result.style.opacity = '1';
            
            // Add mousemove event listener
            imageContainer.addEventListener('mousemove', moveMagnifier);
            // Add touch event listeners for mobile
            imageContainer.addEventListener('touchmove', moveMagnifierTouch);
            imageContainer.addEventListener('touchstart', moveMagnifierTouch);
            
        } else {
            $(this).removeClass('active');
            lens.style.display = 'none';
            result.style.opacity = '0';
            
            // Remove event listeners
            imageContainer.removeEventListener('mousemove', moveMagnifier);
            imageContainer.removeEventListener('touchmove', moveMagnifierTouch);
            imageContainer.removeEventListener('touchstart', moveMagnifierTouch);
        }
    });

    // Zoom in/out functionality
    $('#zoomIn').on('click', function() {
        if (zoomLevel < 5) {
            zoomLevel += 0.5;
            $('#zoomLevel').text(zoomLevel.toFixed(1) + 'x');
            updateZoom();
        }
    });
    
    $('#zoomOut').on('click', function() {
        if (zoomLevel > 1.5) {
            zoomLevel -= 0.5;
            $('#zoomLevel').text(zoomLevel.toFixed(1) + 'x');
            updateZoom();
        }
    });
    
    function updateZoom() {
        if (zoomEnabled) {
            const pos = getCursorPos(window.lastEvent);
            result.style.backgroundSize = (img.width * zoomLevel) + "px " + (img.height * zoomLevel) + "px";
            moveLens(pos.x, pos.y);
        }
    }
    
    function moveMagnifier(e) {
        window.lastEvent = e;
        e.preventDefault();
        const pos = getCursorPos(e);
        moveLens(pos.x, pos.y);
    }
    
    function moveMagnifierTouch(e) {
        window.lastEvent = e;
        e.preventDefault();
        const pos = getCursorPos(e.touches[0]);
        moveLens(pos.x, pos.y);
    }
    
    function getCursorPos(e) {
        const rect = img.getBoundingClientRect();
        let x = e.clientX - rect.left;
        let y = e.clientY - rect.top;
        x = Math.min(Math.max(0, x), rect.width);
        y = Math.min(Math.max(0, y), rect.height);
        return {x: x, y: y};
    }
    
    function moveLens(x, y) {
        // Position the lens
        lens.style.left = x + "px";
        lens.style.top = y + "px";
        
        // Position the result
        result.style.left = x + "px";
        result.style.top = y + "px";
        
        // Calculate background position for result
        const bgX = x * zoomLevel - (result.offsetWidth / 2);
        const bgY = y * zoomLevel - (result.offsetHeight / 2);
        
        // Update the background position
        result.style.backgroundImage = `url("${$('#detectionImage').attr('src')}")`;
        result.style.backgroundSize = (img.width * zoomLevel) + "px " + (img.height * zoomLevel) + "px";
        result.style.backgroundPosition = "-" + (bgX) + "px -" + (bgY) + "px";
    }
    
    // Initialize zoom display when image is loaded
    $('#detectionImage').on('load', function() {
        // Add initial setup for magnifier
        result.style.backgroundImage = `url("${$(this).attr('src')}")`;
    });
});
</script>
{% endblock %}
</file>

<file path="templates/index.html">
{% extends "layout.html" %}

{% block title %}MedXpert - Advanced Medical Imaging Analysis{% endblock %}

{% block content %}
<script>
// Set loading state immediately before any content loads
document.documentElement.classList.add('loading');
document.documentElement.style.overflow = 'hidden';
document.body.classList.add('loading');
</script>

<style>
    /* Critical loading screen styles - loaded immediately */
    #loading-screen {
        position: fixed !important;
        top: 0 !important;
        left: 0 !important;
        width: 100vw !important;
        height: 100vh !important;
        z-index: 999999 !important;
        transform: none !important;
        margin: 0 !important;
        padding: 0 !important;
        box-sizing: border-box !important;
    }
    body.loading {
        overflow: hidden !important;
        position: fixed !important;
        width: 100% !important;
        height: 100% !important;
        top: 0 !important;
        left: 0 !important;
    }
    body:not(.loading) {
        overflow: auto !important;
        position: relative !important;
        width: auto !important;
        height: auto !important;
        top: auto !important;
        left: auto !important;
    }
    html.loading {
        overflow: hidden !important;
    }
    html:not(.loading) {
        overflow: auto !important;
    }
</style>
<!-- Loading Screen with inline styles to prevent layout shift -->
<div id="loading-screen" style="position: fixed !important; top: 0 !important; left: 0 !important; width: 100vw !important; height: 100vh !important; background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8) !important; display: flex !important; align-items: center !important; justify-content: center !important; z-index: 99999 !important; margin: 0 !important; padding: 0 !important; box-sizing: border-box !important; transition: opacity 0.5s ease, visibility 0.5s ease;">
    <div style="text-align: center !important; color: white !important; position: relative !important; z-index: 100000 !important;">
        <div style="margin-bottom: 2rem !important;">
            <img src="{{ url_for('static', filename='logo.png') }}" alt="MedXpert" style="width: 120px !important; height: auto !important; filter: brightness(0) invert(1) !important; display: block !important; margin: 0 auto !important;">
        </div>
        <div style="margin: 2rem 0 !important;">
            <div style="width: 50px !important; height: 50px !important; border: 4px solid rgba(255, 255, 255, 0.3) !important; border-top: 4px solid white !important; border-radius: 50% !important; margin: 0 auto !important; animation: spin 1s linear infinite !important;"></div>
        </div>
        <div style="font-size: 1.1rem !important; font-weight: 500 !important; margin-top: 1rem !important; opacity: 0.9 !important;">Loading MedXpert...</div>
    </div>
</div>
<!-- Unified Hero Section with all content -->
<section class="unified-hero-section" style="margin-top: 0; padding-top: 0;">
    <div class="bg-circle bg-circle-1"></div>
    <div class="bg-circle bg-circle-2"></div>
    <div class="content-container py-5">
        <!-- Hero Section with Side Image -->
        <div class="row align-items-center hero-row" style="min-height: 80vh; padding: 2rem 0;">
            <!-- Text Content -->
            <div class="col-lg-6 text-content">
                <div class="hero-text-wrapper">
                    <h1 class="main-title">
                        <span class="title-main">Smart Medical</span>
                        <span class="title-highlight">Diagnosis</span>
                    </h1>
                    
                    <div class="hero-description">
                        <p class="lead-text">Advanced AI technology for fast and accurate medical image analysis.</p>
                    </div>
                    
                    <div class="action-buttons">
                        <a href="#models" class="primary-btn-clean">
                            <i class="fas fa-microscope"></i>
                            <span>Explore Models</span>
                        </a>

                    </div>
                </div>
            </div>
            
            <!-- Image Content -->
            <div class="col-lg-6 image-content">
                <div class="hero-image-container">
                    <div class="floating-shapes">
                        <div class="shape shape-1"></div>
                        <div class="shape shape-2"></div>
                        <div class="shape shape-3"></div>
                    </div>
                    <img src="{{ url_for('static', filename='hero-image.png') }}" alt="Smart Medical Diagnosis" class="hero-main-image" width="450" height="auto" loading="eager" style="max-width: 450px; width: 100%; height: auto; display: block; margin: 0 auto;">
                    <div class="image-backdrop"></div>
                </div>
            </div>
        </div>
        
        <!-- Spacer div for additional space -->
        <div class="row">
            <div class="col">
                <div style="height: 50px;"></div>
            </div>
        </div>
    </div>
</section>



<!-- Combined Models and How It Works Section -->
<section class="content-section" id="models" style="padding-top: 150px;">
    <div class="content-container">
        <!-- Stats Section -->
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="text-center" data-aos="fade-up">
                    <h2 style="position: relative; margin-bottom: 2rem; font-weight: 700; background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8); -webkit-background-clip: text; background-clip: text; -webkit-text-fill-color: transparent; display: inline-block; padding-bottom: 5px; line-height: 1.3;">Advanced Medical Diagnosis Statistics</h2>
                </div>
                
                <div class="analytics-bar mb-5">
                    <div class="analytics-item">
                        <div class="analytics-value">97<span>%</span></div>
                        <div class="analytics-label">Detection<br>Accuracy</div>
                    </div>
                    
                    <div class="analytics-divider"></div>
                    
                    <div class="analytics-item">
                        <div class="analytics-value">4</div>
                        <div class="analytics-label">Medical<br>Models</div>
                    </div>
                    
                    <div class="analytics-divider"></div>
                    
                    <div class="analytics-item">
                        <div class="analytics-value">5,000<span>+</span></div>
                        <div class="analytics-label">Completed<br>Analysis</div>
                    </div>
                    
                    <div class="analytics-divider"></div>
                    
                    <div class="analytics-item">
                        <div class="analytics-value">3<span>s</span></div>
                        <div class="analytics-label">Average<br>Processing Time</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Models Section Title -->
        <div class="row justify-content-center mb-5" style="margin-top: 3.5rem;">
            <div class="col-lg-10">
                <div class="text-center" data-aos="fade-up">
                    <h2 style="position: relative; margin-bottom: 2.5rem; font-weight: 700; background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8); -webkit-background-clip: text; background-clip: text; -webkit-text-fill-color: transparent; display: inline-block; padding-bottom: 5px; line-height: 1.3;">Our Medical Imaging Models</h2>
                    <span class="team-subtitle">Advanced neural networks trained on thousands of medical images to assist healthcare professionals in diagnosis</span>
                </div>
            </div>
        </div>
        
        <div class="row g-4 mb-5">
            <div class="col-lg-6 col-md-6 stagger-item">
                <div class="model-card-3d">
                    <div class="model-card-shine"></div>
                    <div class="model-card-inner">
                        <div class="model-card-icon">
                            <i class="fas fa-brain"></i>
                        </div>
                        <div class="model-card-content">
                            <h4 class="model-card-title">Brain Tumor Detection</h4>
                            <div class="model-card-badge">Dice: 0.73</div>
                            <p class="model-card-description">Segment and visualize brain tumors from MRI scans with state-of-the-art neural network models.</p>
                            <div class="model-card-tags">
                                <span class="model-tag">MRI Analysis</span>
                                <span class="model-tag">U-Net</span>
                                <span class="model-tag">Segmentation</span>
                            </div>
                            <div class="model-card-action">
                                <a href="{{ url_for('brain') }}" class="model-card-btn">
                                    <span class="btn-text">Try Model</span>
                                    <span class="btn-icon"><i class="fas fa-arrow-right"></i></span>
                                </a>
                                <a href="{{ url_for('brain_example') }}" class="model-card-btn model-card-btn-secondary" style="margin-left: 0.5rem;">
                                    <span class="btn-text">Explore Example</span>
                                    <span class="btn-icon"><i class="fas fa-search"></i></span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-lg-6 col-md-6 stagger-item">
                <div class="model-card-3d">
                    <div class="model-card-shine"></div>
                    <div class="model-card-inner">
                        <div class="model-card-icon">
                            <i class="fas fa-lungs"></i>
                        </div>
                        <div class="model-card-content">
                            <h4 class="model-card-title">Chest X-ray Analysis</h4>
                            <div class="model-card-badge">Accuracy: 95%</div>
                            <p class="model-card-description">Identify abnormalities including pneumonia, COVID-19, and other lung conditions with high precision.</p>
                            <div class="model-card-tags">
                                <span class="model-tag">X-ray</span>
                                <span class="model-tag">CNN</span>
                                <span class="model-tag">Classification</span>
                            </div>
                            <div class="model-card-action">
                                <a href="{{ url_for('chest') }}" class="model-card-btn">
                                    <span class="btn-text">Try Model</span>
                                    <span class="btn-icon"><i class="fas fa-arrow-right"></i></span>
                                </a>
                                <a href="{{ url_for('chest_example') }}" class="model-card-btn model-card-btn-secondary" style="margin-left: 0.5rem;">
                                    <span class="btn-text">Explore Example</span>
                                    <span class="btn-icon"><i class="fas fa-search"></i></span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-lg-6 col-md-6 stagger-item">
                <div class="model-card-3d">
                    <div class="model-card-shine"></div>
                    <div class="model-card-inner">
                        <div class="model-card-icon">
                            <i class="fas fa-diagnoses"></i>
                        </div>
                        <div class="model-card-content">
                            <h4 class="model-card-title">Skin Cancer Detection</h4>
                            <div class="model-card-badge">Accuracy: 93%</div>
                            <p class="model-card-description">Analyze skin lesions to classify them as benign or malignant with advanced visual recognition.</p>
                            <div class="model-card-tags">
                                <span class="model-tag">Dermatology</span>
                                <span class="model-tag">ResNet</span>
                                <span class="model-tag">Binary Classification</span>
                            </div>
                            <div class="model-card-action">
                                <a href="{{ url_for('skin') }}" class="model-card-btn">
                                    <span class="btn-text">Try Model</span>
                                    <span class="btn-icon"><i class="fas fa-arrow-right"></i></span>
                                </a>
                                <a href="{{ url_for('skin_example') }}" class="model-card-btn model-card-btn-secondary" style="margin-left: 0.5rem;">
                                    <span class="btn-text">Explore Example</span>
                                    <span class="btn-icon"><i class="fas fa-search"></i></span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-lg-6 col-md-6 stagger-item">
                <div class="model-card-3d">
                    <div class="model-card-shine"></div>
                    <div class="model-card-inner">
                        <div class="model-card-icon">
                            <i class="fas fa-bone"></i>
                        </div>
                        <div class="model-card-content">
                            <h4 class="model-card-title">Fracture Detection</h4>
                            <div class="model-card-badge">mAP50: 0.94</div>
                            <p class="model-card-description">Detect and locate bone fractures in X-ray images with advanced object detection technology.</p>
                            <div class="model-card-tags">
                                <span class="model-tag">X-ray</span>
                                <span class="model-tag">YOLO</span>
                                <span class="model-tag">Object Detection</span>
                            </div>
                            <div class="model-card-action">
                                <a href="{{ url_for('fracture') }}" class="model-card-btn">
                                    <span class="btn-text">Try Model</span>
                                    <span class="btn-icon"><i class="fas fa-arrow-right"></i></span>
                                </a>
                                <a href="{{ url_for('fracture_example') }}" class="model-card-btn model-card-btn-secondary" style="margin-left: 0.5rem;">
                                    <span class="btn-text">Explore Example</span>
                                    <span class="btn-icon"><i class="fas fa-search"></i></span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- How It Works Section - Now inside the same section -->
        <div class="row justify-content-center mt-5 pt-4">
            <div class="col-lg-12">
                <div class="text-center mb-5">
                    <h2 style="position: relative; margin-bottom: 2rem; font-weight: 700; color: #1a2cb3;">How It Works</h2>
                    <span class="team-subtitle">Get instant AI-powered medical image analysis in just 3 simple steps</span>
                </div>
                <!-- Horizontal Workflow Steps -->
                <div class="row workflow-horizontal mb-5">
                    <!-- Step 1: Choose Model -->
                    <div class="col-lg-4 col-md-4 mb-4">
                        <div class="workflow-step-horizontal">
                            <div class="step-number-horizontal">1</div>
                            <div class="step-icon-horizontal">
                                <i class="fas fa-brain"></i>
                            </div>
                            <h4 class="step-title-horizontal">Choose AI Model</h4>
                            <p class="step-description-horizontal">Select from our specialized models: Brain MRI, Chest X-Ray, Skin Analysis, or Fracture Detection.</p>
                        </div>
                    </div>
                    <!-- Step 2: Upload -->
                    <div class="col-lg-4 col-md-4 mb-4">
                        <div class="workflow-step-horizontal">
                            <div class="step-number-horizontal">2</div>
                            <div class="step-icon-horizontal">
                                <i class="fas fa-cloud-upload-alt"></i>
                            </div>
                            <h4 class="step-title-horizontal">Upload Your Image</h4>
                            <p class="step-description-horizontal">Simply drag and drop or select your medical image. We support DICOM, JPG, PNG formats.</p>
                        </div>
                    </div>
                    <!-- Step 3: Get Results -->
                    <div class="col-lg-4 col-md-4 mb-4">
                        <div class="workflow-step-horizontal">
                            <div class="step-number-horizontal">3</div>
                            <div class="step-icon-horizontal">
                                <i class="fas fa-chart-pie"></i>
                            </div>
                            <h4 class="step-title-horizontal">Get Instant Results</h4>
                            <p class="step-description-horizontal">Receive detailed analysis with confidence scores, visual highlights, and clear medical insights within seconds.</p>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>

<!-- Why Choose MedXpert Section -->
<section class="content-section features-section-modern">
    <div class="content-container">
        <div class="row justify-content-center">
            <div class="col-lg-8 text-center mb-5">
                <h2 class="features-title-modern">Why Choose MedXpert?</h2>
                <p class="features-subtitle-modern">Experience the future of medical image analysis with our cutting-edge AI platform designed for healthcare professionals.</p>
            </div>
        </div>
                
        <div class="row features-grid">
            <div class="col-lg-6 col-md-6 mb-4">
                <div class="feature-card-modern">
                    <div class="feature-card-icon">
                        <i class="fas fa-shield-alt"></i>
                    </div>
                    <div class="feature-card-content">
                        <h3>Privacy & Security First</h3>
                        <p>Your medical data is processed securely with end-to-end encryption. Images are analyzed locally and never stored permanently.</p>
                        <div class="feature-highlight">
                            <i class="fas fa-check-circle" style="color: white;"></i>
                            <span>HIPAA Compliant Processing</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-lg-6 col-md-6 mb-4">
                <div class="feature-card-modern">
                    <div class="feature-card-icon">
                        <i class="fas fa-clock"></i>
                    </div>
                    <div class="feature-card-content">
                        <h3>Instant Analysis</h3>
                        <p>Get comprehensive AI analysis results in seconds, not hours. Perfect for time-sensitive medical decisions.</p>
                        <div class="feature-highlight">
                            <i class="fas fa-stopwatch" style="color: white;"></i>
                            <span>Under 5 seconds average</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-lg-6 col-md-6 mb-4">
                <div class="feature-card-modern">
                    <div class="feature-card-icon">
                        <i class="fas fa-user-md"></i>
                    </div>
                    <div class="feature-card-content">
                        <h3>Clinical Grade Accuracy</h3>
                        <p>Our AI models are trained on diverse medical datasets and validated by healthcare professionals for reliable results.</p>
                        <div class="feature-highlight">
                            <i class="fas fa-medal" style="color: white;"></i>
                            <span>Clinically Validated</span>
                        </div>
                    </div>
                </div>
            </div>
        
            <div class="col-lg-6 col-md-6 mb-4">
                <div class="feature-card-modern">
                    <div class="feature-card-icon">
                        <i class="fas fa-globe"></i>
                    </div>
                    <div class="feature-card-content">
                        <h3>Accessible Anywhere</h3>
                        <p>Web-based platform works on any device with internet connection. No software installation required.</p>
                        <div class="feature-highlight">
                            <i class="fas fa-laptop-medical" style="color: white;"></i>
                            <span>Cross-platform Compatible</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Call to Action -->
        <div class="row">
            <div class="col-12 text-center mt-4">
                <div class="cta-container">
                    <h4>Ready to Transform Your Medical Workflow?</h4>
                    <p>Join healthcare professionals who trust MedXpert for accurate AI-powered medical image analysis.</p>
                    <div class="cta-buttons">
                        <a href="javascript:void(0)" onclick="smoothScrollTo('#models')" class="cta-btn-primary" style="background: white; color: #1a2cb3; border: none; box-shadow: 0 4px 15px rgba(255, 255, 255, 0.2); transition: all 0.3s ease;">
                            <span>Try Our Models</span>
                            <i class="fas fa-arrow-right"></i>
                        </a>
                        <a href="javascript:void(0)" onclick="smoothScrollTo('#our-team')" class="cta-btn-secondary">
                            <span>Meet Our Team</span>
                            <i class="fas fa-users"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    /* Modern How It Works Section */
    .modern-workflow {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1rem;
        margin: 3rem 0;
        flex-wrap: wrap;
    }
    
    .workflow-step-modern {
        background: linear-gradient(135deg, #f8f9fa, #ffffff);
        border: 2px solid #e9ecef;
        border-radius: 16px;
        padding: 2rem 1.5rem;
        text-align: center;
        max-width: 280px;
        min-height: 320px;
        display: flex;
        flex-direction: column;
        align-items: center;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }
    
    .workflow-step-modern::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background: linear-gradient(90deg, #1a2cb3, #233cea, #3346e8);
        transform: scaleX(0);
        transition: transform 0.3s ease;
    }
    
    .workflow-step-modern:hover {
        transform: translateY(-10px);
        box-shadow: 0 15px 35px rgba(26, 44, 179, 0.15);
        border-color: #233cea;
    }
    
    .workflow-step-modern:hover::before {
        transform: scaleX(1);
    }
    
    .step-number {
        background: linear-gradient(135deg, #1a2cb3, #233cea);
        color: white;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        box-shadow: 0 8px 16px rgba(26, 44, 179, 0.3);
    }
    
    .step-icon {
        background: linear-gradient(135deg, #e3f2fd, #bbdefb);
        color: #1a2cb3;
        width: 80px;
        height: 80px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 1.5rem;
        transition: all 0.3s ease;
    }
    
    .step-icon i {
        font-size: 2rem;
    }
    
    .workflow-step-modern:hover .step-icon {
        transform: scale(1.1);
        background: linear-gradient(135deg, #233cea, #3346e8);
        color: white;
    }
    
    .step-content h4 {
        color: #1a2cb3;
        font-size: 1.3rem;
        font-weight: 600;
        margin-bottom: 1rem;
    }
    
    .step-content p {
        color: #6c757d;
        font-size: 0.95rem;
        line-height: 1.6;
        margin-bottom: 1rem;
    }
    
    .model-icons {
        display: flex;
        gap: 0.5rem;
        justify-content: center;
        margin-top: 1rem;
    }
    
    .mini-icon {
        background: linear-gradient(135deg, #1a2cb3, #233cea);
        color: white;
        width: 35px;
        height: 35px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        cursor: pointer;
    }
    
    .mini-icon:hover {
        transform: scale(1.1);
        box-shadow: 0 4px 8px rgba(26, 44, 179, 0.3);
        background: linear-gradient(135deg, #3346e8, #4a90e2);
    }
    
    .mini-icon[data-model="brain"]:hover { background: linear-gradient(135deg, #8e44ad, #9b59b6); }
    .mini-icon[data-model="chest"]:hover { background: linear-gradient(135deg, #27ae60, #2ecc71); }
    .mini-icon[data-model="skin"]:hover { background: linear-gradient(135deg, #f39c12, #e67e22); }
    .mini-icon[data-model="fracture"]:hover { background: linear-gradient(135deg, #e74c3c, #c0392b); }
    
    .workflow-arrow {
        color: #233cea;
        font-size: 1.5rem;
        margin: 0 1rem;
        animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
        0% { opacity: 0.6; }
        50% { opacity: 1; }
        100% { opacity: 0.6; }
    }
    
    /* Demo Preview Section */
    .demo-preview {
        background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        border-radius: 16px;
        padding: 2.5rem;
        text-align: center;
        margin-top: 4rem;
        border: 1px solid #dee2e6;
        box-shadow: 0 8px 25px rgba(26, 44, 179, 0.08);
        transition: all 0.3s ease;
    }
    
    .demo-preview:hover {
        box-shadow: 0 15px 35px rgba(26, 44, 179, 0.12);
        transform: translateY(-3px);
    }
    
    .demo-badge {
        display: inline-flex;
        align-items: center;
        background: linear-gradient(135deg, #1a2cb3, #233cea);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 600;
        margin-bottom: 1rem;
        box-shadow: 0 4px 8px rgba(26, 44, 179, 0.3);
    }
    
    .demo-badge i {
        margin-right: 0.5rem;
        font-size: 1rem;
    }
    
    .demo-text {
        color: #495057;
        font-size: 1.1rem;
        margin-bottom: 1.5rem;
    }
    
    .demo-btn {
        display: inline-flex;
        align-items: center;
        background: linear-gradient(135deg, #1a2cb3, #233cea);
        color: white;
        padding: 0.8rem 2rem;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(26, 44, 179, 0.3);
    }
    
    .demo-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 20px rgba(26, 44, 179, 0.4);
        color: white;
        text-decoration: none;
    }
    
    .demo-btn span {
        margin-right: 0.5rem;
    }
    
    /* Why Choose MedXpert Section */
    .features-section-modern {
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
        padding: 5rem 0;
        position: relative;
        overflow: hidden;
    }
    
    .features-section-modern::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: 
            radial-gradient(circle at 20% 20%, rgba(255, 255, 255, 0.03) 0%, transparent 50%),
            radial-gradient(circle at 80% 80%, rgba(255, 255, 255, 0.03) 0%, transparent 50%);
        pointer-events: none;
        z-index: 1;
    }
    
    .features-title-modern {
        color: white;
        font-weight: 700;
        font-size: 2.8rem;
        margin-bottom: 1rem;
        position: relative;
    }
    
    .features-subtitle-modern {
        color: rgba(255, 255, 255, 0.85);
        font-size: 1.2rem;
        margin-bottom: 3rem;
        max-width: 800px;
        margin-left: auto;
        margin-right: auto;
        line-height: 1.6;
    }
    
    .features-grid {
        position: relative;
        z-index: 2;
    }
    
    .feature-card-modern {
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(15px);
        border-radius: 16px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        padding: 2rem;
        height: 100%;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }
    
    .feature-card-modern::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background: linear-gradient(90deg, #ffffff, rgba(255, 255, 255, 0.5));
        transform: scaleX(0);
        transition: transform 0.3s ease;
    }
    
    .feature-card-modern:hover {
        transform: translateY(-10px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        border-color: rgba(255, 255, 255, 0.2);
        background: rgba(255, 255, 255, 0.08);
    }
    
    .feature-card-modern:hover::before {
        transform: scaleX(1);
    }
    
    .feature-card-icon {
        background: rgba(255, 255, 255, 0.1);
        width: 70px;
        height: 70px;
        border-radius: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 1.5rem;
        transition: all 0.3s ease;
    }
    
    .feature-card-icon i {
        font-size: 1.8rem;
        color: white;
    }
    
    .feature-card-modern:hover .feature-card-icon {
        background: rgba(255, 255, 255, 0.2);
        transform: rotate(5deg) scale(1.1);
    }
    
    .feature-card-content h3 {
        color: white;
        font-size: 1.4rem;
        font-weight: 600;
        margin-bottom: 1rem;
    }
    
    .feature-card-content p {
        color: rgba(255, 255, 255, 0.8);
        font-size: 1rem;
        line-height: 1.6;
        margin-bottom: 1.5rem;
    }
    
    .feature-highlight {
        display: flex;
        align-items: center;
        background: rgba(255, 255, 255, 0.1);
        padding: 0.7rem 1rem;
        border-radius: 8px;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .feature-highlight i {
        color: #1a2cb3;
        margin-right: 0.7rem;
        font-size: 1rem;
    }
    
    .feature-highlight span {
        color: rgba(255, 255, 255, 0.9);
        font-size: 0.9rem;
        font-weight: 500;
    }
    
    /* Call to Action */
    .cta-container {
        position: relative;
        z-index: 2;
    }
    
    .cta-container h4 {
        color: white;
        font-size: 1.8rem;
        font-weight: 600;
        margin-bottom: 1rem;
    }
    
    .cta-container p {
        color: rgba(255, 255, 255, 0.8);
        font-size: 1.1rem;
        margin-bottom: 2rem;
        max-width: 600px;
        margin-left: auto;
        margin-right: auto;
    }
    
    .cta-buttons {
        display: flex;
        gap: 1rem;
        justify-content: center;
        flex-wrap: wrap;
    }
    
    .cta-btn-primary {
        background: linear-gradient(135deg, #1a2cb3, #233cea);
        color: white;
        padding: 1.2rem 3rem;
        border-radius: 60px;
        text-decoration: none;
        font-weight: 700;
        font-size: 1.1rem;
        transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        display: inline-flex;
        align-items: center;
        gap: 1rem;
        box-shadow: 0 10px 30px rgba(26, 44, 179, 0.3);
        position: relative;
        overflow: hidden;
        border: none;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .cta-btn-primary::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
        transition: left 0.5s;
    }
    
    .cta-btn-primary::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, rgba(255,255,255,0.1), transparent);
        border-radius: 60px;
        pointer-events: none;
    }
    
    .cta-btn-primary:hover {
        background: linear-gradient(135deg, #0f1f9e, #1a2cb3);
        transform: translateY(-5px) scale(1.08);
        box-shadow: 0 15px 40px rgba(26, 44, 179, 0.4);
        color: white;
        text-decoration: none;
    }
    
    .cta-btn-primary:hover::before {
        left: 100%;
    }
    
    .cta-btn-secondary {
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.1));
        color: white;
        padding: 1rem 2.5rem;
        border-radius: 50px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        display: inline-flex;
        align-items: center;
        gap: 0.8rem;
        border: 2px solid rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(10px);
        position: relative;
        overflow: hidden;
    }
    
    .cta-btn-secondary::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: left 0.5s;
    }
    
    .cta-btn-secondary:hover {
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.2));
        transform: translateY(-3px) scale(1.05);
        border-color: rgba(255, 255, 255, 0.5);
        color: white;
        text-decoration: none;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
    }
    
    .cta-btn-secondary:hover::before {
        left: 100%;
    }
    
    .cta-btn-primary i,
    .cta-btn-secondary i {
        transition: transform 0.3s ease;
    }
    
    .cta-btn-primary:hover i,
    .cta-btn-secondary:hover i {
        transform: translateX(5px);
    }
    
    /* Responsive Design */
    @media (max-width: 768px) {
        .modern-workflow {
            flex-direction: column;
            gap: 2rem;
        }
        
        .workflow-arrow {
            transform: rotate(90deg);
            margin: 1rem 0;
        }
        
        .workflow-step-modern {
            max-width: 100%;
            min-height: auto;
        }
        
        .features-title-modern {
            font-size: 2.2rem;
        }
        
        .features-subtitle-modern {
            font-size: 1.1rem;
        }
        
        .feature-card-modern {
            padding: 1.5rem;
        }
        
        .cta-buttons {
            flex-direction: column;
            align-items: center;
        }
        
        .cta-btn-primary,
        .cta-btn-secondary {
            width: 100%;
            max-width: 320px;
            justify-content: center;
        }
        
        .cta-btn-primary {
            padding: 1rem 2.5rem;
            font-size: 1rem;
            letter-spacing: 0.3px;
        }
        
        .cta-btn-secondary {
            padding: 1rem 2rem;
            font-size: 1rem;
        }
    }
</style>

<!-- Team Section - Modern Slider Design -->
<section class="team-section" id="our-team">
    <div class="team-container">
        <div class="team-header">
            <h2 style="position: relative; margin-bottom: 2rem; font-weight: 700; background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8); -webkit-background-clip: text; background-clip: text; -webkit-text-fill-color: transparent; display: inline-block; padding-bottom: 5px; line-height: 1.3;">Our Team</h2>
            <span class="team-subtitle">The experts behind MedXpert</span>
        </div>

        <!-- Advanced Team Carousel -->
        <div class="team-carousel-container">
            <div class="team-carousel-track">
                <!-- Team Member: Mohamed -->
                <div class="team-card" data-position="prev">
                    <div class="team-social">
                        <a href="https://www.linkedin.com/in/mohamed-alawy/" class="team-social-icon linkedin" target="_blank" rel="noopener noreferrer">
                            <i class="fab fa-linkedin-in"></i>
                        </a>
                    </div>
                    <div class="team-img-container">
                        <img src="{{ url_for('static', filename='Mohamed-Alawy.png') }}" alt="Mohamed Alawy" class="team-member-photo">
                    </div>
                    <div class="team-info">
                        <h3>Mohamed Alawy</h3>
                        <p class="team-role">ML & CV Engineer</p>
                        <p class="team-description">Specialized in computer vision and machine learning model development for medical imaging applications.</p>
                    </div>
                </div>

                <!-- Team Member: Osama (Lead) -->
                <div class="team-card" data-position="active">
                    <div class="team-role-badge">Team Lead</div>
                    <div class="team-social">
                        <a href="https://www.linkedin.com/in/osama-khalil-bb3873231/" class="team-social-icon linkedin" target="_blank" rel="noopener noreferrer">
                            <i class="fab fa-linkedin-in"></i>
                        </a>
                    </div>
                    <div class="team-img-container">
                        <img src="{{ url_for('static', filename='Osama-Khalil.png') }}" alt="Osama Khalil" class="team-member-photo">
                    </div>
                    <div class="team-info">
                        <h3>Osama Khalil</h3>
                        <p class="team-role">Project Lead & ML Engineer</p>
                        <p class="team-description">Leading the development of advanced AI solutions for medical diagnosis and healthcare innovation.</p>
                    </div>
                </div>

                <!-- Team Member: Sherif -->
                <div class="team-card" data-position="next">
                    <div class="team-social">
                        <a href="#" class="team-social-icon linkedin" target="_blank" rel="noopener noreferrer">
                            <i class="fab fa-linkedin-in"></i>
                        </a>
                    </div>
                    <div class="team-img-container">
                        <img src="{{ url_for('static', filename='Sherif-Serag.png') }}" alt="Sherif Serag" class="team-member-photo">
                    </div>
                    <div class="team-info">
                        <h3>Sherif Serag</h3>
                        <p class="team-role">ML Engineer</p>
                        <p class="team-description">Expert in developing and optimizing machine learning algorithms for enhanced diagnostic accuracy.</p>
                    </div>
                </div>

                <!-- Team Member: Ibrahim -->
                <div class="team-card" data-position="far-next">
                    <div class="team-social">
                        <a href="https://www.linkedin.com/in/ibrahim-khaled-17b178236/" class="team-social-icon linkedin" target="_blank" rel="noopener noreferrer">
                            <i class="fab fa-linkedin-in"></i>
                        </a>
                    </div>
                    <div class="team-img-container">
                        <img src="{{ url_for('static', filename='Ibrahim-Khaled.png') }}" alt="Ibrahim Khaled" class="team-member-photo">
                    </div>
                    <div class="team-info">
                        <h3>Ibrahim Khaled</h3>
                        <p class="team-role">Frontend Developer</p>
                        <p class="team-description">Creating intuitive and responsive user interfaces for seamless medical imaging analysis experiences.</p>
                    </div>
                </div>

                <!-- Team Member: Karim -->
                <div class="team-card" data-position="hidden">
                    <div class="team-social">
                        <a href="#" class="team-social-icon linkedin" target="_blank" rel="noopener noreferrer">
                            <i class="fab fa-linkedin-in"></i>
                        </a>
                    </div>
                    <div class="team-img-container">
                        <img src="{{ url_for('static', filename='Karim.png') }}" alt="Karim Elwaraky" class="team-member-photo">
                    </div>
                    <div class="team-info">
                        <h3>Karim Elwaraky</h3>
                        <p class="team-role">Cloud Engineer</p>
                        <p class="team-description">Architecting scalable cloud infrastructure for robust and reliable medical AI applications.</p>
                    </div>
                </div>

                <!-- Team Member: Abdelrahman -->
                <div class="team-card" data-position="hidden">
                    <div class="team-social">
                        <a href="#" class="team-social-icon linkedin" target="_blank" rel="noopener noreferrer">
                            <i class="fab fa-linkedin-in"></i>
                        </a>
                    </div>
                    <div class="team-img-container">
                        <img src="{{ url_for('static', filename='to.png') }}" alt="Abdelrahman Eltokhy" class="team-member-photo">
                    </div>
                    <div class="team-info">
                        <h3>Abdelrahman Eltokhy</h3>
                        <p class="team-role">Data Analyst</p>
                        <p class="team-description">Analyzing medical data patterns and insights to improve model performance and diagnostic accuracy.</p>
                    </div>
                </div>
            </div>

            <!-- Enhanced Carousel Controls -->
            <div class="team-carousel-controls">
                <button class="team-nav-btn team-prev-btn" aria-label="Previous team member">
                    <i class="fas fa-chevron-left"></i>
                </button>
                
                <div class="team-indicators">
                    <span class="team-indicator" data-index="0"></span>
                    <span class="team-indicator active" data-index="1"></span>
                    <span class="team-indicator" data-index="2"></span>
                    <span class="team-indicator" data-index="3"></span>
                    <span class="team-indicator" data-index="4"></span>
                    <span class="team-indicator" data-index="5"></span>
                </div>
                
                <button class="team-nav-btn team-next-btn" aria-label="Next team member">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>
    </div>
</section>

<!-- CTA Section - Changed to black background -->
<section class="content-section section-centered cta-section" style="background-color: #000000; color: white;">
    <div class="content-container">
        {% if current_user.is_authenticated %}
        <h2 class="mb-4">Welcome back to MedXpert!</h2>
        <p class="lead mb-4 content-narrow mx-auto">Continue analyzing your medical images using advanced AI models.</p>
        <div class="d-flex justify-content-center gap-3">
            <a href="#models" class="btn btn-light btn-lg">Explore Models</a>
            <a href="{{ url_for('profile') }}" class="btn btn-outline-light btn-lg">View Profile</a>
        </div>
        {% else %}
        <h2 style="position: relative; margin-bottom: 2rem; font-weight: 700; color: white; display: inline-block; padding-bottom: 5px; line-height: 1.3;">Ready to enhance your diagnostic capabilities?</h2>
        <p class="lead mb-4 content-narrow mx-auto">Join thousands of healthcare professionals who use MedXpert to improve their diagnostic accuracy.</p>
        <div class="d-flex justify-content-center gap-3 stagger-item">
            <a href="{{ url_for('register') }}" class="btn btn-light btn-lg" style="color: #000 !important; font-weight: 900;">Create Free Account</a>
            <a href="#models" class="btn btn-outline-light btn-lg">Explore Models</a>
        </div>
        {% endif %}
    </div>
</section>

<!-- Back to Top Button -->
<div id="back-to-top" class="back-to-top">
    <button aria-label="Back to top">
        <i class="fas fa-arrow-up"></i>
    </button>
</div>
{% endblock %}

{% block scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Hide loading screen after everything is loaded
        hideLoadingScreen();
        
        // Initialize advanced team carousel
        initTeamSlider();
        
        // Animate hero text
        animateHeroText();
        
        // Back to top button functionality
        initBackToTop();
        
        // Add smooth scrolling for navigation
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });
    });
    
    // Smooth scroll function
    function smoothScrollTo(target) {
        const element = document.querySelector(target);
        if (element) {
            element.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
        }
    }
    
    // Back to top button
    function initBackToTop() {
        const backToTopBtn = document.getElementById('back-to-top');
        
        // Show/hide button based on scroll position
        window.addEventListener('scroll', function() {
            if (window.pageYOffset > 300) {
                backToTopBtn.classList.add('visible');
            } else {
                backToTopBtn.classList.remove('visible');
            }
        });
        
        // Scroll to top when clicked
        backToTopBtn.addEventListener('click', function(e) {
            e.preventDefault();
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });
    }
    
    function animateHeroText() {
        // No animations to prevent layout shift
    }
    
    function hideLoadingScreen() {
        const loadingScreen = document.getElementById('loading-screen');
        let hasFinished = false;
        
        function finishLoading() {
            if (hasFinished) return;
            hasFinished = true;
            
            setTimeout(() => {
                if (loadingScreen) {
                    loadingScreen.classList.add('hidden');
                }
                document.body.classList.remove('loading');
                document.documentElement.classList.remove('loading');
                
                // Force enable scrolling with important values
                document.body.style.setProperty('overflow', 'auto', 'important');
                document.body.style.setProperty('position', 'relative', 'important');
                document.body.style.setProperty('width', 'auto', 'important');
                document.body.style.setProperty('height', 'auto', 'important');
                document.body.style.setProperty('top', 'auto', 'important');
                document.body.style.setProperty('left', 'auto', 'important');
                document.documentElement.style.setProperty('overflow', 'auto', 'important');
                
                // Remove scroll prevention
                if (typeof preventScroll === 'function') {
                    window.removeEventListener('scroll', preventScroll);
                    window.removeEventListener('touchmove', preventScroll);
                }
                
                setTimeout(() => {
                    if (loadingScreen && loadingScreen.parentNode) {
                        loadingScreen.remove();
                    }
                }, 500);
            }, 300);
        }
        
        // Wait for all images to load
        const allImages = document.querySelectorAll('img');
        let loadedImages = 0;
        const totalImages = allImages.length;
        
        if (totalImages === 0) {
            finishLoading();
            return;
        }
        
        allImages.forEach(img => {
            if (img.complete) {
                loadedImages++;
            } else {
                img.addEventListener('load', () => {
                    loadedImages++;
                    if (loadedImages === totalImages) {
                        finishLoading();
                    }
                });
                img.addEventListener('error', () => {
                    loadedImages++;
                    if (loadedImages === totalImages) {
                        finishLoading();
                    }
                });
            }
        });
        
        if (loadedImages === totalImages) {
            finishLoading();
        }
        
        // Fallback: hide loading screen after maximum 2 seconds
        setTimeout(() => {
            if (!hasFinished) {
                console.log('Loading timeout reached, forcing scroll restoration');
                document.body.style.setProperty('overflow', 'auto', 'important');
                document.documentElement.style.setProperty('overflow', 'auto', 'important');
            }
            finishLoading();
        }, 2000);
    }
    
    // Add loading class to body initially and prevent any movement
    document.body.classList.add('loading');
    document.body.style.overflow = 'hidden';
    document.body.style.position = 'fixed';
    document.body.style.width = '100%';
    document.body.style.height = '100%';
    document.body.style.top = '0';
    document.body.style.left = '0';
    
    // Prevent any scrolling during load
    window.addEventListener('scroll', preventScroll, { passive: false });
    window.addEventListener('touchmove', preventScroll, { passive: false });
    
    function preventScroll(e) {
        if (document.body.classList.contains('loading')) {
            e.preventDefault();
            e.stopPropagation();
            return false;
        }
    }
    
    function initTeamSlider() {
        const teamCards = Array.from(document.querySelectorAll('.team-card'));
        const prevBtn = document.querySelector('.team-prev-btn');
        const nextBtn = document.querySelector('.team-next-btn');
        const indicators = Array.from(document.querySelectorAll('.team-indicator'));
        
        if (!teamCards.length || !prevBtn || !nextBtn) return;
        
        let currentIndex = 1; // Start with second card as active (Osama as lead)
        
        // Position mapping
        const positions = ['far-prev', 'prev', 'active', 'next', 'far-next', 'hidden'];
        
        // Initial setup
        updateTeamCarousel();
        
        // Navigation buttons
        prevBtn.addEventListener('click', function() {
            currentIndex = currentIndex > 0 ? currentIndex - 1 : teamCards.length - 1;
            updateTeamCarousel();
        });
        
        nextBtn.addEventListener('click', function() {
            currentIndex = currentIndex < teamCards.length - 1 ? currentIndex + 1 : 0;
            updateTeamCarousel();
        });
        
        // Indicator navigation
        indicators.forEach((indicator, index) => {
            indicator.addEventListener('click', function() {
                currentIndex = index;
                updateTeamCarousel();
            });
        });
        
        // Touch swipe support
        let touchStartX = 0;
        let touchEndX = 0;
        
        const carousel = document.querySelector('.team-carousel-track');
        if (carousel) {
            carousel.addEventListener('touchstart', e => {
                touchStartX = e.changedTouches[0].clientX;
            });
            
            carousel.addEventListener('touchend', e => {
                touchEndX = e.changedTouches[0].clientX;
                handleSwipe();
            });
        }
        
        function handleSwipe() {
            const swipeThreshold = 50;
            if (touchStartX - touchEndX > swipeThreshold) {
                // Swipe left - next slide
                currentIndex = currentIndex < teamCards.length - 1 ? currentIndex + 1 : 0;
                updateTeamCarousel();
            } else if (touchEndX - touchStartX > swipeThreshold) {
                // Swipe right - previous slide
                currentIndex = currentIndex > 0 ? currentIndex - 1 : teamCards.length - 1;
                updateTeamCarousel();
            }
        }
        
        // Update carousel positions with smooth z-index transitions
        function updateTeamCarousel() {
            // Phase 1: Add transition classes to cards that will move
            teamCards.forEach((card, index) => {
                const currentPos = card.getAttribute('data-position');
                const newPos = getCardPosition(index, currentIndex, teamCards.length);
                
                // Add transition classes for cards moving to/from active position
                if ((currentPos === 'active' && newPos !== 'active') || 
                    (currentPos !== 'active' && newPos === 'active')) {
                    card.classList.add('transitioning');
                    // Give transitioning cards middle z-index
                    card.style.zIndex = '75';
                }
            });
            
            // Phase 2: Apply new positions after short delay
            setTimeout(() => {
                teamCards.forEach((card, index) => {
                    const position = getCardPosition(index, currentIndex, teamCards.length);
                    card.setAttribute('data-position', position);
                });
                
                // Phase 3: Clean up transition classes after animation completes
                setTimeout(() => {
                    teamCards.forEach(card => {
                        card.classList.remove('transitioning');
                        card.style.zIndex = ''; // Reset to CSS values
                    });
                }, 600); // Match CSS transition duration
                
            }, 50);
            
            // Update indicators
            indicators.forEach((indicator, index) => {
                indicator.classList.toggle('active', index === currentIndex);
            });
        }
        
        // Calculate card position relative to active card
        function getCardPosition(cardIndex, activeIndex, totalCards) {
            const diff = cardIndex - activeIndex;
            
            if (diff === 0) return 'active';
            if (diff === 1 || diff === -(totalCards - 1)) return 'next';
            if (diff === -1 || diff === totalCards - 1) return 'prev';
            if (diff === 2 || diff === -(totalCards - 2)) return 'far-next';
            if (diff === -2 || diff === totalCards - 2) return 'far-prev';
            
            return 'hidden';
        }
        
        // Auto-rotation (optional)
        let autoRotate = setInterval(() => {
            currentIndex = currentIndex < teamCards.length - 1 ? currentIndex + 1 : 0;
            updateTeamCarousel();
        }, 7000); // Rotate every 7 seconds
        
        // Pause auto-rotation on hover
        const container = document.querySelector('.team-carousel-container');
        if (container) {
            container.addEventListener('mouseenter', () => clearInterval(autoRotate));
            container.addEventListener('mouseleave', () => {
                autoRotate = setInterval(() => {
                    currentIndex = currentIndex < teamCards.length - 1 ? currentIndex + 1 : 0;
                    updateTeamCarousel();
                }, 7000);
            });
        }
    }
</script>

<style>
    /* Loading Screen */
    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
    
    #loading-screen.hidden {
        opacity: 0 !important;
        visibility: hidden !important;
    }
    
    /* Prevent layout shift for all images */
    img {
        max-width: 100%;
        height: auto;
        display: block;
    }
    
    /* Prevent scrolling during loading - but restore after */
    body.loading {
        overflow: hidden !important;
        position: fixed !important;
        width: 100% !important;
        height: 100% !important;
        top: 0 !important;
        left: 0 !important;
    }
    
    body:not(.loading) {
        overflow: auto !important;
        position: relative !important;
        width: auto !important;
        height: auto !important;
        top: auto !important;
        left: auto !important;
    }
    
    /* Additional loading screen protection */
    #loading-screen {
        position: fixed !important;
        top: 0 !important;
        left: 0 !important;
        width: 100vw !important;
        height: 100vh !important;
        z-index: 999999 !important;
        transform: none !important;
        margin: 0 !important;
        padding: 0 !important;
    }

    /* Unified Hero Section */
    .unified-hero-section {
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
        color: white;
        position: relative;
        overflow: hidden;
        padding: 0;
        margin: 0;
        border-radius: 0 0 2rem 2rem;
    }
    
    /* Make the hero section take up the entire viewport width and start from the very top */
    .home-page .unified-hero-section {
        margin-top: -70px; /* Offset the padding we'll add to content */
        width: 100%;
        border-radius: 0 0 2rem 2rem;
        box-shadow: 0 10px 30px rgba(26, 44, 179, 0.2);
    }
    
    /* Hero Animations */
    .bg-circle {
        position: absolute;
        border-radius: 50%;
        background: linear-gradient(45deg, rgba(255,255,255,0.03), rgba(255,255,255,0.08));
        animation: float 20s infinite alternate ease-in-out;
    }
    
    .bg-circle-1 {
        width: 800px;
        height: 800px;
        top: -300px;
        left: -300px;
        animation-delay: 0s;
    }
    
    .bg-circle-2 {
        width: 600px;
        height: 600px;
        bottom: -200px;
        right: -200px;
        animation-delay: 5s;
    }
    
    @keyframes float {
        0% { transform: translate(0, 0); }
        50% { transform: translate(-20px, 20px); }
        100% { transform: translate(20px, -20px); }
    }
    
    @keyframes fadeInUp {
        0% {
            opacity: 0;
            transform: translateY(30px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    /* Side-by-Side Hero Design */
    .hero-row {
        position: relative;
        z-index: 10;
    }
    
    .text-content {
        padding: 2rem;
    }
    
    .hero-text-wrapper {
        max-width: 500px;
    }
    
    /* Clean Title Styling */
    .main-title {
        font-size: 4.2rem;
        font-weight: 700;
        margin: 0 0 2rem 0;
        line-height: 1.1;
        display: flex;
        flex-direction: column;
        gap: 0.2rem;
        text-align: left;
    }
    
    .title-main {
        color: #ffffff;
        display: block;
    }
    
    .title-highlight {
        color: #ffffff;
        display: block;
        font-weight: 800;
    }
    
    /* Clean Hero Description */
    .hero-description {
        margin: 0 0 3rem 0;
        max-width: 500px;
    }
    
    .lead-text {
        font-size: 1.3rem;
        color: rgba(255, 255, 255, 0.9);
        line-height: 1.6;
        margin: 0;
        font-weight: 400;
    }
    
    /* Clean Action Buttons */
    .action-buttons {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
        margin-top: 0;
        align-items: center;
    }
    
    .primary-btn-clean {
        display: inline-flex;
        align-items: center;
        gap: 10px;
        padding: 16px 32px;
        border-radius: 50px;
        text-decoration: none;
        font-size: 1.1rem;
        font-weight: 600;
        color: #1a2cb3;
        background: linear-gradient(135deg, #ffffff, #f8f9ff);
        box-shadow: 0 10px 30px rgba(255, 255, 255, 0.2);
        transition: all 0.3s ease;
        border: none;
    }
    
    .primary-btn-clean:hover {
        transform: translateY(-2px);
        box-shadow: 0 15px 35px rgba(255, 255, 255, 0.3);
        color: #1a2cb3;
    }
    
    .secondary-btn-clean {
        display: inline-flex;
        align-items: center;
        gap: 10px;
        padding: 16px 32px;
        border-radius: 50px;
        text-decoration: none;
        font-size: 1.1rem;
        font-weight: 600;
        color: white;
        background: transparent;
        border: 2px solid rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
    }
    
    .secondary-btn-clean:hover {
        transform: translateY(-2px);
        border-color: rgba(255, 255, 255, 0.6);
        background: rgba(255, 255, 255, 0.1);
        color: white;
        box-shadow: 0 10px 25px rgba(255, 255, 255, 0.1);
    }
    
    /* Clean Responsive Design */
    @media (max-width: 768px) {
        .main-title {
            font-size: 3.2rem;
            margin-bottom: 1.5rem;
        }
        
        .hero-description {
            margin-bottom: 2.5rem;
        }
        
        .lead-text {
            font-size: 1.2rem;
        }
        
        .action-buttons {
            flex-direction: column;
            align-items: stretch;
            gap: 1rem;
        }
        
        .primary-btn-clean, .secondary-btn-clean {
            justify-content: center;
            width: 100%;
            padding: 16px 28px;
            font-size: 1.1rem;
        }
    }
    
    @media (max-width: 480px) {
        .main-title {
            font-size: 2.8rem;
        }
        
        .lead-text {
            font-size: 1.1rem;
        }
    }
    
    /* Image Section */
    .image-content {
        padding: 2rem;
        position: relative;
    }
    
    .hero-image-container {
        position: relative;
        text-align: center;
    }
    
    .hero-main-image {
        width: 100%;
        max-width: 450px;
        height: auto;
        border-radius: 25px;
        position: relative;
        z-index: 3;
        transition: all 0.6s ease;
        box-shadow: 0 20px 60px rgba(26, 44, 179, 0.3);
        display: block;
        margin: 0 auto;
    }
    
    .hero-main-image:hover {
        transform: translateY(-5px) rotateY(5deg);
        box-shadow: 0 30px 80px rgba(26, 44, 179, 0.4);
    }
    
    /* Enhanced Floating Shapes */
    .floating-shapes {
        position: absolute;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 1;
        overflow: hidden;
    }
    
    .shape {
        position: absolute;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(2px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        animation: floatShape 15s infinite ease-in-out;
        box-shadow: 0 4px 20px rgba(26, 44, 179, 0.1);
    }
    
    .shape-1 {
        width: 100px;
        height: 100px;
        top: 15%;
        right: 8%;
        animation-delay: 0s;
        background: linear-gradient(135deg, rgba(26, 44, 179, 0.15), rgba(255, 255, 255, 0.1));
    }
    
    .shape-2 {
        width: 80px;
        height: 80px;
        top: 65%;
        right: 25%;
        animation-delay: 5s;
        background: linear-gradient(135deg, rgba(35, 60, 234, 0.12), rgba(255, 255, 255, 0.08));
    }
    
    .shape-3 {
        width: 90px;
        height: 90px;
        top: 35%;
        right: 55%;
        animation-delay: 10s;
        background: linear-gradient(135deg, rgba(51, 70, 232, 0.1), rgba(255, 255, 255, 0.05));
    }
    
    /* Image Backdrop */
    .image-backdrop {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 80%;
        height: 80%;
        background: radial-gradient(
            circle,
            rgba(35, 60, 234, 0.2) 0%,
            transparent 70%
        );
        transform: translate(-50%, -50%);
        border-radius: 50%;
        z-index: 1;
        animation: pulseBackdrop 4s ease-in-out infinite;
    }
    
    /* Clean Animations */
    @keyframes floatShape {
        0%, 100% { 
            transform: translateY(0px); 
            opacity: 0.7; 
        }
        50% { 
            transform: translateY(-20px); 
            opacity: 1; 
        }
    }
    
    @keyframes pulseBackdrop {
        0%, 100% {
            opacity: 0.3;
            transform: translate(-50%, -50%) scale(1);
        }
        50% {
            opacity: 0.5;
            transform: translate(-50%, -50%) scale(1.1);
        }
    }
    
    /* Enhanced Responsive Design */
    @media (max-width: 992px) {
        .hero-row {
            flex-direction: column-reverse;
            text-align: center;
        }
        
        .text-content, .image-content {
            padding: 1rem;
        }
        
        .hero-text-wrapper {
            max-width: 100%;
        }
        
        .hero-main-image {
            max-width: 400px;
        }
        
        .main-title {
            font-size: 3.5rem;
        }
    }
    
    /* Title and subtitle styles */
    .hero-title {
        position: relative;
        display: inline-block;
    }
    
    .hero-title .animate-word {
        margin-right: 16px;
        display: inline-block;
        opacity: 1;
        transform: scale(1);
    }
    
    .subtitle-text .animate-subtitle-word {
        display: inline-block;
        margin-right: 6px;
        opacity: 1;
        transform: scale(1);
    }
    
    /* Button styling */
    .btn-modern {
        position: relative;
        overflow: hidden;
        z-index: 1;
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) !important;
    }
    
    .btn-modern:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 30px rgba(35, 60, 234, 0.2) !important;
    }
    
    .btn-modern:after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.2);
        transform: scaleX(0);
        transform-origin: right;
        transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        z-index: -1;
    }
    
    .btn-modern:hover:after {
        transform: scaleX(1);
        transform-origin: left;
    }
    
    /* Global section styles */
    .content-section {
        position: relative;
        padding: 5rem 0;
        z-index: 1;
    }
    
    /* Section headers with team section style */
    .content-section h2,
    .team-header h2 {
        font-family: var(--header-font);
        font-size: 2.8rem;
        font-weight: 500;
        margin-bottom: 1rem;
        position: relative;
        display: inline-block;
    }
    
    .content-section h2::after,
    .team-header h2::after {
        content: "";
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 60px;
        height: 3px;
        background-color: #233cea;
        border-radius: 3px;
    }
    
    .section-subtitle,
    .team-subtitle {
        display: block;
        font-family: var(--body-font);
        font-size: 1.2rem;
        color: #666;
        margin-bottom: 3rem;
        margin-top: 0rem;
    }
    
    /* Team section styling */
    .team-section {
        padding: 5rem 0;
        background-color: var(--bg-light);
        position: relative;
        overflow: hidden;
    }
    
    .team-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1.5rem;
    }
    
    .team-header {
        text-align: center;
        margin-bottom: 3rem;
    }
    
    .team-header h2 {
        font-weight: 700;
        font-size: 2.8rem;
        margin-bottom: 1rem;
    }
    
    .team-subtitle {
        font-weight: 500;
        font-size: 1.2rem;
        color: #666;
    }
    
    .team-description {
        max-width: 800px;
        margin: 1.5rem auto 0;
        font-size: 1.1rem;
        line-height: 1.6;
        color: #555;
        font-weight: 500;
    }
    
    /* Apply team section design to other section titles */
    .section-models .text-center h2,
    .section-light .text-center h2 {
        font-family: var(--header-font);
        font-size: 2.8rem;
        font-weight: 500;
        position: relative;
        display: inline-block;
    }
    
    .section-models .text-center h2::after,
    .section-light .text-center h2::after {
        content: "";
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 60px;
        height: 3px;
        background-color: #233cea;
        border-radius: 3px;
    }
    
    /* Consistent card styling */
    .card {
        border-radius: 1rem;
        border: none;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
        transition: all 0.4s ease;
        overflow: hidden;
    }
    
    .card:hover {
        transform: translateY(-10px);
        box-shadow: 0 15px 35px rgba(35, 60, 234, 0.15);
    }
    
    .card-title {
        font-family: var(--header-font);
        font-weight: 600;
        margin-bottom: 1rem;
    }
    
    /* Process steps with enhanced styling */
    .process-step {
        text-align: center;
        padding: 2rem;
        border-radius: 1rem;
        background-color: white;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
        transition: all 0.4s ease;
        position: relative;
        z-index: 1;
    }
    
    .process-step:hover {
        transform: translateY(-10px);
        box-shadow: 0 15px 35px rgba(35, 60, 234, 0.15);
    }
    
    .process-icon {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1.5rem;
        font-size: 2rem;
        box-shadow: 0 10px 20px rgba(26, 44, 179, 0.2);
        transition: all 0.4s ease;
    }
    
    .process-step:hover .process-icon {
        transform: scale(1.1);
    }
    
    /* Consistent heading underline styles */
    .team-header h2::after,
    h2[style*="background: linear-gradient"]::after,
    .content-section.section-centered h2:not(.no-underline)::after {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 80px;
        height: 4px;
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
        border-radius: 4px;
    }
    
    /* No underline for specific elements */
    .no-underline::after {
        display: none !important;
    }
    
    /* Hide background circles for CTA section */
    .cta-section::before,
    .cta-section::after {
        display: none !important;
    }
    
    /* Modern Tech Section Styles */
    .tech-section {
        position: relative;
        overflow: hidden;
        padding: 6rem 0;
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
    }
    
    .tech-particles {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1;
        background-color: transparent;
        opacity: 0.15;
        background-image: 
            linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),
            linear-gradient(to right, rgba(255, 255, 255, 0.1) 1px, transparent 1px),
            radial-gradient(circle at 50px 50px, rgba(255, 255, 255, 0.2) 3px, transparent 3px),
            radial-gradient(circle at 150px 150px, rgba(255, 255, 255, 0.2) 2px, transparent 2px),
            radial-gradient(circle at 250px 250px, rgba(255, 255, 255, 0.2) 4px, transparent 4px),
            radial-gradient(circle at 350px 350px, rgba(255, 255, 255, 0.2) 2px, transparent 2px),
            radial-gradient(circle at 450px 450px, rgba(255, 255, 255, 0.2) 3px, transparent 3px);
        background-size: 
            40px 40px,
            40px 40px,
            400px 400px,
            400px 400px,
            400px 400px,
            400px 400px,
            400px 400px;
        background-position: 
            0 0,
            0 0,
            0 0,
            100px 100px,
            200px 200px,
            300px 300px,
            400px 400px;
    }
    
    /* Add digital circuit lines */
    .tech-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: 
            linear-gradient(90deg, transparent 98%, rgba(255, 255, 255, 0.1) 98%, transparent 100%),
            linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),
            linear-gradient(90deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px),
            linear-gradient(rgba(255, 255, 255, 0.03) 1px, transparent 1px);
        background-size: 
            50px 100%, 
            100% 50px, 
            20px 20px,
            20px 20px;
        z-index: 0;
    }
    
    /* Add floating digital particles */
    .tech-section::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: 
            radial-gradient(circle at 100px 100px, rgba(255, 255, 255, 0.3) 1px, transparent 1px),
            radial-gradient(circle at 200px 300px, rgba(255, 255, 255, 0.2) 1px, transparent 1px),
            radial-gradient(circle at 300px 200px, rgba(255, 255, 255, 0.25) 1px, transparent 1px),
            radial-gradient(circle at 400px 400px, rgba(255, 255, 255, 0.3) 1px, transparent 1px),
            radial-gradient(circle at 500px 100px, rgba(255, 255, 255, 0.2) 1px, transparent 1px);
        background-size: 600px 600px;
        animation: floatingParticles 30s infinite linear;
        z-index: 0;
    }
    
    @keyframes floatingParticles {
        0% {
            background-position: 0% 0%;
        }
        100% {
            background-position: 100% 100%;
        }
    }
    
    .tech-title {
        font-size: 3rem;
        font-weight: 700;
        color: white;
        margin-bottom: 1.2rem;
        position: relative;
        display: inline-block;
    }
    
    .tech-subtitle {
        font-size: 1.2rem;
        color: rgba(255, 255, 255, 0.8);
        max-width: 800px;
        margin: 0 auto;
        line-height: 1.6;
    }
    
    .tech-cards-container {
        position: relative;
        z-index: 10;
    }
    
    .tech-card {
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(10px);
        border-radius: 16px;
        padding: 30px;
        height: 100%;
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        border: 1px solid rgba(255, 255, 255, 0.1);
        position: relative;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1), 
                    inset 0 0 20px rgba(255, 255, 255, 0.05);
    }
    
    .tech-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0) 100%);
        z-index: 0;
    }
    
    .tech-card:hover {
        transform: translateY(-15px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2),
                    inset 0 0 30px rgba(255, 255, 255, 0.1),
                    0 0 15px rgba(35, 60, 234, 0.3);
        border-color: rgba(255, 255, 255, 0.3);
    }
    
    .tech-icon-wrapper {
        width: 70px;
        height: 70px;
        border-radius: 50%;
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.05));
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 20px;
        position: relative;
        z-index: 5;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1), 
                    inset 0 0 10px rgba(255, 255, 255, 0.1),
                    0 0 15px rgba(255, 255, 255, 0.2);
        animation: pulse-glow 3s infinite alternate;
    }
    
    @keyframes pulse-glow {
        0% {
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1), 
                       inset 0 0 10px rgba(255, 255, 255, 0.1),
                       0 0 10px rgba(255, 255, 255, 0.2);
        }
        100% {
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1), 
                       inset 0 0 10px rgba(255, 255, 255, 0.1),
                       0 0 20px rgba(255, 255, 255, 0.4);
        }
    }
    
    .tech-icon {
        font-size: 1.8rem;
        color: white;
        text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
    }
    
    .tech-card-content {
        flex-grow: 1;
        position: relative;
        z-index: 5;
    }
    
    .tech-card-title {
        font-size: 1.5rem;
        color: white;
        font-weight: 700;
        margin-bottom: 15px;
        font-family: var(--header-font);
    }
    
    .tech-card-text {
        color: rgba(255, 255, 255, 0.8);
        font-size: 1rem;
        line-height: 1.6;
        margin-bottom: 20px;
    }
    
    .tech-stats {
        margin-top: auto;
        background: rgba(0, 0, 0, 0.2);
        padding: 15px;
        border-radius: 12px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        position: relative;
        overflow: hidden;
    }
    
    .tech-stats::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(
            to right,
            rgba(255, 255, 255, 0) 0%,
            rgba(255, 255, 255, 0.05) 50%,
            rgba(255, 255, 255, 0) 100%
        );
        transform: rotate(30deg);
        animation: scanning 4s infinite linear;
        z-index: 1;
    }
    
    @keyframes scanning {
        0% {
            transform: rotate(30deg) translateX(-100%);
        }
        100% {
            transform: rotate(30deg) translateX(100%);
        }
    }
    
    .stat-value {
        font-size: 1.8rem;
        font-weight: 700;
        color: white;
        position: relative;
        z-index: 2;
        text-shadow: 0 0 15px rgba(255, 255, 255, 0.5);
        font-family: 'Poppins', sans-serif;
    }
    
    .tech-cta {
        margin-top: 20px;
    }
    
    .tech-btn {
        display: inline-flex;
        align-items: center;
        background: white;
        color: #233cea;
        font-weight: 700;
        padding: 14px 30px;
        border-radius: 50px;
        text-decoration: none;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }
    
    .tech-btn::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.3) 50%, rgba(255, 255, 255, 0) 100%);
        transform: translateX(-100%);
        transition: transform 0.6s ease;
    }
    
    .tech-btn:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
        color: #233cea;
    }
    
    .tech-btn:hover::before {
        transform: translateX(100%);
    }
    
    .tech-btn i {
        transition: transform 0.3s ease;
    }
    
    .tech-btn:hover i {
        transform: translateX(5px);
    }
    
    /* Add shimmer effect for tech cards */
    @keyframes shimmer {
        0% { background-position: -1000px 0; }
        100% { background-position: 1000px 0; }
    }
    
    .tech-card::after {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(
            to right,
            rgba(255, 255, 255, 0) 0%,
            rgba(255, 255, 255, 0.1) 50%,
            rgba(255, 255, 255, 0) 100%
        );
        transform: rotate(30deg);
        animation: shimmer 10s infinite linear;
        z-index: 1;
        pointer-events: none;
    }
    
    /* Responsive design for tech section */
    @media (max-width: 992px) {
        .tech-title {
            font-size: 2.5rem;
        }
        
        .tech-subtitle {
            font-size: 1.1rem;
        }
        
        .tech-card {
            margin-bottom: 30px;
        }
    }
    
    @media (max-width: 576px) {
        .tech-title {
            font-size: 2rem;
        }
        
        .tech-card-title {
            font-size: 1.3rem;
        }
        
        .stat-value {
            font-size: 1.5rem;
        }
    }
    
    /* Attention-Grabbing 3D Model Cards */
    .model-card-3d {
        position: relative;
        background-color: white;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 10px 40px rgba(35, 60, 234, 0.08);
        transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        margin-bottom: 30px;
        height: 100%;
        transform-style: preserve-3d;
        perspective: 1000px;
        transform: translateZ(0);
        border: 1px solid rgba(35, 60, 234, 0.1);
    }
    
    .model-card-3d:hover {
        transform: translateY(-15px) rotateX(5deg);
        box-shadow: 0 30px 60px rgba(35, 60, 234, 0.2);
        z-index: 10;
    }
    
    .model-card-inner {
        display: flex;
        padding: 20px;
        position: relative;
        z-index: 3;
        transition: transform 0.3s ease-out;
        background: rgba(255, 255, 255, 0.8);
        backdrop-filter: blur(5px);
        height: 100%;
    }
    
    .model-card-badge {
        display: inline-block;
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
        color: white;
        font-weight: 700;
        font-size: 0.85rem;
        padding: 6px 14px;
        border-radius: 30px;
        margin-bottom: 15px;
        box-shadow: 0 5px 15px rgba(35, 60, 234, 0.2);
        transition: all 0.3s ease;
    }
    
    .model-card-3d:hover .model-card-badge {
        transform: translateY(-3px);
        box-shadow: 0 8px 20px rgba(35, 60, 234, 0.3);
    }
    
    .model-card-shine {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
            135deg,
            rgba(255, 255, 255, 0) 0%,
            rgba(255, 255, 255, 0.1) 15%,
            rgba(255, 255, 255, 0.4) 30%,
            rgba(255, 255, 255, 0.4) 40%,
            rgba(255, 255, 255, 0.1) 60%,
            rgba(255, 255, 255, 0) 100%
        );
        z-index: 2;
        transform: translateX(-100%);
        transition: transform 0.7s cubic-bezier(0.645, 0.045, 0.355, 1);
    }
    
    .model-card-3d:hover .model-card-shine {
        transform: translateX(100%);
    }
    
    .model-card-icon {
        width: 90px;
        height: 90px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
        color: white;
        font-size: 2.2rem;
        border-radius: 50%;
        margin-right: 25px;
        box-shadow: 0 15px 30px rgba(35, 60, 234, 0.3);
        transition: all 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55);
        position: relative;
        animation: pulse-icon 3s infinite alternate;
        flex-shrink: 0;
    }
    
    @keyframes pulse-icon {
        0% { box-shadow: 0 15px 30px rgba(35, 60, 234, 0.3); }
        100% { box-shadow: 0 20px 40px rgba(35, 60, 234, 0.5), 0 0 0 10px rgba(35, 60, 234, 0.1); }
    }
    
    .model-card-3d:hover .model-card-icon {
        transform: scale(1.15) rotate(10deg);
        animation-play-state: paused;
    }
    
    .model-card-content {
        flex-grow: 1;
        position: relative;
        z-index: 3;
    }
    
    .model-card-title {
        font-size: 1.6rem;
        font-weight: 800;
        color: #111;
        margin-bottom: 15px;
        font-family: var(--header-font);
        background: linear-gradient(135deg, #111111, #333333);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        transition: all 0.3s ease;
    }
    
    .model-card-3d:hover .model-card-title {
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        transform: translateX(5px);
    }
    
    .model-card-description {
        color: #444;
        font-size: 1.05rem;
        line-height: 1.6;
        margin-bottom: 20px;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .model-card-3d:hover .model-card-description {
        color: #222;
    }
    
    .model-card-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-bottom: 25px;
    }
    
    .model-tag {
        padding: 6px 14px;
        background-color: rgba(35, 60, 234, 0.08);
        color: #233cea;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 3px 10px rgba(35, 60, 234, 0.05);
    }
    
    .model-card-3d:hover .model-tag {
        background-color: rgba(35, 60, 234, 0.15);
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(35, 60, 234, 0.1);
    }
    
    .model-card-action {
        margin-top: auto;
    }
    
    .model-card-btn {
        display: inline-flex;
        align-items: center;
        text-decoration: none;
        transition: all 0.3s ease;
        position: relative;
        padding: 12px 24px;
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
        color: white;
        font-weight: 700;
        border-radius: 50px;
        overflow: hidden;
        box-shadow: 0 8px 20px rgba(35, 60, 234, 0.2);
    }
    
    .model-card-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.3) 50%, rgba(255, 255, 255, 0) 100%);
        transform: translateX(-100%);
        transition: transform 0.6s ease;
    }
    
    .model-card-btn:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 25px rgba(35, 60, 234, 0.3);
        color: white;
    }
    
    .model-card-btn:hover::before {
        transform: translateX(100%);
    }
    
    .btn-text {
        margin-right: 10px;
        position: relative;
        z-index: 2;
    }
    
    .btn-icon {
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        z-index: 2;
        transition: transform 0.3s ease;
    }
    
    .model-card-btn:hover .btn-icon {
        transform: translateX(5px);
    }
    
    /* Before/After card effects for depth */
    .model-card-3d::before,
    .model-card-3d::after {
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        border-radius: 20px;
        pointer-events: none;
    }
    
    .model-card-3d::before {
        top: 5px;
        left: 0;
        background: rgba(35, 60, 234, 0.03);
        z-index: 0;
        transform: scale(0.98);
        transition: all 0.3s ease;
    }
    
    .model-card-3d::after {
        top: 15px;
        left: 0;
        background: rgba(35, 60, 234, 0.02);
        z-index: -1;
        transform: scale(0.96);
        transition: all 0.3s ease;
    }
    
    .model-card-3d:hover::before {
        transform: scale(1.02) translateY(-5px);
        opacity: 0.1;
    }
    
    .model-card-3d:hover::after {
        transform: scale(1.04) translateY(-10px);
        opacity: 0.05;
    }
    
    /* Responsive adjustments */
    @media (max-width: 992px) {
        .model-card-3d {
            margin-bottom: 20px;
        }
        
        .model-card-icon {
            width: 70px;
            height: 70px;
            font-size: 1.8rem;
            margin-right: 15px;
        }
        
        .model-card-title {
            font-size: 1.4rem;
        }
        
        .model-card-description {
            font-size: 0.95rem;
        }
    }
    
    @media (max-width: 576px) {
        .model-card-inner {
            flex-direction: column;
            text-align: center;
        }
        
        .model-card-icon {
            margin: 0 auto 20px;
        }
        
        .model-card-tags {
            justify-content: center;
        }
        
        .model-card-action {
            display: flex;
            justify-content: center;
        }
    }

    /* Back to Top Button */
    .back-to-top {
        position: fixed;
        bottom: 30px;
        right: 30px;
        z-index: 99;
        visibility: hidden;
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }
    
    .back-to-top.visible {
        visibility: visible;
        opacity: 1;
        transform: translateY(0);
    }
    
    .back-to-top button {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
        color: white;
        border: none;
        box-shadow: 0 5px 15px rgba(35, 60, 234, 0.3);
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        transition: all 0.3s ease;
    }
    
    .back-to-top button:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(35, 60, 234, 0.4);
    }
    
    .back-to-top button i {
        transition: transform 0.2s ease;
    }
    
    .back-to-top button:hover i {
        transform: translateY(-3px);
    }


</style>

<style>
    /* Modern Analytics Section */
    .stats-section {
        background: linear-gradient(135deg, #f8f9ff, #e8ecff);
        position: relative;
        overflow: hidden;
    }
    
    .stats-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: 
            radial-gradient(circle at 20% 20%, rgba(35, 60, 234, 0.03) 0%, transparent 50%),
            radial-gradient(circle at 80% 80%, rgba(35, 60, 234, 0.03) 0%, transparent 50%);
        pointer-events: none;
        z-index: 1;
    }
    
    .stats-section .content-container {
        position: relative;
        z-index: 2;
    }
    
    .analytics-title {
        font-size: 2rem;
        font-weight: 700;
        color: #1a2cb3;
        margin-bottom: 3rem;
        letter-spacing: -0.5px;
    }
    
    .analytics-bar {
        display: flex;
        align-items: center;
        justify-content: space-around;
        background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
        border-radius: 16px;
        padding: 2rem;
        margin-bottom: 3rem;
        border: 1px solid rgba(255, 255, 255, 0.1);
        box-shadow: 0 15px 30px rgba(35, 60, 234, 0.15);
    }
    
    .analytics-item {
        text-align: center;
        padding: 0 1rem;
    }
    
    .analytics-value {
        font-size: 3.2rem;
        font-weight: 700;
        color: white;
        line-height: 1;
        margin-bottom: 0.5rem;
    }
    
    .analytics-value span {
        font-size: 1.8rem;
        font-weight: 500;
        opacity: 0.8;
        margin-left: 2px;
    }
    
    .analytics-label {
        font-size: 0.85rem;
        color: rgba(255, 255, 255, 0.7);
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 1px;
        line-height: 1.3;
    }
    
    .analytics-divider {
        width: 1px;
        height: 60px;
        background: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0));
    }
    
    @media (max-width: 992px) {
        .analytics-bar {
            flex-direction: column;
            padding: 2rem 1rem;
        }
        
        .analytics-item {
            width: 100%;
            padding: 1.5rem 0;
        }
        
        .analytics-divider {
            width: 50%;
            height: 1px;
            background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0));
        }
    }
</style>

<style>
    /* Advanced Team Carousel Styles */
    .team-carousel-container {
        position: relative;
        max-width: 1400px;
        margin: 0 auto;
        padding: 40px 200px 80px;
        overflow: visible;
        min-height: 520px;
    }
    
    .team-carousel-track {
        display: flex;
        justify-content: center;
        transition: transform 0.8s cubic-bezier(0.45, 0.05, 0.55, 0.95);
        transform-style: preserve-3d;
        perspective: 1000px;
        min-height: 450px;
        position: relative;
        width: 100%;
        align-items: center;
    }
    
    .team-card {
        position: absolute;
        width: 280px;
        background-color: white;
        border-radius: 20px;
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1);
        opacity: 0;
        transform: translateX(1000px) scale(0.5);
        pointer-events: none;
        backface-visibility: hidden;
        left: 50%;
        margin-left: -140px;
    }
    
    .team-card[data-position="active"] {
        transform: translateX(0) scale(1.05) translateY(-10px);
        opacity: 1;
        z-index: 100;
        pointer-events: auto;
        box-shadow: 0 25px 50px rgba(35, 60, 234, 0.25);
    }
    
    .team-card[data-position="prev"] {
        transform: translateX(-250px) scale(0.9) rotateY(8deg);
        opacity: 0.85;
        z-index: 50;
        pointer-events: auto;
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
    }
    
    .team-card[data-position="next"] {
        transform: translateX(250px) scale(0.9) rotateY(-8deg);
        opacity: 0.85;
        z-index: 50;
        pointer-events: auto;
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
    }
    
    .team-card[data-position="far-prev"] {
        transform: translateX(-450px) scale(0.75) rotateY(12deg);
        opacity: 0.5;
        z-index: 25;
        pointer-events: none;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }
    
    .team-card[data-position="far-next"] {
        transform: translateX(450px) scale(0.75) rotateY(-12deg);
        opacity: 0.5;
        z-index: 25;
        pointer-events: none;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }
    
    .team-card[data-position="hidden"] {
        transform: translateX(600px) scale(0.6);
        opacity: 0;
        z-index: 1;
        pointer-events: none;
    }

    /* إضافة حالات انتقالية للحركة السلسة */
    .team-card.transitioning {
        z-index: 75 !important;
        transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .team-img-container {
        height: 240px;
        display: flex;
        align-items: flex-end;
        justify-content: center;
        background: linear-gradient(135deg, #f8faff, #e8f1ff);
        position: relative;
        overflow: hidden;
        padding-bottom: 30px;
        /* تحسين عرض الصور داخل الكونتينر بدون نويز */
        transform: translateZ(0);
        will-change: transform;
    }
    
    .team-img-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(45deg, rgba(35, 60, 234, 0.1), transparent);
        z-index: 1;
    }
    
    .team-member-photo {
        width: 170px;
        height: 170px;
        border-radius: 50%;
        object-fit: cover;
        object-position: center top;
        border: 4px solid white;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        transition: all 0.4s ease-out;
        position: relative;
        z-index: 2;
        /* تحسين جودة الصورة وإزالة النويز بشكل أفضل */
        image-rendering: crisp-edges;
        image-rendering: -webkit-optimize-contrast;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        /* منع التشويش أثناء التحويلات */
        transform: translate3d(0, 0, 0);
        -webkit-transform: translate3d(0, 0, 0);
        /* تنعيم وتحسين الألوان */
        filter: contrast(1.01) saturate(1.02);
        -webkit-filter: contrast(1.01) saturate(1.02);
    }
    
    .team-card:hover .team-member-photo {
        transform: scale(1.06) translate3d(0, 0, 0);
        -webkit-transform: scale(1.06) translate3d(0, 0, 0);
        box-shadow: 0 15px 40px rgba(35, 60, 234, 0.3);
        /* منع التشويش أثناء الـ hover مع تحسين أفضل */
        image-rendering: crisp-edges;
        image-rendering: -webkit-optimize-contrast;
        filter: contrast(1.02) saturate(1.03);
        -webkit-filter: contrast(1.02) saturate(1.03);
    }
    
    .team-info {
        padding: 2rem 1.5rem;
        text-align: center;
        background: white;
        position: relative;
    }
    
    .team-info h3 {
        font-size: 1.5rem;
        font-weight: 700;
        color: #333;
        margin-bottom: 0.5rem;
        background: linear-gradient(135deg, #1a2cb3, #233cea);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
    }
    
    .team-role {
        color: #666;
        font-size: 1rem;
        font-weight: 600;
        margin-bottom: 1rem;
        text-transform: uppercase;
        letter-spacing: 1px;
        display: block;
    }
    
    .team-description {
        font-size: 0.9rem;
        line-height: 1.6;
        color: #777;
        margin-bottom: 0;
        max-width: 250px;
        margin: 0 auto;
    }
    
    .team-social {
        position: absolute;
        top: 20px;
        right: 20px;
        display: flex;
        flex-direction: column;
        opacity: 0;
        transform: translateX(30px);
        transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1);
        z-index: 5;
    }
    
    .team-card:hover .team-social {
        opacity: 1;
        transform: translateX(0);
    }
    
    .team-social-icon {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.95);
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 8px;
        color: #0077b5;
        text-decoration: none;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
    }
    
    .team-social-icon:hover {
        transform: translateY(-3px) scale(1.1);
        box-shadow: 0 8px 25px rgba(0, 119, 181, 0.3);
        background: #0077b5;
        color: white;
    }
    
    .team-role-badge {
        position: absolute;
        top: 15px;
        left: 15px;
        background: linear-gradient(135deg, #1a2cb3, #233cea);
        color: white;
        padding: 8px 16px;
        border-radius: 25px;
        font-size: 0.8rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 1px;
        box-shadow: 0 5px 15px rgba(26, 44, 179, 0.4);
        z-index: 10;
        animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }
    
    /* Enhanced Carousel Controls */
    .team-carousel-controls {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-top: 60px;
        gap: 30px;
    }
    
    .team-nav-btn {
        width: 55px;
        height: 55px;
        border-radius: 50%;
        border: none;
        background: linear-gradient(135deg, #1a2cb3, #233cea);
        color: white;
        font-size: 1.3rem;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
        box-shadow: 0 8px 25px rgba(35, 60, 234, 0.25);
        position: relative;
        overflow: hidden;
    }
    
    .team-nav-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
        transition: left 0.5s ease;
    }
    
    .team-nav-btn:hover::before {
        left: 100%;
    }
    
    .team-nav-btn:hover {
        transform: translateY(-5px) scale(1.1);
        box-shadow: 0 15px 35px rgba(35, 60, 234, 0.4);
    }
    
    .team-nav-btn:active {
        transform: translateY(-2px) scale(1.05);
    }
    
    .team-indicators {
        display: flex;
        gap: 12px;
        margin: 0 25px;
    }
    
    .team-indicator {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: #d1d5db;
        cursor: pointer;
        transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
        position: relative;
    }
    
    .team-indicator.active {
        width: 32px;
        border-radius: 6px;
        background: linear-gradient(135deg, #1a2cb3, #233cea);
        box-shadow: 0 4px 12px rgba(35, 60, 234, 0.4);
    }
    
    .team-indicator:hover:not(.active) {
        background: #9ca3af;
        transform: scale(1.2);
    }
    
    /* Responsive Design */
    @media (max-width: 1400px) {
        .team-carousel-container {
            max-width: 1200px;
            padding: 40px 150px 70px;
        }
        
        .team-carousel-controls {
            margin-top: 50px;
        }
        
        .team-card[data-position="prev"] {
            transform: translateX(-200px) scale(0.9) rotateY(8deg);
        }
        
        .team-card[data-position="next"] {
            transform: translateX(200px) scale(0.9) rotateY(-8deg);
        }
        
        .team-card[data-position="far-prev"] {
            transform: translateX(-350px) scale(0.75) rotateY(12deg);
            opacity: 0.4;
        }
        
        .team-card[data-position="far-next"] {
            transform: translateX(350px) scale(0.75) rotateY(-12deg);
            opacity: 0.4;
        }
    }
    
    @media (max-width: 1200px) {
        .team-carousel-container {
            padding: 40px 100px 60px;
        }
        
        .team-carousel-controls {
            margin-top: 45px;
        }
        
        .team-card[data-position="prev"] {
            transform: translateX(-180px) scale(0.85) rotateY(6deg);
        }
        
        .team-card[data-position="next"] {
            transform: translateX(180px) scale(0.85) rotateY(-6deg);
        }
        
        .team-card[data-position="far-prev"] {
            transform: translateX(-300px) scale(0.7) rotateY(10deg);
            opacity: 0.3;
        }
        
        .team-card[data-position="far-next"] {
            transform: translateX(300px) scale(0.7) rotateY(-10deg);
            opacity: 0.3;
        }
    }
    
    @media (max-width: 768px) {
        .team-carousel-container {
            padding: 20px 50px 50px;
            min-height: 400px;
            max-width: 100%;
        }
        
        .team-carousel-controls {
            margin-top: 35px;
        }
        
        .team-card {
            width: 260px;
        }
        
        .team-card[data-position="prev"] {
            transform: translateX(-150px) scale(0.8) rotateY(4deg);
            opacity: 0.6;
        }
        
        .team-card[data-position="next"] {
            transform: translateX(150px) scale(0.8) rotateY(-4deg);
            opacity: 0.6;
        }
        
        .team-card[data-position="far-prev"],
        .team-card[data-position="far-next"] {
            opacity: 0;
            pointer-events: none;
            transform: translateX(-9999px);
        }
        
        .team-img-container {
            height: 180px;
            padding-bottom: 15px;
        }
        
        .team-member-photo {
            width: 130px;
            height: 130px;
            /* تحسين إضافي للأجهزة الصغيرة لمنع النويز */
            image-rendering: auto;
            -webkit-image-rendering: -webkit-optimize-contrast;
        }
        
        .team-info {
            padding: 1.5rem 1rem;
        }
        
        .team-nav-btn {
            width: 45px;
            height: 45px;
            font-size: 1.1rem;
        }
        
        .team-indicators {
            margin: 0 15px;
        }
    }
    
    @media (max-width: 480px) {
        .team-carousel-container {
            padding: 20px 20px 40px;
        }
        
        .team-card[data-position="prev"],
        .team-card[data-position="next"] {
            opacity: 0;
            pointer-events: none;
        }
        
        .team-card[data-position="active"] {
            transform: translateX(0) scale(0.95) translateY(0);
        }
        
        .team-card {
            width: 240px;
        }
        
        .team-carousel-controls {
            gap: 15px;
            margin-top: 30px;
        }
        
        .team-indicators {
            gap: 8px;
        }
        
        .team-nav-btn {
            width: 40px;
            height: 40px;
            font-size: 1rem;
        }
        
        /* Add swipe hint for mobile */
        .team-carousel-container::after {
            content: "← swipe →";
            position: absolute;
            bottom: 10px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 0.8rem;
            color: #999;
            opacity: 0.7;
        }
    }

    /* تحسينات إضافية لمنع النويز والتشويش في الصور */
    .team-member-photo {
        /* تحسين عرض الصور بدقة عالية */
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        /* منع الحدود المنطقة وتحسين الحواف */
        -webkit-border-radius: 50%;
        -moz-border-radius: 50%;
        /* ضمان أفضل جودة للصور */
        image-orientation: from-image;
        /* تحسين التحويلات ثلاثية الأبعاد */
        -webkit-perspective: 1000px;
        perspective: 1000px;
        /* منع التشويش في المتصفحات المختلفة */
        -ms-interpolation-mode: bicubic;
        /* تحسين الألوان والحدة */
        -webkit-filter-backdrop: blur(0);
    }

    /* تحسين خاص للمتصفحات الحديثة */
    @supports (image-rendering: pixelated) {
        .team-member-photo {
            image-rendering: auto;
        }
    }

    /* تحسين للدقة العالية (Retina displays) */
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .team-member-photo {
            image-rendering: -webkit-optimize-contrast;
            filter: none;
            -webkit-filter: none;
        }
    }
</style>
{% endblock %}
</file>

<file path="templates/information.html">
{% extends "layout.html" %}

{% block title %}Explore Our AI Models - MedXpert{% endblock %}

{% block content %}
<style>
.info-hero {
    background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
    color: white;
    padding: 120px 0 100px;
    margin-top: 0;
    text-align: center;
}

.info-hero h1 {
    font-size: 3.5rem;
    font-weight: 800;
    margin-bottom: 1.5rem;
}

.info-hero p {
    font-size: 1.4rem;
    opacity: 0.9;
    max-width: 800px;
    margin: 0 auto;
    line-height: 1.6;
}

.models-section {
    padding: 100px 0;
    background: #f8f9fa;
}

.section-header {
    text-align: center;
    margin-bottom: 80px;
}

.section-header h2 {
    font-size: 2.8rem;
    font-weight: 700;
    color: #1a2cb3;
    margin-bottom: 1rem;
}

.model-detail-card {
    background: white;
    border-radius: 24px;
    margin-bottom: 60px;
    overflow: hidden;
    box-shadow: 0 20px 60px rgba(26, 44, 179, 0.08);
    transition: all 0.4s ease;
}

.model-header {
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    color: white;
    padding: 40px;
    position: relative;
}

.model-header-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.model-icon-large {
    width: 80px;
    height: 80px;
    background: rgba(255, 255, 255, 0.15);
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2.5rem;
    color: white;
    margin-bottom: 20px;
}

.model-title {
    font-size: 2.2rem;
    font-weight: 700;
    margin-bottom: 10px;
}

.model-subtitle {
    font-size: 1.1rem;
    opacity: 0.9;
    margin-bottom: 20px;
}

.model-stats {
    display: flex;
    gap: 30px;
    flex-wrap: wrap;
}

.stat-item {
    background: rgba(255, 255, 255, 0.1);
    padding: 12px 20px;
    border-radius: 15px;
    backdrop-filter: blur(10px);
}

.stat-value {
    font-size: 1.4rem;
    font-weight: 700;
}

.try-now-btn {
    background: rgba(255, 255, 255, 0.15);
    color: white;
    border: 2px solid rgba(255, 255, 255, 0.3);
    padding: 12px 30px;
    border-radius: 25px;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    gap: 10px;
}

.try-now-btn:hover {
    background: rgba(255, 255, 255, 0.25);
    color: white;
    text-decoration: none;
}

.model-content {
    padding: 50px;
}

.content-tabs {
    display: flex;
    border-bottom: 2px solid #e9ecef;
    margin-bottom: 40px;
    gap: 40px;
}

.tab-btn {
    background: none;
    border: none;
    padding: 15px 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: #666;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
}

.tab-btn.active {
    color: #1a2cb3;
}

.tab-btn.active::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 100%;
    height: 3px;
    background: linear-gradient(135deg, #1a2cb3, #233cea);
}

.tab-content {
    display: none;
}

.tab-content.active {
    display: block;
    animation: fadeIn 0.5s ease;
}

.feature-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 30px;
    margin-bottom: 40px;
}

.feature-item {
    background: #f8f9fa;
    padding: 30px;
    border-radius: 16px;
    border-left: 4px solid #1a2cb3;
}

.feature-item h4 {
    color: #1a2cb3;
    font-weight: 600;
    margin-bottom: 15px;
    display: flex;
    align-items: center;
    gap: 10px;
}

.example-showcase {
    background: #f8f9fa;
    border-radius: 20px;
    padding: 40px;
    margin-top: 30px;
}

.example-title {
    text-align: center;
    font-size: 1.5rem;
    font-weight: 600;
    color: #1a2cb3;
    margin-bottom: 30px;
}

.before-after-container {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    gap: 40px;
    max-width: 1200px;
    margin: 0 auto;
    align-items: center;
}

.image-container {
    text-align: center;
    background: white;
    padding: 35px;
    border-radius: 20px;
    box-shadow: 0 15px 45px rgba(0,0,0,0.08);
    transition: all 0.3s ease;
}

.image-container:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 60px rgba(0,0,0,0.12);
}

.image-label {
    font-weight: 700;
    color: #1a2cb3;
    margin-bottom: 20px;
    font-size: 1.3rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.sample-image {
    width: 100%;
    height: 450px;
    background: linear-gradient(135deg, #e3f2fd, #bbdefb);
    border-radius: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #1a2cb3;
    font-weight: 600;
    margin-bottom: 20px;
    border: 3px solid rgba(26, 44, 179, 0.15);
    font-size: 1.2rem;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1);
}

.sample-image:hover {
    transform: scale(1.02);
    box-shadow: 0 12px 35px rgba(26, 44, 179, 0.2);
}

.arrow-icon {
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    color: white;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
}

/* Model Navigation Styles */
.model-navigation {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 30px;
    margin-bottom: 50px;
    padding: 30px;
    background: white;
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
}

.nav-btn {
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    color: white;
    border: none;
    padding: 12px 20px;
    border-radius: 25px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-weight: 600;
    font-size: 1rem;
    min-width: 50px;
}

.nav-btn:hover {
    background: linear-gradient(135deg, #233cea, #3346e8);
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(26, 44, 179, 0.3);
}

.nav-btn:disabled {
    background: #ccc;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

.model-indicator {
    display: flex;
    gap: 15px;
    align-items: center;
}

.indicator-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: #ddd;
    cursor: pointer;
    transition: all 0.3s ease;
}

.indicator-dot.active {
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    transform: scale(1.3);
}

.model-info-nav {
    text-align: center;
    color: #1a2cb3;
    font-weight: 600;
    font-size: 1.1rem;
}

.model-detail-card {
    display: none;
}

.model-detail-card.active {
    display: block;
    animation: fadeInUp 0.5s ease;
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.technical-specs {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
    margin-top: 30px;
}

.spec-item {
    background: white;
    padding: 20px;
    border-radius: 12px;
    border: 1px solid #e9ecef;
}

.spec-label {
    font-weight: 600;
    color: #1a2cb3;
    margin-bottom: 8px;
}

@media (max-width: 768px) {
    .model-header-content {
        flex-direction: column;
        text-align: center;
        gap: 30px;
    }
    
    .before-after-container {
        grid-template-columns: 1fr;
        gap: 30px;
        max-width: 90%;
    }
    
    .arrow-icon {
        transform: rotate(90deg);
    }
    
    .sample-image {
        aspect-ratio: 1/1;
        font-size: 1.1rem;
    }
    
    .image-container {
        padding: 25px;
    }
    
    .image-label {
        font-size: 1.2rem;
    }
}

@media (max-width: 480px) {
    .sample-image {
        aspect-ratio: 1/1;
        font-size: 1rem;
    }
    
    .image-container {
        padding: 20px;
    }
    
    .before-after-container {
        gap: 20px;
    }
    
    .model-navigation {
        padding: 20px;
        gap: 15px;
    }
    
    .model-info-nav {
        font-size: 0.9rem;
    }
    
    .nav-btn {
        padding: 10px 15px;
        min-width: 40px;
    }
}
</style>

<!-- Hero Section -->
<section class="info-hero">
    <div class="container">
        <h1>Our AI Medical Models</h1>
        <p>Explore our advanced artificial intelligence models designed to assist healthcare professionals with accurate medical image analysis.</p>
    </div>
</section>

<!-- Models Section -->
<section class="models-section">
    <div class="container">
        <div class="section-header">
            <h2>Advanced Medical AI Technology</h2>
            <p>Discover the detailed capabilities and real-world applications of our medical imaging models.</p>
        </div>

        <!-- Model Navigation -->
        <div class="model-navigation">
            <button class="nav-btn" onclick="previousModel()" id="prevBtn">
                <i class="fas fa-chevron-left"></i>
            </button>
            
            <div class="model-indicator">
                <span class="indicator-dot active" onclick="showModel(0)"></span>
                <span class="indicator-dot" onclick="showModel(1)"></span>
                <span class="indicator-dot" onclick="showModel(2)"></span>
                <span class="indicator-dot" onclick="showModel(3)"></span>
            </div>
            
            <div class="model-info-nav">
                <span id="currentModelInfo">Brain Tumor Detection (1 of 4)</span>
            </div>
            
            <button class="nav-btn" onclick="nextModel()" id="nextBtn">
                <i class="fas fa-chevron-right"></i>
            </button>
        </div>

        <!-- Brain MRI Model -->
        <div class="model-detail-card active" data-model="0">
            <div class="model-header">
                <div class="model-header-content">
                    <div class="model-info">
                        <div class="model-icon-large">
                            <i class="fas fa-brain"></i>
                        </div>
                        <h3 class="model-title">Brain Tumor Detection</h3>
                        <p class="model-subtitle">Advanced MRI analysis for tumor segmentation</p>
                        <div class="model-stats">
                            <div class="stat-item">
                                <div class="stat-label">Dice Score</div>
                                <div class="stat-value">0.73</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-label">Architecture</div>
                                <div class="stat-value">U-Net</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-label">Input Type</div>
                                <div class="stat-value">MRI DICOM</div>
                            </div>
                        </div>
                    </div>
                    <div class="model-cta">
                        <a href="{{ url_for('brain') }}" class="try-now-btn">
                            <i class="fas fa-play"></i>
                            <span>Try Model</span>
                        </a>
                    </div>
                </div>
            </div>
            
            <div class="model-content">
                <div id="brain-example" class="tab-content active">
                    <div class="example-showcase">
                        <h4 class="example-title">Clinical Case Example</h4>
                        <div class="before-after-container">
                            <div class="image-container">
                                <div class="image-label">Original MRI Scan</div>
                                <img src="{{ url_for('static', filename='images/brain.png') }}" alt="Brain MRI Original" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                                <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">Original brain MRI showing suspected tumor region</div>
                            </div>
                            
                            <div class="arrow-icon">
                                <i class="fas fa-arrow-right"></i>
                            </div>
                            
                            <div class="image-container">
                                <div class="image-label">AI Analysis Result</div>
                                <img src="{{ url_for('static', filename='images/result_brain.png') }}" alt="Brain MRI with Tumor Detection" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                                <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">AI-highlighted tumor boundaries with confidence metrics</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Chest X-ray Model -->
        <div class="model-detail-card" data-model="1">
            <div class="model-header">
                <div class="model-header-content">
                    <div class="model-info">
                        <div class="model-icon-large">
                            <i class="fas fa-lungs"></i>
                        </div>
                        <h3 class="model-title">Chest X-ray Analysis</h3>
                        <p class="model-subtitle">Multi-class classification for lung pathology detection</p>
                        <div class="model-stats">
                            <div class="stat-item">
                                <div class="stat-label">Accuracy</div>
                                <div class="stat-value">95%</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-label">Architecture</div>
                                <div class="stat-value">CNN</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-label">Classes</div>
                                <div class="stat-value">14 Conditions</div>
                            </div>
                        </div>
                    </div>
                    <div class="model-cta">
                        <a href="{{ url_for('chest') }}" class="try-now-btn">
                            <i class="fas fa-play"></i>
                            <span>Try Model</span>
                        </a>
                    </div>
                </div>
            </div>
            
            <div class="model-content">
                <div id="chest-example" class="tab-content active">
                    <div class="example-showcase">
                        <h4 class="example-title">COVID-19 Detection Example</h4>
                        <div class="before-after-container">
                            <div class="image-container">
                                <div class="image-label">Chest X-ray</div>
                                <img src="{{ url_for('static', filename='images/COVID.png') }}" alt="Chest X-ray Original" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                                <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">Standard chest radiograph showing possible lung opacity</div>
                            </div>
                            
                            <div class="arrow-icon">
                                <i class="fas fa-arrow-right"></i>
                            </div>
                            
                            <div class="image-container">
                                <div class="image-label">AI Analysis</div>
                                <div style="position: relative;">
                                    <img src="{{ url_for('static', filename='images/gradcam_COVID.png') }}" alt="Chest X-ray with COVID-19 Detection" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                                    <div style="position: absolute; top: 20px; right: 20px; background: rgba(220, 53, 69, 0.9); color: white; padding: 8px 15px; border-radius: 20px; font-weight: 700; font-size: 1.1rem; backdrop-filter: blur(10px);">
                                        COVID-19
                                    </div>
                                    <div style="position: absolute; bottom: 20px; left: 20px; background: rgba(220, 53, 69, 0.9); color: white; padding: 5px 12px; border-radius: 15px; font-weight: 600; backdrop-filter: blur(10px);">
                                        100% Confidence
                                    </div>
                                </div>
                                <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">AI highlighted COVID-19 patterns with heatmap visualization</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Skin Cancer Model -->
        <div class="model-detail-card" data-model="2">
            <div class="model-header">
                <div class="model-header-content">
                    <div class="model-info">
                        <div class="model-icon-large">
                            <i class="fas fa-diagnoses"></i>
                        </div>
                        <h3 class="model-title">Skin Cancer Detection</h3>
                        <p class="model-subtitle">Dermoscopic image analysis for melanoma screening</p>
                        <div class="model-stats">
                            <div class="stat-item">
                                <div class="stat-label">Accuracy</div>
                                <div class="stat-value">93%</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-label">Architecture</div>
                                <div class="stat-value">ResNet</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-label">Classification</div>
                                <div class="stat-value">Binary</div>
                            </div>
                        </div>
                    </div>
                    <div class="model-cta">
                        <a href="{{ url_for('skin') }}" class="try-now-btn">
                            <i class="fas fa-play"></i>
                            <span>Try Model</span>
                        </a>
                    </div>
                </div>
            </div>
            
            <div class="model-content">
                <div id="skin-example" class="tab-content">
                    <div class="example-showcase">
                        <h4 class="example-title">Melanoma Screening Example</h4>
                        <div class="before-after-container">
                            <div class="image-container">
                                <div class="image-label">Dermoscopic Image</div>
                                <img src="{{ url_for('static', filename='images/skin.png') }}" alt="Skin Lesion Original" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                                <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">High-resolution dermoscopic image for analysis</div>
                            </div>
                            
                            <div class="arrow-icon">
                                <i class="fas fa-arrow-right"></i>
                            </div>
                            
                            <div class="image-container">
                                <div class="image-label">Risk Assessment</div>
                                <div style="position: relative; width: 100%; aspect-ratio: 1/1; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer; overflow: hidden;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                                    <img src="{{ url_for('static', filename='images/skin.png') }}" alt="Skin Lesion with Malignant Detection" style="width: 100%; height: 100%; object-fit: contain;">
                                    <div style="position: absolute; top: 20px; right: 20px; background: rgba(220, 53, 69, 0.9); color: white; padding: 8px 15px; border-radius: 20px; font-weight: 700; font-size: 1.1rem; backdrop-filter: blur(10px);">
                                        MALIGNANT
                                    </div>
                                                                         <div style="position: absolute; bottom: 20px; left: 20px; background: rgba(220, 53, 69, 0.9); color: white; padding: 5px 12px; border-radius: 15px; font-weight: 600; backdrop-filter: blur(10px);">
                                        100% Confidence
                                    </div>
                                </div>
                                <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">AI risk assessment indicating 100% malignancy probability</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Fracture Detection Model -->
        <div class="model-detail-card" data-model="3">
            <div class="model-header">
                <div class="model-header-content">
                    <div class="model-info">
                        <div class="model-icon-large">
                            <i class="fas fa-bone"></i>
                        </div>
                        <h3 class="model-title">Fracture Detection</h3>
                        <p class="model-subtitle">X-ray analysis for bone fracture identification</p>
                        <div class="model-stats">
                            <div class="stat-item">
                                <div class="stat-label">mAP50</div>
                                <div class="stat-value">0.94</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-label">Architecture</div>
                                <div class="stat-value">YOLO</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-label">Detection</div>
                                <div class="stat-value">Object</div>
                            </div>
                        </div>
                    </div>
                    <div class="model-cta">
                        <a href="{{ url_for('fracture') }}" class="try-now-btn">
                            <i class="fas fa-play"></i>
                            <span>Try Model</span>
                        </a>
                    </div>
                </div>
            </div>
            
            <div class="model-content">
                <div id="fracture-example" class="tab-content">
                    <div class="example-showcase">
                        <h4 class="example-title">Wrist Fracture Detection</h4>
                        <div class="before-after-container">
                            <div class="image-container">
                                <div class="image-label">X-ray Image</div>
                                <img src="{{ url_for('static', filename='images/bone.jpg') }}" alt="Wrist X-ray Original" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                                <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">Wrist radiograph following trauma</div>
                            </div>
                            
                            <div class="arrow-icon">
                                <i class="fas fa-arrow-right"></i>
                            </div>
                            
                            <div class="image-container">
                                <div class="image-label">Fracture Detected</div>
                                <img src="{{ url_for('static', filename='images/result_bone.jpg') }}" alt="Wrist X-ray with Fracture Detection" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                                <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">AI detected distal radius fracture with precise localization</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</section>

<script>
let currentModel = 0;
const modelNames = [
    "Brain Tumor Detection",
    "Chest X-ray Analysis", 
    "Skin Cancer Detection",
    "Fracture Detection"
];

function showModel(index) {
    // Hide all models and their content
    document.querySelectorAll('.model-detail-card').forEach(card => {
        card.style.display = 'none';
        card.classList.remove('active');
    });
    
    // Show and activate selected model
    const selectedModel = document.querySelector(`[data-model="${index}"]`);
    if (selectedModel) {
        selectedModel.style.display = 'block';
        selectedModel.classList.add('active');
        
        // Ensure the tab content is visible
        const tabContent = selectedModel.querySelector('.tab-content');
        if (tabContent) {
            tabContent.classList.add('active');
        }
    }
    
    // Update indicators
    document.querySelectorAll('.indicator-dot').forEach((dot, i) => {
        dot.classList.toggle('active', i === index);
    });
    
    // Update info text
    const infoText = document.getElementById('currentModelInfo');
    if (infoText) {
        infoText.textContent = `${modelNames[index]} (${index + 1} of 4)`;
    }
    
    // Update navigation buttons
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    
    if (prevBtn) prevBtn.disabled = index === 0;
    if (nextBtn) nextBtn.disabled = index === 3;
    
    currentModel = index;
}

function nextModel() {
    if (currentModel < modelNames.length - 1) {
        showModel(currentModel + 1);
    }
}

function previousModel() {
    if (currentModel > 0) {
        showModel(currentModel - 1);
    }
}

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
    // Show first model
    showModel(0);
    
    // Add click handlers to dots
    document.querySelectorAll('.indicator-dot').forEach((dot, index) => {
        dot.addEventListener('click', () => showModel(index));
    });
});

function switchTab(event, tabId) {
    const modelCard = event.target.closest('.model-detail-card');
    
    const tabContents = modelCard.querySelectorAll('.tab-content');
    tabContents.forEach(content => content.classList.remove('active'));
    
    const tabButtons = modelCard.querySelectorAll('.tab-btn');
    tabButtons.forEach(btn => btn.classList.remove('active'));
    
    document.getElementById(tabId).classList.add('active');
    event.target.classList.add('active');
}
</script>

{% endblock %}
</file>

<file path="templates/layout.html">
<!DOCTYPE html>
<html lang="en" {% if request.path == url_for('home') %}class="home-page"{% endif %}>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}MedXpert - Advanced Medical Imaging Analysis{% endblock %}</title>
    
    <!-- Dynamic Favicon based on browser theme (light/dark mode) -->
    <link id="light-mode-favicon" rel="icon" href="{{ url_for('static', filename='blue_small_logo.svg') }}" media="(prefers-color-scheme: light)">
    <link id="dark-mode-favicon" rel="icon" href="{{ url_for('static', filename='white_small_logo.svg') }}" media="(prefers-color-scheme: dark)">
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Custom CSS -->
    <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}">
    
    <style>
        :root {
            --primary-color: #233cea;
            --primary-light: #5960ee;
            --primary-dark: #233cea;
            --secondary-color: #233cea;
            --accent-color: #fffaee;
            --text-light: #ffffff;
            --text-dark: #333333;
            --bg-light: #f9fafb;
            --bg-dark: #222222; /* Dark gray instead of purple */
            --bg-blue: #233cea; /* Solid blue color */
            --bg-blue-gradient: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8); /* Updated to match other gradients */
            --radius: 0.75rem;
            --shadow: 0 6px 32px rgba(35,60,234,0.08),0 1.5px 4.5px rgba(35,60,234,0.06);
            --shadow-lg: 0 10px 40px rgba(35,60,234,0.15);
            --scrollbar-bg: #444444;
            --scrollbar-thumb: #888888;
            --header-font: 'Poppins', sans-serif;
            --body-font: 'Inter', sans-serif;
        }
        
        /* Body styles - light background by default */
        body {
            font-family: var(--body-font);
            background-color: var(--bg-light);
            color: var(--text-dark);
            line-height: 1.7;
            overflow-x: hidden;
            position: relative;
            font-weight: 500;
        }
        
        /* Global decorative circles for all pages */
        body::before,

        
        body::before {
            width: 800px;
            height: 800px;
            top: -300px;
            left: -300px;
            animation-delay: 0s;
        }
        
        body::after {
            width: 600px;
            height: 600px;
            bottom: -200px;
            right: -200px;
            animation-delay: 5s;
        }
        
        /* Additional decorative circles for content sections */
        .content-section {
            position: relative;
            overflow: hidden;
        }
        
        .content-section::before,
        .content-section::after {
            content: "";
            position: absolute;
            border-radius: 50%;
            background: linear-gradient(45deg, rgba(35,60,234,0.02), rgba(35,60,234,0.05));
            z-index: 0;
            animation: float 25s infinite alternate ease-in-out;
            pointer-events: none;
        }
        
        .content-section::before {
            width: 500px;
            height: 500px;
            top: -200px;
            right: -200px;
            animation-delay: 2s;
        }
        
        .content-section::after {
            width: 400px;
            height: 400px;
            bottom: -150px;
            left: -150px;
            animation-delay: 7s;
        }
        
        /* Animation for floating circles */
        @keyframes float {
            0% { transform: translate(0, 0) rotate(0deg); }
            50% { transform: translate(-20px, 20px) rotate(5deg); }
            100% { transform: translate(20px, -20px) rotate(-5deg); }
        }
        
        /* Special styling for home page */
        .home-page body {
            background-color: #000000; /* Black background only for home page */
        }
        
        h1, h2, h3, h4, h5, h6 {
            font-family: var(--header-font);
            font-weight: 700;
        }
        
        /* Modern Navbar styling */
        .navbar {
            padding: 0.8rem 0;
            transition: all 0.3s ease;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
            background-color: var(--bg-blue); /* Default blue background */
        }

        /* Home page navbar with gradient background */
        .home-page .navbar:not(.scrolled) {
            background: transparent;
            box-shadow: none;
            border-bottom: none;
            position: absolute;
            width: 100%;
            top: 0;
            left: 0;
            z-index: 1050;
        }
        
        /* Ensure the navbar is positioned properly on the home page */
        .home-page main {
            margin-top: 0; /* Remove margin for home page */
        }
        
        /* Fix for transparent navbar on home page */
        .home-page .unified-hero-section {
            padding-top: 120px; /* Increase padding to account for navbar */
        }

        /* Change navbar color on scroll */
        .navbar.scrolled {
            background-color: white; /* Change to white when scrolled */
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        /* For pages with light backgrounds initially */
        .navbar.light-bg-navbar {
            background-color: white;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }
        
        .navbar.scrolled {
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }
        
        /* For pages with light backgrounds initially */
        .navbar.light-bg-navbar {
            background-color: white;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }
        
        /* Home page navbar text (white) */
        .navbar .navbar-brand {
            color: white;
        }

        .navbar .nav-link {
            color: white; /* Only white on home page */
        }

        /* Scrolled navbar text (black) and non-home pages */
        .navbar.scrolled .navbar-brand,
        .navbar.scrolled .nav-link,
        .navbar.light-bg-navbar .navbar-brand,
        .navbar.light-bg-navbar .nav-link {
            color: #333333 !important; /* Changed to darker color for better visibility and added !important */
        }

        /* Hover and active states */
        .navbar .nav-link:hover {
            color: rgba(255, 255, 255, 0.8); /* Only for home page */
        }

        .navbar.scrolled .nav-link:hover,
        .navbar.light-bg-navbar .nav-link:hover {
            color: var(--primary-color) !important; /* Blue on hover for all other pages */
        }
        
        /* Special styling for logout link */
        .navbar .logout-link:hover {
            color: #ff3a3a !important; /* Red color on hover */
        }
        
        .navbar.scrolled .logout-link:hover,
        .navbar.light-bg-navbar .logout-link:hover {
            color: #ff3a3a !important; /* Red color on hover for all states */
        }

        /* Special styling for logout link - enhanced for all states */
        .nav-link.logout-link:hover {
            color: #ff3a3a !important; /* Red color on hover */
            font-weight: 500;
        }
        
        .navbar .logout-link:hover {
            color: #ff3a3a !important; /* Red color on hover */
        }
        
        .navbar.scrolled .logout-link:hover,
        .navbar.light-bg-navbar .logout-link:hover {
            color: #ff3a3a !important; /* Red color on hover for all states */
        }

        .navbar .active .nav-link {
            color: white; /* Only for home page */
            font-weight: 600;
        }

        .navbar.scrolled .active .nav-link,
        .navbar.light-bg-navbar .active .nav-link {
            color: var(--primary-color) !important; /* Blue for active link */
        }
        
        .navbar.light-bg-navbar .navbar-brand,
        .navbar.light-bg-navbar .nav-link {
            color: var(--primary-color);
        }
        
        .navbar.light-bg-navbar .navbar-brand img {
            filter: none; /* Normal colored logo */
        }
        
        .navbar.light-bg-navbar .navbar-toggler {
            border-color: rgba(0,0,0,0.1);
        }
        
        .navbar.light-bg-navbar .navbar-toggler-icon {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(0, 0, 0, 0.5)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
        }
        
        /* Fix hover color for non-home pages */
        .navbar.light-bg-navbar .nav-link:hover {
            color: var(--primary-dark) !important; /* Darker blue on hover */
        }
        
        .navbar.light-bg-navbar .navbar-nav .active .nav-link {
            color: var(--primary-color);
            font-weight: 600;
        }
        
        .navbar.light-bg-navbar .navbar-nav .active .nav-link::after {
            background-color: var(--primary-color);
        }
        
        .navbar-brand {
            display: flex;
            align-items: center;
            font-weight: 700;
            font-size: 1.5rem;
            color: white;
            transition: all 0.3s ease;
        }
        
        .navbar.scrolled .navbar-brand {
            color: var(--primary-color);
        }
        
        .navbar-brand img {
            height: 40px;
            margin-right: 10px;
            filter: brightness(0) invert(1); /* Make logo white */
            transition: filter 0.3s ease;
        }
        
        .navbar.scrolled .navbar-brand img {
            filter: none; /* Return to original color when scrolled */
        }
        
        .navbar-nav .nav-item {
            position: relative;
            margin: 0 0.75rem;
        }
        
        /* Hover dropdown for Models */
        .navbar-nav .nav-item.dropdown:hover .dropdown-menu {
            display: block;
            animation: fadeInMenu 0.3s ease forwards;
        }
        
        @keyframes fadeInMenu {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .dropdown-menu {
            border: none;
            border-radius: var(--radius);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            padding: 0.5rem 0;
            margin-top: 0;
            border-top: 3px solid var(--primary-color);
            opacity: 0;
            transform: translateY(10px);
            /* Add delay before closing to give time to move to menu items */
            transition: opacity 0.2s ease, transform 0.2s ease;
        }
        
        /* Add padding to create a hover buffer zone */
        .navbar-nav .nav-item.dropdown {
            position: relative;
        }
        
        .navbar-nav .nav-item.dropdown::after {
            content: "";
            position: absolute;
            height: 20px;
            left: 0;
            right: 0;
            bottom: -20px;
            z-index: 900;
        }
        
        .dropdown-menu::before {
            content: "";
            position: absolute;
            height: 20px;
            left: 0;
            right: 0;
            top: -20px; 
        }
        
        .dropdown-item {
            padding: 0.6rem 1.5rem;
            font-weight: 500;
            color: var(--text-dark);
            transition: all 0.2s ease;
        }
        
        .dropdown-item:hover {
            background-color: rgba(35, 60, 234, 0.05);
            color: var(--primary-color);
            transform: translateX(5px);
        }
        
        .navbar-nav .nav-link {
            padding: 0.5rem 1rem;
            font-weight: 500;
            color: white;
            transition: all 0.3s ease;
        }
        
        .navbar.scrolled .nav-link {
            color: var(--text-dark);
        }
        
        .navbar-nav .nav-link:hover {
            color: rgba(255, 255, 255, 0.8);
        }
        
        .navbar.scrolled .nav-link:hover {
            color: var(--primary-color);
        }
        
        .navbar-nav .active .nav-link {
            color: white;
            font-weight: 600;
        }
        
        .navbar.scrolled .navbar-nav .active .nav-link {
            color: var(--primary-color);
        }
        
        .navbar-nav .active .nav-link::after {
            content: "";
            position: absolute;
            bottom: 0;
            left: 1rem;
            right: 1rem;
            height: 3px;
            background-color: white;
            border-radius: 3px 3px 0 0;
            transition: all 0.3s ease;
        }
        
        .navbar.scrolled .navbar-nav .active .nav-link::after {
            background-color: var(--primary-color);
        }
        
        /* Logo for dark mode */
        @media (prefers-color-scheme: dark) {
            .navbar-brand img {
                filter: brightness(0) invert(1); /* Always white in dark mode */
            }
        }
        
        /* Fix navbar toggler color */
        .navbar-toggler {
            border-color: rgba(255,255,255,0.5);
        }
        
        .navbar-toggler-icon {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(255, 255, 255, 0.9)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
            transition: background-image 0.3s ease;
        }
        
        .navbar.scrolled .navbar-toggler {
            border-color: rgba(0,0,0,0.1);
        }
        
        .navbar.scrolled .navbar-toggler-icon {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(0, 0, 0, 0.5)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
        }
        
        /* Content sections */
        .section-full {
            min-height: calc(100vh - 70px); /* Adjust to account for navbar */
            display: flex;
            align-items: center;
            position: relative;
            overflow: hidden;
            padding: 6rem 0;
            margin-top: 0;
        }
        
        .section-blue {
            background: var(--bg-blue-gradient);
            color: var(--text-light);
            position: relative;
        }
        
        .section-light {
            background-color: var(--bg-light);
            color: var(--text-dark);
        }
        
        .section-dark {
            background-color: var(--bg-dark);
            color: var(--text-light);
        }
        
        .section-centered {
            text-align: center;
        }
        
        /* Content container */
        .content-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1.5rem;
            position: relative;
            z-index: 5;
        }
        
        .content-narrow {
            max-width: 800px;
            margin: 0 auto;
        }
        
        /* Hero section */
        .hero-content {
            padding-top: 2rem; /* Reduced from 6rem */
        }
        
        .hero-title {
            font-size: 4rem;
            font-weight: 700;
            margin-bottom: 1.5rem;
            line-height: 1.2;
        }
        
        .hero-subtitle {
            font-size: 1.25rem;
            font-weight: 400;
            max-width: 700px;
            margin-left: auto;
            margin-right: auto;
        }
        
        /* Background elements */
        .bg-circle {
            display: none; /* Hide the circles completely */
        }

        .bg-circle-1, .bg-circle-2 {
            display: none; /* Hide specific circles */
        }
        
        /* Cards */
        .card {
            border: none;
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            height: 100%;
            background-color: white;
        }
        
        .card:hover {
            transform: translateY(-10px);
            box-shadow: var(--shadow-lg);
        }
        
        .card-body {
            padding: 1.75rem;
        }
        
        /* Buttons */
        .btn {
            font-weight: 600;
            padding: 0.75rem 1.75rem;
            border-radius: 50px;
            transition: all 0.3s ease;
            box-shadow: 0 3px 15px rgba(0, 0, 0, 0.1);
        }
        
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.15);
        }
        
        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }
        
        .btn-light {
            background-color: white;
            color: var (--primary-color);
        }
        
        .btn-outline-light {
            color: white;
            border-color: white;
        }
        
        /* Footer */
        body {
            background-color: var(--bg-light); /* Changed from #000000 to light background */
        }
        
        main {
            margin-top: 70px; /* Adjust based on navbar height */
            background-color: var(--bg-light); /* Keep main content light */
        }
        
        .home-page body {
            background-color: #000000; /* Black background only for home page */
        }
        
        footer {
            background-color: var(--bg-dark);
            color: var(--text-light);
            padding: 6rem 0 2rem;
            border-radius: var(--radius) var(--radius) 0 0;
            margin-top: 0rem; /* More margin above footer */
        }
        
        .footer-heading {
            color: white;
            font-weight: 600;
            margin-bottom: 1.5rem;
        }
        
        .footer-link {
            color: rgba(255, 255, 255, 0.7);
            text-decoration: none;
            display: block;
            padding: 0.25rem 0;
            transition: color 0.2s ease;
        }
        
        .footer-link:hover {
            color: white;
        }
        
        .footer-social a {
            color: rgba(255, 255, 255, 0.7);
            margin-right: 1rem;
            font-size: 1.2rem;
            transition: all 0.3s ease;
        }
        
        .footer-social a:hover {
            color: white;
            transform: translateY(-3px);
        }
        
        /* Spacings */
        .mt-section {
            margin-top: 8rem;
        }
        
        .mb-section {
            margin-bottom: 8rem;
        }
        
        .py-section {
            padding-top: 8rem;
            padding-bottom: 8rem;
        }
        
        /* Additional styling for content sections */
        .content-section {
            padding-bottom: 5rem;
        }
        
        .section-divider {
            display: none; /* Hide all dividers for clean transitions */
        }
        
        /* Flash messages */
        .alert-fancy {
            display: flex;
            align-items: center;
            background-color: white;
            border-radius: var(--radius);
            padding: 1rem 1.5rem;
            box-shadow: var(--shadow);
            margin-bottom: 1.5rem;
            transition: opacity 0.3s;
        }
        
        .alert-success {
            border-left: 4px solid #10b981;
        }
        
        .alert-icon {
            font-size: 1.5rem;
            margin-right: 1rem;
            color: #10b981;
        }
        
        .alert-content {
            flex-grow: 1;
        }
        
        .alert-close {
            border: none;
            background: none;
            font-size: 1.2rem;
            cursor: pointer;
            opacity: 0.5;
        }
        
        .alert-close:hover {
            opacity: 1;
        }
        
        /* Responsive styles */
        @media (max-width: 992px) {
            .hero-title {
                font-size: 3rem;
            }
            
            .section-full {
                padding: 5rem 0;
            }
        }
        
        @media (max-width: 768px) {
            .hero-title {
                font-size: 2.5rem;
            }
            
            .content-section {
                padding: 4rem 0;
            }
            
            .py-section {
                padding-top: 5rem;
                padding-bottom: 5rem;
            }
        }
        
        /* Improved styles for How It Works section */
        .process-step {
            position: relative;
            padding-bottom: 3rem;
            margin-bottom: 1.5rem;
            text-align: center;
        }
        
        .process-icon {
            width: 100px;
            height: 100px;
            margin: 0 auto 1.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            font-size: 2.5rem;
            background: var(--bg-blue);
            color: white;
            position: relative;
            z-index: 2;
            transition: all 0.3s ease;
            box-shadow: 0 10px 30px rgba(35, 60, 234, 0.2);
        }
        
        .process-step:hover .process-icon {
            transform: translateY(-10px) scale(1.05);
            box-shadow: 0 15px 35px rgba(35, 60, 234, 0.3);
        }
        
        .process-step::after {
            content: "";
            position: absolute;
            top: 50px;
            right: -50px;
            width: 100px;
            height: 2px;
            background: rgba(35, 60, 234, 0.2);
            z-index: 1;
        }
        
        .process-step:last-child::after {
            display: none;
        }
        
        /* Team Members Improvements */
        .team-card {
            position: relative;
            overflow: hidden;
            border-radius: var(--radius);
            margin-bottom: 1rem;
            width: 300px;
            flex-shrink: 0;
            margin-right: 20px;
            box-shadow: var(--shadow);
            transition: all 0.3s ease;
        }
        
        .team-card:hover {
            transform: translateY(-10px);
            box-shadow: var(--shadow-lg);
        }
        
        .team-img-container {
            position: relative;
            overflow: hidden;
            border-radius: var (--radius) var(--radius) 0 0;
        }
        
        .team-info {
            padding: 1.5rem;
            text-align: center;
            background-color: white;
            border-radius: 0 0 var(--radius) var(--radius);
            transition: all 0.3s ease;
        }
        
        .team-social {
            position: absolute;
            top: 20px;
            right: 20px;
            display: flex;
            flex-direction: column;
            opacity: 0;
            transform: translateX(20px);
            transition: all 0.3s ease;
        }
        
        .team-social-icon {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background-color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 10px;
            color: var(--primary-color);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }
        
        .team-social-icon:hover {
            transform: translateY(-3px);
            box-shadow: 0 7px 15px rgba(0, 0, 0, 0.15);
        }
        
        .team-card:hover .team-social {
            opacity: 1;
            transform: translateX(0);
        }
        
        /* Team scroll container styles */
        .team-scroll-container {
            position: relative;
            width: 100%;
            padding: 20px 0;
            margin: 30px auto;
            max-width: 1200px;
        }
        
        .team-scroll-wrapper {
            display: flex;
            overflow-x: visible;
            scroll-behavior: smooth;
            padding: 50px 0;
            position: relative;
            transform: translateX(0);
            transition: transform 0.8s cubic-bezier(0.68, -0.55, 0.27, 1.55);
            will-change: transform;
        }
        
        .team-scroll-controls {
            display: flex;
            justify-content: space-between;
            position: absolute;
            top: 50%;
            left: -20px;
            right: -20px;
            transform: translateY(-50%);
            z-index: 100;
            margin: 0;
            pointer-events: none;
        }
        
        .team-scroll-btn {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: none;
            background-color: var(--primary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
            z-index: 10;
            pointer-events: auto;
        }
        
        .team-scroll-btn:hover {
            background-color: var(--primary-dark);
            transform: translateY(-3px) scale(1.05);
            box-shadow: 0 7px 15px rgba(0, 0, 0, 0.15);
        }
        
        .team-scroll-btn:active {
            transform: translateY(0) scale(0.98);
        }
        
        /* New creative card switching animations */
        .team-card {
            position: relative;
            overflow: hidden;
            border-radius: var(--radius);
            margin-bottom: 1rem;
            width: 300px;
            flex-shrink: 0;
            margin-right: 20px;
            box-shadow: var(--shadow);
            transition: all 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55);
            transform-origin: center;
        }
        
        .team-card:hover {
            transform: translateY(-10px) scale(1.03);
            box-shadow: var(--shadow-lg);
            z-index: 5;
        }
        
        .team-card.active {
            transform: translateY(-5px) scale(1.05);
            box-shadow: 0 15px 35px rgba(35, 60, 234, 0.25);
            z-index: 10;
        }
        
        .team-card.prev {
            transform: translateX(-10px) scale(0.95) rotate(-1deg);
            opacity: 0.8;
        }
        
        .team-card.next {
            transform: translateX(10px) scale(0.95) rotate(1deg);
            opacity: 0.8;
        }
        
        /* Team scroll container styles */
        .team-scroll-container {
            position: relative;
            width: 100%;
            padding: 20px 0;
        }
        
        .team-scroll-wrapper {
            display: flex;
            overflow-x: auto;
            scroll-behavior: smooth;
            scrollbar-width: none; /* Firefox */
            -ms-overflow-style: none; /* IE and Edge */
            padding: 20px 0;
            margin: 0 -20px;
            padding: 0 20px;
        }
        
        .team-scroll-wrapper::-webkit-scrollbar {
            display: none; /* Chrome, Safari, Opera */
        }
        
        .team-scroll-controls {
            display: flex;
            justify-content: center;
            margin-top: 30px;
            gap: 15px;
        }
        
        .team-scroll-btn {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: none;
            background-color: var(--primary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }
        
        .team-scroll-btn:hover {
            background-color: var(--primary-dark);
            transform: translateY(-3px);
            box-shadow: 0 7px 15px rgba(0, 0, 0, 0.15);
        }
        
        ::-webkit-scrollbar-track {
            background: var(--scrollbar-bg);
            border-radius: 0;
        }
        
        ::-webkit-scrollbar-thumb {
            background: var(--scrollbar-thumb);
            border-radius: 0;
            border: 2px solid var(--scrollbar-bg);
        }
        
        ::-webkit-scrollbar-thumb:hover {
            background: #777777;
        }
        
        /* Scrollbar arrows */
        ::-webkit-scrollbar-button:single-button {
            background-color: var(--scrollbar-bg);
            display: block;
            height: 16px;
        }
        
        /* Up arrow */
        ::-webkit-scrollbar-button:single-button:vertical:decrement {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='6' viewBox='0 0 10 6'%3E%3Cpath fill='%23888888' d='M0 6L5 0L10 6H0Z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: center;
        }
        
        /* Down arrow */
        ::-webkit-scrollbar-button:single-button:vertical:increment {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='6' viewBox='0 0 10 6'%3E%3Cpath fill='%23888888' d='M0 0L5 6L10 0H0Z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: center;
        }

        /* Enhanced team card animations */
        .team-card.active {
            transform: translateY(-10px) scale(1.05);
            box-shadow: 0 15px 35px rgba(35, 60, 234, 0.25);
            z-index: 10;
            filter: brightness(1.05);
        }
        
        .team-card.prev {
            transform: translateX(-10px) scale(0.95) rotate(-2deg);
            opacity: 0.85;
            filter: grayscale(0.2);
        }
        
        .team-card.next {
            transform: translateX(10px) scale(0.95) rotate(2deg);
            opacity: 0.85;
            filter: grayscale(0.2);
        }
        
        .team-card.far-prev {
            transform: translateX(-20px) scale(0.9) rotate(-4deg);
            opacity: 0.7;
            filter: grayscale(0.4);
        }
        
        .team-card.far-next {
            transform: translateX(20px) scale(0.9) rotate(4deg);
            opacity: 0.7;
            filter: grayscale(0.4);
        }
        
        /* Fancy button effects for team carousel */
        .team-scroll-btn {
            position: relative;
            overflow: hidden;
        }
        
        .team-scroll-btn::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: width 0.4s ease, height 0.4s ease;
        }
        
        .team-scroll-btn:hover::after {
            width: 120%;
            height: 120%;
        }
        
        .team-scroll-btn:active::after {
            background-color: rgba(255, 255, 255, 0.3);
        }
        
        /* Improved wrapper for better card scrolling */
        .team-scroll-wrapper {
            display: flex;
            overflow-x: hidden;
            scroll-behavior: smooth;
            padding: 30px 30px;
            margin: 0 -30px;
            will-change: transform;
            transition: transform 0.8s cubic-bezier(0.68, -0.55, 0.27, 1.55);
        }
        
        /* Enhanced focus effect for active card */
        .team-card.active::after {
            content: '';
            position: absolute;
            inset: -5px;
            border-radius: var(--radius);
            border: 2px solid transparent;
            background: linear-gradient(135deg, var(--primary-color), var(--primary-light)) border-box;
            -webkit-mask: linear-gradient(#fff 0 0) padding-box, linear-gradient(#fff 0 0);
            -webkit-mask-composite: destination-out;
            mask-composite: exclude;
            opacity: 0;
            animation: glow-effect 2s ease-in-out infinite alternate;
            pointer-events: none;
            z-index: -1;
        }
        
        @keyframes glow-effect {
            0% { opacity: 0; }
            100% { opacity: 0.7; }
        }
        
        .team-card.active .team-img-container {
            box-shadow: 0 10px 20px rgba(35, 60, 234, 0.15);
        }

        .team-img-container {
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            overflow: hidden;
        }
        
        /* Style for team member photos */
        .team-member-photo {
            width: auto;
            height: auto;
            max-width: 100%;
            transition: transform 0.5s ease;
        }
        
        .team-card:hover .team-member-photo {
            transform: none;
        }
    </style>
    
    {% block head %}{% endblock %}
    
    <!-- Special styling for logout link and team carousel -->
    <style>
        /* Super high specificity rule to override all others */
        .navbar .navbar-nav .nav-item .nav-link.logout-link:hover,
        .navbar.scrolled .navbar-nav .nav-item .nav-link.logout-link:hover,
        .navbar.light-bg-navbar .navbar-nav .nav-item .nav-link.logout-link:hover {
            color: #ff3a3a !important;
        }
        
        /* Team Carousel Styles - Complete Rewrite */
        .team-carousel-container {
            position: relative;
            max-width: 1000px;
            margin: 0 auto;
            padding: 40px 0;
            overflow: hidden;
        }
        
        .team-carousel-track {
            display: flex;
            justify-content: center;
            transition: transform 0.8s cubic-bezier(0.45, 0.05, 0.55, 0.95);
            transform-style: preserve-3d;
            perspective: 1000px;
            min-height: 400px;
        }
        
        .team-card {
            position: absolute;
            width: 280px;
            background-color: white;
            border-radius: 16px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
            opacity: 0;
            transform: translateX(100px) scale(0.8);
            pointer-events: none;
        }
        
        .team-card[data-position="active"] {
            transform: translateX(0) scale(1.05) translateY(-10px);
            opacity: 1;
            z-index: 5;
            pointer-events: auto;
            box-shadow: 0 20px 40px rgba(35, 60, 234, 0.2);
        }
        
        .team-card[data-position="prev"] {
            transform: translateX(-300px) scale(0.9) rotateY(10deg);
            opacity: 0.7;
            z-index: 4;
            pointer-events: auto;
        }
        
        .team-card[data-position="next"] {
            transform: translateX(300px) scale(0.9) rotateY(-10deg);
            opacity: 0.7;
            z-index: 4;
            pointer-events: auto;
        }
        
        .team-card[data-position="far-prev"] {
            transform: translateX(-450px) scale(0.7) rotateY(20deg);
            opacity: 0.4;
            z-index: 3;
        }
        
        .team-card[data-position="far-next"] {
            transform: translateX(450px) scale(0.7) rotateY(-20deg);
            opacity: 0.4;
            z-index: 3;
        }
        
        .team-card[data-position="hidden"] {
            opacity: 0;
            transform: translateX(-9999px);
            z-index: 0;
        }
        
        .team-img-container {
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }
        
        .team-info {
            padding: 1.5rem;
            text-align: center;
            transition: all 0.3s ease;
        }
        
        .team-social {
            position: absolute;
            top: 20px;
            right: 20px;
            display: flex;
            flex-direction: column;
            opacity: 0;
            transform: translateX(20px);
            transition: all 0.3s ease;
        }
        
        .team-card:hover .team-social {
            opacity: 1;
            transform: translateX(0);
        }
        
        .team-social-icon {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background-color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 10px;
            color: var(--primary-color);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }
        
        .team-social-icon:hover {
            transform: translateY(-3px);
            box-shadow: 0 7px 15px rgba(0, 0, 0, 0.15);
        }
        
        /* Carousel Controls */
        .team-carousel-controls {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top: 40px;
        }
        
        .team-nav-btn {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: none;
            background-color: var(--primary-color);
            color: white;
            font-size: 1.2rem;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 0 20px;
            box-shadow: 0 5px 15px rgba(35, 60, 234, 0.2);
        }
        
        .team-nav-btn:hover {
            background-color: var(--primary-dark);
            transform: translateY(-3px);
            box-shadow: 0 10px 20px rgba(35, 60, 234, 0.3);
        }
        
        .team-nav-btn:active {
            transform: translateY(-1px);
        }
        
        .team-indicators {
            display: flex;
            gap: 8px;
            margin: 0 20px;
        }
        
        .team-indicator {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background-color: #d1d5db;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .team-indicator.active {
            width: 30px;
            border-radius: 10px;
            background-color: var(--primary-color);
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg {% if request.path not in [url_for('home')] %}light-bg-navbar{% endif %}">
        <div class="container">
            <a class="navbar-brand" href="{{ url_for('home') }}">
                <img src="{{ url_for('static', filename='logo.svg') }}" alt="MedXpert Logo">
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item {% if request.path == url_for('home') %}active{% endif %}">
                        <a class="nav-link" href="{{ url_for('home') }}">Home</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="{{ url_for('home') }}#models" id="modelsDropdown" role="button">
                            Models
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="modelsDropdown">
                            <li><a class="dropdown-item" href="{{ url_for('brain') }}">Brain Tumor</a></li>
                            <li><a class="dropdown-item" href="{{ url_for('chest') }}">Chest X-ray</a></li>
                            <li><a class="dropdown-item" href="{{ url_for('skin') }}">Skin Cancer</a></li>
                            <li><a class="dropdown-item" href="{{ url_for('fracture') }}">Fracture Detection</a></li>
                        </ul>
                    </li>

                    {% if current_user.is_authenticated %}
                        {% if current_user.is_admin() %}
                        <li class="nav-item {% if request.path == url_for('admin') %}active{% endif %}">
                            <a class="nav-link" href="{{ url_for('admin') }}">Admin</a>
                        </li>
                        {% endif %}
                        <li class="nav-item {% if request.path == url_for('profile') %}active{% endif %}">
                            <a class="nav-link" href="{{ url_for('profile') }}">Profile</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link logout-link" href="{{ url_for('logout') }}" onmouseover="this.style.color='#ff3a3a'" onmouseout="this.style.color=''">Logout</a>
                        </li>
                    {% else %}
                        <li class="nav-item {% if request.path == url_for('login') %}active{% endif %}">
                            <a class="nav-link" href="{{ url_for('login') }}">Login</a>
                        </li>
                        <li class="nav-item {% if request.path == url_for('register') %}active{% endif %}">
                            <a class="nav-link" href="{{ url_for('register') }}">Register</a>
                        </li>
                    {% endif %}
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main content -->
    <main>
        {% with messages = get_flashed_messages() %}
            {% if messages and request.path == url_for('home') %}
            <div class="container mt-4">
                <div class="alert-fancy alert-success" role="alert">
                    <div class="alert-icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <div class="alert-content">
                        <div>{{ messages[0] }}</div>
                    </div>
                    <button type="button" class="alert-close" data-bs-dismiss="alert" aria-label="Close">×</button>
                </div>
                
                <script>
                    // Auto-hide the alert after 3 seconds
                    setTimeout(function() {
                        document.querySelector('.alert-fancy').style.opacity = '0';
                        setTimeout(() => {
                            document.querySelector('.alert-fancy').style.display = 'none';
                        }, 300);
                    }, 3000);
                </script>
            </div>
            {% elif messages and request.path not in [url_for('login'), url_for('profile')] %}
                <div class="container mt-3">
                    <div class="alert alert-success alert-dismissible fade show">
                        {{ messages[0] }}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                </div>
            {% endif %}
        {% endwith %}
        
        {% block content %}{% endblock %}
    </main>

    <!-- Footer -->
    <footer>
        <div class="container">
            <div class="row">
                <div class="col-lg-6 mb-4 mb-lg-0">
                    <h5 class="footer-heading">MedXpert</h5>
                    <p>Advanced medical imaging analysis powered by artificial intelligence.</p>
                    <div class="footer-social mt-4">
                        <a href="#" aria-label="Facebook"><i class="fab fa-facebook-f"></i></a>
                        <a href="#" aria-label="Twitter"><i class="fab fa-twitter"></i></a>
                        <a href="#" aria-label="LinkedIn"><i class="fab fa-linkedin-in"></i></a>
                        <a href="#" aria-label="Instagram"><i class="fab fa-instagram"></i></a>
                    </div>
                </div>
                <div class="col-lg-6 col-md-12">
                    <h5 class="footer-heading">Models</h5>
                    <div class="row">
                        <div class="col-md-6">
                            <a href="{{ url_for('brain') }}" class="footer-link">Brain Tumor</a>
                            <a href="{{ url_for('chest') }}" class="footer-link">Chest X-ray</a>
                        </div>
                        <div class="col-md-6">
                            <a href="{{ url_for('skin') }}" class="footer-link">Skin Cancer</a>
                            <a href="{{ url_for('fracture') }}" class="footer-link">Fracture Detection</a>
                        </div>
                    </div>
                </div>
            </div>
            <hr class="my-4" style="border-color: rgba(255,255,255,0.1);">
            <div class="text-center" style="color: rgba(255,255,255,0.7);">
                <p class="mb-0">&copy; {{ current_year }} MedXpert. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Custom JS -->
    <script src="{{ url_for('static', filename='js/script.js') }}"></script>
    
    <script>
        // Add scrolled class to navbar when scrolling
        window.addEventListener('scroll', function() {
            const navbar = document.querySelector('.navbar');
            const isHomePage = document.documentElement.classList.contains('home-page');
            
            if (window.scrollY > 50) {
                navbar.classList.add('scrolled');
                
                // On home page, switch from absolute to fixed when scrolled
                if (isHomePage) {
                    navbar.style.position = 'fixed';
                }
            } else {
                navbar.classList.remove('scrolled');
                
                // Return to absolute position on home page when at top
                if (isHomePage) {
                    navbar.style.position = 'absolute';
                } else {
                    navbar.classList.add('light-bg-navbar');
                }
            }
        });
        
        // Initial check for scroll position on page load
        document.addEventListener('DOMContentLoaded', function() {
            const navbar = document.querySelector('.navbar');
            const isHomePage = document.documentElement.classList.contains('home-page');
            
            if (window.scrollY > 50) {
                navbar.classList.add('scrolled');
                
                if (isHomePage) {
                    navbar.style.position = 'fixed';
                }
            } else if (isHomePage) {
                navbar.style.position = 'absolute';
            }
            
            // Handle dropdown for desktop and mobile
            const dropdownToggle = document.getElementById('modelsDropdown');
            const dropdownMenu = document.querySelector('.dropdown-menu');
            const dropdownItems = document.querySelectorAll('.dropdown-item');
            
            // Handle Models link click on desktop
            dropdownToggle.addEventListener('click', function(e) {
                // For desktop devices, let the click go through to navigate
                if (window.innerWidth >= 992) {
                    // Check if we're on the home page and need to scroll
                    if (window.location.pathname === '/' || window.location.pathname === '/home') {
                        e.preventDefault();
                        const modelsSection = document.getElementById('models');
                        if (modelsSection) {
                            // Smooth scroll to models section
                            modelsSection.scrollIntoView({
                                behavior: 'smooth',
                                block: 'start'
                            });
                        }
                    }
                    // If not on home page, let the default navigation happen
                } 
                // For mobile devices, toggle the dropdown
                else {
                    e.preventDefault();
                    if (dropdownMenu.style.display === 'block') {
                        dropdownMenu.style.display = 'none';
                    } else {
                        dropdownMenu.style.display = 'block';
                    }
                }
            });
            
            // Ensure dropdown items can be clicked without the menu closing too quickly
            dropdownItems.forEach(item => {
                item.addEventListener('click', function(e) {
                    // Prevent immediate closing for a brief moment so the click can complete
                    e.stopPropagation();
                    // Redirect after a small delay to ensure the click registers
                    const href = this.getAttribute('href');
                    if (href) {
                        window.location.href = href;
                    }
                });
            });
            
            // Close dropdown when clicking outside
            document.addEventListener('click', function(e) {
                if (window.innerWidth < 992 && !e.target.closest('.dropdown')) {
                    if (dropdownMenu.style.display === 'block') {
                        dropdownMenu.style.display = 'none';
                    }
                }
            });
        });
        
        // Force logout link to turn red on hover for all pages - FIXED implementation
        document.addEventListener('DOMContentLoaded', function() {
            const logoutLink = document.querySelector('.nav-link.logout-link');
            if (logoutLink) {
                logoutLink.addEventListener('mouseenter', function() {
                    this.style.setProperty('color', '#ff3a3a', 'important');
                });
                logoutLink.addEventListener('mouseleave', function() {
                    // Reset to default color when not hovering
                    this.style.setProperty('color', '');
                });
            }
        });
    </script>
    
    {% block scripts %}{% endblock %}
</body>
</html>
</file>

<file path="templates/login.html">
{% extends "layout.html" %}

{% block title %}Login - MedXpert{% endblock %}

{% block head %}
<style>
    .login-container {
        min-height: 100vh;
        background: var(--light-gray);
        padding-top: 100px;
        padding-bottom: 5rem;
        position: relative;
        overflow: hidden;
    }
    
    .card-wrapper {
        position: relative;
        z-index: 10;
        transform-style: preserve-3d;
        perspective: 1000px;
    }
    
    .card {
        border: none;
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        overflow: hidden;
        margin-top: 20px;
        position: relative;
        z-index: 10;
        background: white;
        transform: translateZ(0) scale(0.98);
        transition: all 0.5s cubic-bezier(0.17, 0.67, 0.29, 0.99);
        opacity: 0;
    }
    
    .card:hover {
        transform: translateY(-10px) scale(1.01);
        box-shadow: var(--shadow-lg);
    }
    
    .card-header {
        background: var(--primary-color);
        padding: 40px 30px;
        text-align: center;
        border-bottom: none;
        position: relative;
        overflow: hidden;
    }
    
    .card-header h2 {
        margin-bottom: 0;
        color: white;
        font-weight: 700;
        font-size: 2.5rem;
        letter-spacing: -1px;
    }
    
    .hero-subtitle {
        color: rgba(255, 255, 255, 0.85);
        font-size: 1.1rem;
        margin-top: 15px;
    }
    
    .card-body {
        padding: 40px;
    }

    .form-control {
        border-radius: var(--radius);
        padding: 12px 20px;
        height: auto;
        background-color: var(--light-gray);
        border: 1px solid rgba(0, 0, 0, 0.1);
        color: var(--dark-gray);
        transition: all 0.3s ease;
        margin-bottom: 20px;
        font-size: 1rem;
    }

    .input-group .form-control {
        margin-bottom: 0;
    }

    .input-group {
        margin-bottom: 20px;
    }

    .input-group-text {
        background-color: var(--light-gray);
        border: 1px solid rgba(0, 0, 0, 0.1);
        border-left: none;
        color: var(--dark-gray);
        cursor: pointer;
        border-top-right-radius: var(--radius);
        border-bottom-right-radius: var(--radius);
        padding: 0 15px;
        display: flex;
        align-items: center;
    }

    .password-toggle {
        background: none;
        border: none;
        color: rgba(0, 0, 0, 0.5);
        transition: all 0.3s ease;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 24px;
        height: 24px;
    }
    
    .password-toggle i {
        font-size: 14px;
        line-height: 1;
    }
    
    .password-toggle:hover {
        color: var(--primary-color);
    }
    
    .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(35, 60, 234, 0.1);
        background-color: white;
        transform: translateY(-2px);
    }
    
    .form-control::placeholder {
        color: rgba(0, 0, 0, 0.4);
        font-weight: 400;
    }

    .btn-primary {
        border-radius: var(--radius);
        padding: 14px 24px;
        font-weight: 600;
        font-size: 1rem;
        text-transform: uppercase;
        letter-spacing: 1px;
        background: var(--primary-color);
        color: white;
        border: none;
        transition: all 0.5s cubic-bezier(0.17, 0.67, 0.29, 0.99);
        position: relative;
        overflow: hidden;
        margin-top: 20px;
        width: 100%;
        box-shadow: var(--shadow);
    }
    
    .btn-primary:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-lg);
        background: var(--primary-light);
    }
    
    .form-label {
        font-weight: 600;
        color: var(--dark-gray);
        margin-bottom: 8px;
        font-size: 1rem;
    }
    
    .form-text {
        color: rgba(0, 0, 0, 0.6);
        font-size: 0.9rem;
    }
    
    .link-primary {
        color: var(--primary-color);
        text-decoration: none;
        position: relative;
        transition: all 0.3s ease;
    }
    
    .link-primary:hover {
        color: var(--primary-dark);
    }
    
    .form-footer {
        margin-top: 30px;
        text-align: center;
        color: var(--dark-gray);
        font-size: 1rem;
    }
    
    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    .form-group {
        animation: fadeIn 0.6s forwards;
        opacity: 0;
    }
    
    .form-group:nth-child(1) {
        animation-delay: 0.3s;
    }
    
    .form-group:nth-child(2) {
        animation-delay: 0.5s;
    }
    
    .form-check {
        animation: fadeIn 0.6s forwards;
        animation-delay: 0.7s;
        opacity: 0;
    }
    
    .content-section::before,
    .content-section::after {
        content: "";
        position: absolute;
        border-radius: 50%;
        background: linear-gradient(45deg, rgba(35, 60, 234, 0.02), rgba(35, 60, 234, 0.05));
        z-index: 0;
        animation: float 25s infinite alternate ease-in-out;
        pointer-events: none;
    }
    
    .content-section::before {
        width: 500px;
        height: 500px;
        top: -200px;
        right: -200px;
        animation-delay: 2s;
    }
    
    .content-section::after {
        width: 400px;
        height: 400px;
        bottom: -150px;
        left: -150px;
        animation-delay: 7s;
    }
</style>
{% endblock %}

{% block content %}
<div class="login-container content-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-10 col-lg-6">
                <div class="card-wrapper">
                    <div class="card">
                        <div class="card-header">
                            <h2>Welcome Back</h2>
                            <p class="hero-subtitle">Log in to access AI-powered medical imaging</p>
                        </div>
                        <div class="card-body">
                            {% with messages = get_flashed_messages(with_categories=true) %}
                                {% if messages %}
                                    {% for category, message in messages %}
                                        <div class="alert alert-{{ category }}">{{ message }}</div>
                                    {% endfor %}
                                {% endif %}
                            {% endwith %}
                            
                            <form method="POST" action="{{ url_for('login') }}">
                                <div class="form-group mb-4">
                                    <label for="username" class="form-label">Username</label>
                                    <input type="text" class="form-control" id="username" name="username" placeholder="Enter your username" required>
                                </div>
                                
                                <div class="form-group mb-4">
                                    <label for="password" class="form-label">Password</label>
                                    <div class="input-group">
                                        <input type="password" class="form-control" id="password" name="password" placeholder="Enter your password" required>
                                        <span class="input-group-text">
                                            <button type="button" class="password-toggle" onclick="togglePasswordVisibility()">
                                                <i class="far fa-eye" id="toggleIcon"></i>
                                            </button>
                                        </span>
                                    </div>
                                    <div class="d-flex justify-content-between mt-2">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" value="" id="remember">
                                            <label class="form-check-label" for="remember">
                                                Remember me
                                            </label>
                                        </div>
                                        <a href="#" class="link-primary">Forgot password?</a>
                                    </div>
                                </div>
                                
                                <button type="submit" class="btn btn-primary">
                                    <span>Log In</span>
                                </button>
                            </form>
                            
                            <div class="form-footer">
                                Don't have an account? <a href="{{ url_for('register') }}" class="link-primary">Sign up</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function togglePasswordVisibility() {
        const passwordInput = document.getElementById('password');
        const toggleIcon = document.getElementById('toggleIcon');
        
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            toggleIcon.classList.replace('fa-eye', 'fa-eye-slash');
        } else {
            passwordInput.type = 'password';
            toggleIcon.classList.replace('fa-eye-slash', 'fa-eye');
        }
    }
    
    // Add animation to form elements on load
    document.addEventListener('DOMContentLoaded', function() {
        const card = document.querySelector('.card');
        setTimeout(() => {
            card.style.opacity = '1';
            card.style.transform = 'translateY(0) scale(1)';
        }, 200);
    });
</script>
{% endblock %}
</file>

<file path="templates/pneumonia.html">

</file>

<file path="templates/profile.html">
{% extends "layout.html" %}
{% block title %}Profile - MedXpert{% endblock %}

{% block head %}
<style>
    .profile-container {
        max-width: 800px;
        margin: 120px auto 40px; /* Increased top margin from 40px to 80px */
    }
    
    .profile-header {
        background-color: rgba(35, 60, 234, 0.1);
        border-radius: 10px;
        padding: 1px; /* Increased padding from 30px to 40px */
        margin-bottom: 30px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08); /* Added subtle shadow for depth */
    }
    
    .profile-avatar {
        width: 120px; /* Increased from 100px to 120px */
        height: 120px; /* Increased from 100px to 120px */
        border-radius: 50%;
        background-color: #233cea;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3rem; /* Increased from 2.5rem */
        margin: 0 auto; /* Center the avatar horizontally in its column */
        box-shadow: 0 4px 10px rgba(35, 60, 234, 0.3); /* Added shadow for depth */
    }
    
    
    @media (max-width: 767px) {
        .profile-avatar {
            margin-bottom: 20px;
        }
        .profile-info {
            text-align: center;
            padding-left: 0;
        }
    }
    
    .profile-card {
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
    }
    
    .profile-card-header {
        padding: 20px;
        border-bottom: 1px solid #f0f0f0;
    }
    
    .profile-card-body {
        padding: 20px;
    }
    
    .profile-stat {
        text-align: center;
        background-color: white;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s;
    }
    
    .profile-stat:hover {
        transform: translateY(-5px);
    }
    
    .stat-value {
        font-size: 1.5rem;
        font-weight: 700;
        color: #233cea;
    }
    
    .stat-label {
        color: #6c757d;
        font-size: 0.9rem;
    }
    
    .activity-item {
        padding: 15px 0;
        border-bottom: 1px solid #f0f0f0;
    }
    
    .activity-item:last-child {
        border-bottom: none;
    }
    
    .activity-icon {
        width: 40px;
        height: 40px;
        background-color: rgba(35, 60, 234, 0.1);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #233cea;
    }
    
    .activity-time {
        font-size: 0.8rem;
        color: #6c757d;
    }
    
    .profile-security-tips {
        background-color: #f8f9fa;
        border-radius: 10px;
        padding: 20px;
        margin-top: 20px;
    }
    
    .profile-security-tips ul {
        padding-left: 20px;
        margin-bottom: 0;
    }
</style>
{% endblock %}

{% block content %}
<div class="profile-container">
    {% with messages = get_flashed_messages() %}
    {% if messages %}
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        {{ messages[0] }}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    {% endif %}
    {% endwith %}

    <!-- Profile Header -->
    <div class="profile-header">
        <div class="row align-items-center">
            <div class="col-md-3">
                <div class="profile-avatar">
                    {{ current_user.full_name[0]|upper if current_user.full_name else current_user.username[0]|upper }}
                </div>
            </div>
            <div class="col-md-9 profile-info">
                <h1 class="mb-2">{{ current_user.full_name or current_user.username }}</h1>
                <p class="text-muted mb-2"><i class="fas fa-envelope me-2"></i>{{ current_user.email }}</p>
                <p class="mb-0">
                    <i class="fas fa-calendar-alt me-2"></i> Member since {{ current_user.created_at.strftime('%B %d, %Y') }}
                </p>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <!-- Account Information -->
            <div class="profile-card">
                <div class="profile-card-header">
                    <h4 class="mb-0"><i class="fas fa-user me-2"></i>Account Information</h4>
                </div>
                <div class="profile-card-body">
                    <form method="POST" action="{{ url_for('profile') }}">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="username" class="form-label">Username</label>
                                <input type="text" class="form-control" id="username" name="username" value="{{ current_user.username }}" readonly>
                            </div>
                            <div class="col-md-6">
                                <label for="email" class="form-label">Email</label>
                                <input type="email" class="form-control" id="email" name="email" value="{{ current_user.email }}" required>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="full_name" class="form-label">Full Name</label>
                                <input type="text" class="form-control" id="full_name" name="full_name" value="{{ current_user.full_name or '' }}">
                            </div>
                            <div class="col-md-6">
                                <label for="phone" class="form-label">Phone Number</label>
                                <input type="tel" class="form-control" id="phone" name="phone" value="{{ current_user.phone or '' }}">
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="new_password" class="form-label">New Password</label>
                            <input type="password" class="form-control" id="new_password" name="new_password" placeholder="Leave blank to keep current password">
                            <div class="form-text">Password must be at least 8 characters long with letters and numbers.</div>
                        </div>
                        
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-2"></i>Save Changes
                        </button>
                    </form>
                </div>
            </div>

            <!-- Security Tips -->
            <div class="profile-security-tips">
                <h5 class="mb-3"><i class="fas fa-shield-alt me-2"></i>Security Tips</h5>
                <ul>
                    <li>Use a strong, unique password for your MedXpert account.</li>
                    <li>Never share your login credentials with others.</li>
                    <li>Update your contact information regularly to ensure account recovery options are current.</li>
                    <li>Be cautious of phishing attempts - MedXpert will never ask for your password via email.</li>
                </ul>
            </div>
        </div>
        
        <div class="col-md-4">
            <!-- Stats -->
            <div class="row gy-3">
                <div class="col-12">
                    <div class="profile-stat">
                        <div class="stat-value">4</div>
                        <div class="stat-label">MEDICAL MODELS</div>
                    </div>
                </div>
                <div class="col-6">
                    <div class="profile-stat">
                        <div class="stat-value">7</div>
                        <div class="stat-label">ANALYSES</div>
                    </div>
                </div>
                <div class="col-6">
                    <div class="profile-stat">
                        <div class="stat-value">2</div>
                        <div class="stat-label">REPORTS</div>
                    </div>
                </div>
            </div>
            
            <!-- Recent Activity -->
            <div class="profile-card mt-3">
                <div class="profile-card-header">
                    <h4 class="mb-0"><i class="fas fa-history me-2"></i>Recent Activity</h4>
                </div>
                <div class="profile-card-body p-0">
                    <div class="activity-item d-flex align-items-center p-3">
                        <div class="activity-icon me-3">
                            <i class="fas fa-sign-in-alt"></i>
                        </div>
                        <div>
                            <div>Logged in</div>
                            <div class="activity-time">{% if current_user.last_login %}{{ current_user.last_login.strftime('%d %b %Y, %H:%M') }}{% else %}Not available{% endif %}</div>
                        </div>
                    </div>
                    <div class="activity-item d-flex align-items-center p-3">
                        <div class="activity-icon me-3">
                            <i class="fas fa-brain"></i>
                        </div>
                        <div>
                            <div>MRI Analysis</div>
                            <div class="activity-time">{% if current_user.last_login %}{{ current_user.last_login.strftime('%d %b %Y, %H:%M') }}{% else %}Not available{% endif %}</div>
                        </div>
                    </div>
                    <div class="activity-item d-flex align-items-center p-3">
                        <div class="activity-icon me-3">
                            <i class="fas fa-edit"></i>
                        </div>
                        <div>
                            <div>Profile Updated</div>
                            <div class="activity-time">{% if current_user.last_login %}{{ current_user.last_login.strftime('%d %b %Y, %H:%M') }}{% else %}Not available{% endif %}</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}
</file>

<file path="templates/register.html">
{% extends "layout.html" %}

{% block title %}Register - MedXpert{% endblock %}

{% block head %}
<style>
    .register-container {
        min-height: 100vh;
        background: var(--light-gray);
        padding-top: 100px;
        padding-bottom: 5rem;
        position: relative;
        overflow: hidden;
    }
    
    .card-wrapper {
        position: relative;
        z-index: 10;
        transform-style: preserve-3d;
        perspective: 1000px;
    }
    
    .card {
        border: none;
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        overflow: hidden;
        margin-top: 20px;
        position: relative;
        z-index: 10;
        background: white;
        transform: translateZ(0) scale(0.98);
        transition: all 0.5s cubic-bezier(0.17, 0.67, 0.29, 0.99);
        opacity: 0;
    }
    
    .card:hover {
        transform: translateY(-10px) scale(1.01);
        box-shadow: var(--shadow-lg);
    }
    
    .card-header {
        background: var(--primary-color);
        padding: 40px 30px;
        text-align: center;
        border-bottom: none;
        position: relative;
        overflow: hidden;
    }
    
    .card-header h2 {
        margin-bottom: 0;
        color: white;
        font-weight: 700;
        font-size: 2.5rem;
        letter-spacing: -1px;
    }
    
    .hero-subtitle {
        color: rgba(255, 255, 255, 0.85);
        font-size: 1.1rem;
        margin-top: 15px;
    }
    
    .card-body {
        padding: 40px;
    }

    .form-control {
        border-radius: var(--radius);
        padding: 12px 20px;
        height: auto;
        background-color: var(--light-gray);
        border: 1px solid rgba(0, 0, 0, 0.1);
        color: var(--dark-gray);
        transition: all 0.3s ease;
        margin-bottom: 20px;
        font-size: 1rem;
    }
    
    .input-group .form-control {
        margin-bottom: 0;
    }
    
    .input-group {
        margin-bottom: 20px;
    }

    .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(35, 60, 234, 0.1);
        background-color: white;
        transform: translateY(-2px);
    }
    
    .form-control::placeholder {
        color: rgba(0, 0, 0, 0.4);
        font-weight: 400;
    }

    .btn-primary {
        border-radius: var(--radius);
        padding: 14px 24px;
        font-weight: 600;
        font-size: 1rem;
        text-transform: uppercase;
        letter-spacing: 1px;
        background: var(--primary-color);
        color: white;
        border: none;
        transition: all 0.5s cubic-bezier(0.17, 0.67, 0.29, 0.99);
        position: relative;
        overflow: hidden;
        margin-top: 20px;
        width: 100%;
        box-shadow: var(--shadow);
    }
    
    .btn-primary:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-lg);
        background: var(--primary-light);
    }
    
    .form-label {
        font-weight: 600;
        color: var(--dark-gray);
        margin-bottom: 8px;
        font-size: 1rem;
    }
    
    .input-group-text {
        background-color: var(--light-gray);
        border: 1px solid rgba(0, 0, 0, 0.1);
        border-left: none;
        color: var(--dark-gray);
        cursor: pointer;
        border-top-right-radius: var(--radius);
        border-bottom-right-radius: var(--radius);
        padding: 0 15px;
        display: flex;
        align-items: center;
    }
    
    .password-toggle {
        background: none;
        border: none;
        color: rgba(0, 0, 0, 0.5);
        transition: all 0.3s ease;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 24px;
        height: 24px;
    }
    
    .password-toggle i {
        font-size: 14px;
        line-height: 1;
    }
    
    .password-toggle:hover {
        color: var(--primary-color);
    }
    
    .form-text {
        color: rgba(0, 0, 0, 0.6);
        font-size: 0.9rem;
    }
    
    .link-primary {
        color: var(--primary-color);
        text-decoration: none;
        position: relative;
        transition: all 0.3s ease;
    }
    
    .link-primary:hover {
        color: var(--primary-dark);
    }
    
    .form-footer {
        margin-top: 30px;
        text-align: center;
        color: var(--dark-gray);
        font-size: 1rem;
    }
    
    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    .form-row {
        display: flex;
        gap: 20px;
    }
    
    .form-row .form-group {
        flex: 1;
        animation: fadeIn 0.6s forwards;
        opacity: 0;
    }
    
    .form-row .form-group:nth-child(1) {
        animation-delay: 0.3s;
    }
    
    .form-row .form-group:nth-child(2) {
        animation-delay: 0.5s;
    }
    
    .form-group {
        animation: fadeIn 0.6s forwards;
        opacity: 0;
    }
    
    .form-group:nth-child(3) {
        animation-delay: 0.7s;
    }
    
    .form-group:nth-child(4) {
        animation-delay: 0.9s;
    }
    
    .form-group:nth-child(5) {
        animation-delay: 1.1s;
    }
    
    .form-check {
        animation: fadeIn 0.6s forwards;
        animation-delay: 1.3s;
        opacity: 0;
    }
    
    .password-strength {
        height: 5px;
        border-radius: 10px;
        margin-top: 8px;
        transition: all 0.3s ease;
        background: rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }
    
    .password-strength-bar {
        height: 100%;
        width: 0;
        transition: all 0.3s ease;
        border-radius: 10px;
    }
    
    .strength-weak {
        background: linear-gradient(to right, #ff4d4d, #ff6666);
        width: 25%;
    }
    
    .strength-medium {
        background: linear-gradient(to right, #ffaa00, #ffc966);
        width: 50%;
    }
    
    .strength-strong {
        background: linear-gradient(to right, #2ecc71, #7ed6a9);
        width: 75%;
    }
    
    .strength-very-strong {
        background: linear-gradient(to right, #00c853, #69f0ae);
        width: 100%;
    }
    
    .strength-label {
        font-size: 0.8rem;
        color: var(--dark-gray);
        margin-top: 5px;
        text-align: right;
    }
</style>
{% endblock %}

{% block content %}
<div class="register-container content-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-6">
                <div class="card-wrapper">
                    <div class="card">
                        <div class="card-header">
                            <h2>Create Account</h2>
                            <p class="hero-subtitle">Join the future of medical imaging analysis</p>
                        </div>
                        <div class="card-body">
                            {% with messages = get_flashed_messages(with_categories=true) %}
                                {% if messages %}
                                    {% for category, message in messages %}
                                        <div class="alert alert-{{ category }}">{{ message }}</div>
                                    {% endfor %}
                                {% endif %}
                            {% endwith %}
                            
                            <form method="POST" action="{{ url_for('register') }}">
                                <div class="form-row">
                                    <div class="form-group">
                                        <label for="first_name" class="form-label">First Name</label>
                                        <input type="text" class="form-control" id="first_name" name="first_name" placeholder="Enter first name" required>
                                    </div>
                                    
                                    <div class="form-group">
                                        <label for="last_name" class="form-label">Last Name</label>
                                        <input type="text" class="form-control" id="last_name" name="last_name" placeholder="Enter last name" required>
                                    </div>
                                </div>
                                
                                <div class="form-group mb-4">
                                    <label for="username" class="form-label">Username</label>
                                    <input type="text" class="form-control" id="username" name="username" placeholder="Choose a username" required>
                                </div>
                                
                                <div class="form-group mb-4">
                                    <label for="email" class="form-label">Email Address</label>
                                    <input type="email" class="form-control" id="email" name="email" placeholder="Enter your email" required>
                                </div>
                                
                                <div class="form-group mb-4">
                                    <label for="password" class="form-label">Password</label>
                                    <div class="input-group">
                                        <input type="password" class="form-control" id="password" name="password" placeholder="Create a password" required onkeyup="checkPasswordStrength()">
                                        <span class="input-group-text">
                                            <button type="button" class="password-toggle" onclick="togglePasswordVisibility('password', 'toggleIcon1')">
                                                <i class="far fa-eye" id="toggleIcon1"></i>
                                            </button>
                                        </span>
                                    </div>
                                    <div class="password-strength" id="passwordStrength">
                                        <div class="password-strength-bar" id="passwordStrengthBar"></div>
                                    </div>
                                    <div class="strength-label" id="strengthLabel"></div>
                                </div>
                                
                                <div class="form-group mb-4">
                                    <label for="confirm_password" class="form-label">Confirm Password</label>
                                    <div class="input-group">
                                        <input type="password" class="form-control" id="confirm_password" name="confirm_password" placeholder="Confirm your password" required>
                                        <span class="input-group-text">
                                            <button type="button" class="password-toggle" onclick="togglePasswordVisibility('confirm_password', 'toggleIcon2')">
                                                <i class="far fa-eye" id="toggleIcon2"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                                
                                <div class="mb-4 form-check">
                                    <input class="form-check-input" type="checkbox" value="" id="terms" required>
                                    <label class="form-check-label" for="terms">
                                        I agree to the <a href="#" class="link-primary">Terms of Service</a> and <a href="#" class="link-primary">Privacy Policy</a>
                                    </label>
                                </div>
                                
                                <button type="submit" class="btn btn-primary">
                                    <span>Create Account</span>
                                </button>
                            </form>
                            
                            <div class="form-footer">
                                Already have an account? <a href="{{ url_for('login') }}" class="link-primary">Log in</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function togglePasswordVisibility(fieldId, iconId) {
        const passwordInput = document.getElementById(fieldId);
        const toggleIcon = document.getElementById(iconId);
        
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            toggleIcon.classList.replace('fa-eye', 'fa-eye-slash');
        } else {
            passwordInput.type = 'password';
            toggleIcon.classList.replace('fa-eye-slash', 'fa-eye');
        }
    }
    
    function checkPasswordStrength() {
        const password = document.getElementById('password').value;
        const strengthBar = document.getElementById('passwordStrengthBar');
        const strengthLabel = document.getElementById('strengthLabel');
        
        // Remove all classes
        strengthBar.classList.remove('strength-weak', 'strength-medium', 'strength-strong', 'strength-very-strong');
        
        // Check password strength
        let strength = 0;
        if (password.length >= 8) strength += 1;
        if (password.match(/[a-z]/) && password.match(/[A-Z]/)) strength += 1;
        if (password.match(/\d/)) strength += 1;
        if (password.match(/[^a-zA-Z\d]/)) strength += 1;
        
        // Update strength bar and label
        switch (strength) {
            case 0:
                strengthBar.style.width = '0';
                strengthLabel.textContent = '';
                break;
            case 1:
                strengthBar.classList.add('strength-weak');
                strengthLabel.textContent = 'Weak';
                break;
            case 2:
                strengthBar.classList.add('strength-medium');
                strengthLabel.textContent = 'Medium';
                break;
            case 3:
                strengthBar.classList.add('strength-strong');
                strengthLabel.textContent = 'Strong';
                break;
            case 4:
                strengthBar.classList.add('strength-very-strong');
                strengthLabel.textContent = 'Very Strong';
                break;
        }
    }
    
    // Add animation to form elements on load
    document.addEventListener('DOMContentLoaded', function() {
        const card = document.querySelector('.card');
        setTimeout(() => {
            card.style.opacity = '1';
            card.style.transform = 'translateY(0) scale(1)';
        }, 200);
    });
</script>
{% endblock %}
</file>

<file path="templates/skin_example.html">
{% extends "layout.html" %}

{% block title %}Skin Cancer Detection Example - MedXpert{% endblock %}

{% block content %}
<style>
.example-hero {
    background: linear-gradient(135deg, #1a2cb3, #233cea 40%, #3346e8);
    color: white;
    padding: 120px 0 100px;
    margin-top: 0;
    text-align: center;
}

.example-hero h1 {
    font-size: 3.5rem;
    font-weight: 800;
    margin-bottom: 1.5rem;
}

.example-hero p {
    font-size: 1.4rem;
    opacity: 0.9;
    max-width: 800px;
    margin: 0 auto;
    line-height: 1.6;
}

.example-section {
    padding: 100px 0;
    background: #f8f9fa;
}

.model-stats {
    display: flex;
    gap: 30px;
    flex-wrap: wrap;
    justify-content: center;
    margin-bottom: 50px;
}

.stat-item {
    background: rgba(26, 44, 179, 0.1);
    padding: 20px 30px;
    border-radius: 15px;
    text-align: center;
}

.stat-label {
    font-size: 1.1rem;
    color: #1a2cb3;
    margin-bottom: 8px;
}

.stat-value {
    font-size: 1.4rem;
    font-weight: 700;
    color: #1a2cb3;
}

.example-showcase {
    background: white;
    border-radius: 20px;
    padding: 40px;
    box-shadow: 0 20px 60px rgba(26, 44, 179, 0.08);
}

.example-title {
    text-align: center;
    font-size: 1.5rem;
    font-weight: 600;
    color: #1a2cb3;
    margin-bottom: 30px;
}

.before-after-container {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    gap: 40px;
    max-width: 1200px;
    margin: 0 auto;
    align-items: center;
}

.image-container {
    text-align: center;
    background: white;
    padding: 35px;
    border-radius: 20px;
    box-shadow: 0 15px 45px rgba(0,0,0,0.08);
    transition: all 0.3s ease;
}

.image-container:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 60px rgba(0,0,0,0.12);
}

.image-label {
    font-weight: 700;
    color: #1a2cb3;
    margin-bottom: 20px;
    font-size: 1.3rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.arrow-icon {
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    color: white;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
}

.try-model-btn {
    display: block;
    width: fit-content;
    margin: 50px auto 0;
    background: linear-gradient(135deg, #1a2cb3, #233cea);
    color: white;
    padding: 15px 40px;
    border-radius: 30px;
    text-decoration: none;
    font-weight: 600;
    font-size: 1.2rem;
    transition: all 0.3s ease;
    box-shadow: 0 10px 30px rgba(26, 44, 179, 0.2);
}

.try-model-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 15px 40px rgba(26, 44, 179, 0.3);
    color: white;
    text-decoration: none;
}

@media (max-width: 768px) {
    .before-after-container {
        grid-template-columns: 1fr;
        gap: 30px;
    }
    
    .arrow-icon {
        transform: rotate(90deg);
        margin: 0 auto;
    }
    
    .image-container {
        padding: 25px;
    }
}
</style>

<!-- Hero Section -->
<section class="example-hero">
    <div class="container">
        <h1>Skin Cancer Detection</h1>
        <p>Dermoscopic image analysis for melanoma screening using advanced AI technology</p>
    </div>
</section>

<!-- Example Section -->
<section class="example-section">
    <div class="container">
        <!-- Model Stats -->
        <div class="model-stats">
            <div class="stat-item">
                <div class="stat-label">Accuracy</div>
                <div class="stat-value">93%</div>
            </div>
            <div class="stat-item">
                <div class="stat-label">Architecture</div>
                <div class="stat-value">ResNet</div>
            </div>
            <div class="stat-item">
                <div class="stat-label">Classification</div>
                <div class="stat-value">Binary</div>
            </div>
        </div>

        <!-- Example Showcase -->
        <div class="example-showcase">
            <h4 class="example-title">Melanoma Screening Example</h4>
            <div class="before-after-container">
                <div class="image-container">
                    <div class="image-label">Dermoscopic Image</div>
                    <img src="{{ url_for('static', filename='images/skin.png') }}" alt="Skin Lesion Original" style="width: 100%; aspect-ratio: 1/1; object-fit: contain; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                    <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">High-resolution dermoscopic image for analysis</div>
                </div>
                
                <div class="arrow-icon">
                    <i class="fas fa-arrow-right"></i>
                </div>
                
                <div class="image-container">
                    <div class="image-label">Risk Assessment</div>
                    <div style="position: relative; width: 100%; aspect-ratio: 1/1; border-radius: 16px; border: 3px solid rgba(26, 44, 179, 0.15); box-shadow: 0 8px 25px rgba(26, 44, 179, 0.1); transition: all 0.3s ease; cursor: pointer; overflow: hidden;" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 12px 35px rgba(26, 44, 179, 0.2)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 8px 25px rgba(26, 44, 179, 0.1)'">
                        <img src="{{ url_for('static', filename='images/skin.png') }}" alt="Skin Lesion with Malignant Detection" style="width: 100%; height: 100%; object-fit: contain;">
                        <div style="position: absolute; top: 20px; right: 20px; background: rgba(220, 53, 69, 0.9); color: white; padding: 8px 15px; border-radius: 20px; font-weight: 700; font-size: 1.1rem; backdrop-filter: blur(10px);">
                            MALIGNANT
                        </div>
                        <div style="position: absolute; bottom: 20px; left: 20px; background: rgba(220, 53, 69, 0.9); color: white; padding: 5px 12px; border-radius: 15px; font-weight: 600; backdrop-filter: blur(10px);">
                            100% Confidence
                        </div>
                    </div>
                    <div class="image-description" style="font-size: 1rem; color: #666; margin-top: 15px; line-height: 1.5;">AI risk assessment indicating 100% malignancy probability</div>
                </div>
            </div>
        </div>

        <!-- Try Model Button -->
        <a href="{{ url_for('skin') }}" class="try-model-btn">
            <i class="fas fa-play"></i>
            Try This Model
        </a>
    </div>
</section>
{% endblock %}
</file>

<file path="templates/skin.html">
{% extends "layout.html" %}

{% block title %}MedXpert - Skin Cancer Detection{% endblock %}

{% block head %}
<style>
    :root {
        --bg-dark: #1a1a1a;
        --bg-darker: #141414;
        --bg-lighter: #2a2a2a;
        --accent-blue: #0066cc;
        --accent-green: #00cc66;
        --text-primary: #ffffff;
        --text-secondary: #b3b3b3;
        --border-radius: 12px;
        --transition: all 0.3s ease;
    }

    body {
        background-color: var(--bg-dark);
        color: var(--text-primary);
    }

    .model-header {
        background: linear-gradient(45deg, var(--bg-darker), var(--bg-dark));
        border-bottom: 2px solid var(--accent-blue);
        padding: 2rem 0;
    }

    .model-header h1 {
        color: var(--text-primary);
        font-weight: 600;
        margin-bottom: 1rem;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .model-header .lead {
        color: var(--text-secondary);
    }

    .card {
        background: var(--bg-darker);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: var(--border-radius);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
        transition: var(--transition);
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 48px rgba(0, 0, 0, 0.3);
    }

    .card-header {
        background: linear-gradient(45deg, var(--accent-blue), #0052a3);
        color: var(--text-primary);
        border-radius: var(--border-radius) var(--border-radius) 0 0 !important;
        padding: 1.5rem;
    }

    .card-body {
        background: var(--bg-darker);
        border-radius: 0 0 var(--border-radius) var(--border-radius);
    }

    .form-control {
        background: var(--bg-lighter);
        border: 1px solid rgba(255, 255, 255, 0.1);
        color: var(--text-primary);
        border-radius: var(--border-radius);
        padding: 0.75rem 1rem;
        transition: var(--transition);
    }

    .form-control:focus {
        background: var(--bg-lighter);
        border-color: var(--accent-blue);
        color: var(--text-primary);
        box-shadow: 0 0 0 3px rgba(0, 102, 204, 0.25);
    }

    .form-text {
        color: var(--text-secondary);
    }

    .btn-primary {
        background: var(--accent-blue);
        border: none;
        border-radius: var(--border-radius);
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: var(--transition);
    }

    .btn-primary:hover {
        background: #0052a3;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 102, 204, 0.3);
    }

    .result-container {
        background: var(--bg-darker);
        border-radius: var(--border-radius);
        padding: 2rem;
        margin-top: 2rem;
    }

    .result-image {
        border-radius: var(--border-radius);
        border: 2px solid var(--accent-blue);
        overflow: hidden;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
    }

    .confidence-meter {
        background: var(--bg-lighter);
        height: 10px;
        border-radius: 5px;
        overflow: hidden;
        margin: 1rem 0;
    }

    .confidence-value {
        height: 100%;
        border-radius: 5px;
        transition: width 0.6s ease;
    }

    .confidence-high { background: linear-gradient(45deg, #ff4444, #ff0000); }
    .confidence-medium { background: linear-gradient(45deg, #ffa726, #fb8c00); }
    .confidence-low { background: linear-gradient(45deg, #66bb6a, #43a047); }

    .classification-box {
        background: var(--bg-lighter);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        margin: 1rem 0;
        border-left: 4px solid;
        transition: var(--transition);
    }

    .classification-malignant {
        border-color: #ff4444;
        background: rgba(255, 68, 68, 0.1);
    }

    .classification-benign {
        border-color: #00cc66;
        background: rgba(0, 204, 102, 0.1);
    }

    .feature-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-top: 2rem;
    }

    .feature-card {
        background: var(--bg-lighter);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        transition: var(--transition);
    }

    .feature-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
    }

    .feature-icon {
        color: var(--accent-blue);
        font-size: 2.5rem;
        margin-bottom: 1rem;
    }

    .advice-box {
        background: var(--bg-lighter);
        border-left: 4px solid var(--accent-green);
        border-radius: 0 var(--border-radius) var(--border-radius) 0;
        padding: 2rem;
        margin-top: 2rem;
    }

    .advice-box h5 {
        color: var(--accent-green);
        margin-bottom: 1rem;
    }

    .prevention-list li {
        color: var(--text-secondary);
        margin-bottom: 1rem;
        padding-left: 2rem;
        position: relative;
    }

    .prevention-list li:before {
        content: "\f058";
        font-family: "Font Awesome 5 Free";
        font-weight: 900;
        color: var(--accent-green);
        position: absolute;
        left: 0;
    }

    /* Loading animation */
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(26, 26, 26, 0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .loading-spinner {
        width: 50px;
        height: 50px;
        border: 3px solid var(--bg-lighter);
        border-top: 3px solid var(--accent-blue);
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* Tool tips */
    [data-tooltip] {
        position: relative;
        cursor: help;
    }

    [data-tooltip]:before {
        content: attr(data-tooltip);
        position: absolute;
        bottom: 100%;
        left: 50%;
        transform: translateX(-50%);
        padding: 0.5rem 1rem;
        background: var(--bg-darker);
        color: var(--text-primary);
        border-radius: var(--border-radius);
        font-size: 0.875rem;
        white-space: nowrap;
        opacity: 0;
        visibility: hidden;
        transition: var(--transition);
    }

    [data-tooltip]:hover:before {
        opacity: 1;
        visibility: visible;
    }
</style>
{% endblock %}

{% block content %}
<div class="loading-overlay d-none">
    <div class="loading-spinner"></div>
</div>

<section class="model-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-12 text-center">
                <h1><i class="fas fa-microscope me-2"></i>Skin Cancer Detection Lab</h1>
                <p class="lead">Advanced dermoscopic analysis powered by artificial intelligence</p>
            </div>
        </div>
    </div>
</section>

<section class="py-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card mb-4">
                    <div class="card-header">
                        <h3 class="mb-0">
                            <i class="fas fa-upload me-2"></i>Upload Specimen Image
                        </h3>
                    </div>
                    <div class="card-body">
                        <form id="skinUploadForm" enctype="multipart/form-data">
                            <div class="mb-4">
                                <label for="skinFile" class="form-label">Select dermoscopic image for analysis</label>
                                <input class="form-control" type="file" id="skinFile" name="file" accept=".jpg,.jpeg,.png" data-tooltip="Supported formats: JPG, JPEG, PNG">
                                <div class="form-text">For optimal results, ensure the image is well-lit and focused on the lesion area</div>
                            </div>
                            <button type="submit" class="btn btn-primary" id="analyzeSkinBtn">
                                <i class="fas fa-microscope me-2"></i>
                                <span class="button-text">Begin Analysis</span>
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                            </button>
                        </form>
                    </div>
                </div>

                <!-- Results will be dynamically inserted here -->
                <div id="analysisResults" class="d-none">
                    <!-- Content will be populated by JavaScript -->
                </div>
            </div>
        </div>
    </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('skinUploadForm');
    const loadingOverlay = document.querySelector('.loading-overlay');
    const analysisResults = document.getElementById('analysisResults');
    const submitButton = document.getElementById('analyzeSkinBtn');
    const spinner = submitButton.querySelector('.spinner-border');
    const buttonText = submitButton.querySelector('.button-text');

    form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Show loading state
        loadingOverlay.classList.remove('d-none');
        spinner.classList.remove('d-none');
        buttonText.textContent = 'Analyzing...';
        submitButton.disabled = true;

        try {
            // Your existing form submission logic here
            // ...

            // After successful analysis, update UI
            analysisResults.classList.remove('d-none');
            
        } catch (error) {
            console.error('Error:', error);
            // Handle error appropriately
        } finally {
            // Hide loading state
            loadingOverlay.classList.add('d-none');
            spinner.classList.add('d-none');
            buttonText.textContent = 'Begin Analysis';
            submitButton.disabled = false;
        }
    });
});
</script>
{% endblock %}
</file>

<file path="testbilb.ipynb">

</file>

</files>
